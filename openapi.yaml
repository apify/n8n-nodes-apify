openapi: 3.0.0
info:
  title: Apify API
  description: |-
   .
  contact: {}
  version: ''
servers:
  - url: 'https://api.apify.com'
    variables: {}
paths:
  /v2/acts:
    get:
      tags:
        - Actors/Actor collection
      summary: Get list of actors
      description: |
        Gets the list of all Actors that the user created or used. The response is a
        list of objects, where each object contains a basic information about a single Actor.

        To only get Actors created by the user, add the `my=1` query parameter.

        The endpoint supports pagination using the `limit` and `offset` parameters
        and it will not return more than 1000 records.

        By default, the records are sorted by the `createdAt` field in ascending
        order, therefore you can use pagination to incrementally fetch all Actors while new
        ones are still being created. To sort the records in descending order, use the `desc=1` parameter.
      operationId: acts_get
      parameters:
        - name: my
          in: query
          description: |
            If `true` or `1` then the returned list only contains Actors owned by the user. The default value is `false`.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: offset
          in: query
          description: |
            Number of records that should be skipped at the start. The default value
            is `0`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 10
        - name: limit
          in: query
          description: |
            Maximum number of records to return. The default value as well as the
            maximum is `1000`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 99
        - name: desc
          in: query
          description: |
            If `true` or `1` then the objects are sorted by the `createdAt` field in
            descending order. By default, they are sorted in ascending order.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: GetListOfActorsResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    allOf:
                      - $ref: '#/paths/~1v2~1actor-tasks/get/responses/200/content/application~1json/schema/properties/data/allOf/0'
                      - type: object
                        required:
                          - items
                        properties:
                          items:
                            type: array
                            items:
                              title: ActorShort
                              required:
                                - id
                                - createdAt
                                - modifiedAt
                                - name
                                - username
                              type: object
                              properties:
                                id:
                                  type: string
                                  example: br9CKmk457
                                createdAt:
                                  type: string
                                  example: '2019-10-29T07:34:24.202Z'
                                modifiedAt:
                                  type: string
                                  example: '2019-10-30T07:34:24.202Z'
                                name:
                                  type: string
                                  example: MyAct
                                username:
                                  type: string
                                  example: janedoe
              example:
                data:
                  total: 2
                  count: 2
                  offset: 0
                  limit: 1000
                  desc: false
                  items:
                    - id: br9CKmk457
                      createdAt: '2019-10-29T07:34:24.202Z'
                      modifiedAt: '2019-10-30T07:34:24.202Z'
                      name: MyAct
                      username: janedoe
                    - id: ksiEKo23pz
                      createdAt: '2019-11-30T07:34:24.202Z'
                      modifiedAt: '2019-12-12T07:34:24.202Z'
                      name: MySecondAct
                      username: janedoe
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/actor-collection/get-list-of-actors'
      x-js-parent: ActorCollectionClient
      x-js-name: list
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/ActorCollectionClient#list'
      x-py-parent: ActorCollectionClientAsync
      x-py-name: list
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/ActorCollectionClientAsync#list'
    post:
      tags:
        - Actors/Actor collection
      summary: Create actor
      description: |
        Creates a new Actor with settings specified in an Actor object passed as
        JSON in the POST payload.

        The response is the full Actor object as returned by the

        [Get Actor](#/reference/actors/actor-object/get-actor) endpoint.


        The HTTP request must have the `Content-Type: application/json` HTTP header!


        The Actor needs to define at least one version of the source code.

        For more information, see [Version object](#/reference/actors/version-object).


        If you want to make your Actor
        [public](https://docs.apify.com/platform/actors/publishing) using `isPublic:
        true`, you will need to provide the Actor's `title` and the `categories`
        under which that Actor will be classified in Apify Store. For this, it's
        best to use the [constants from our `apify-shared-js`
        package](https://github.com/apify/apify-shared-js/blob/2d43ebc41ece9ad31cd6525bd523fb86939bf860/packages/consts/src/consts.ts#L452-L471).
      operationId: acts_post
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              title: CreateActorRequest
              type: object
              properties:
                name:
                  type: string
                  nullable: true
                  example: MyActor
                description:
                  type: string
                  nullable: true
                  example: My favourite actor!
                title:
                  type: string
                  nullable: true
                  example: My actor
                isPublic:
                  type: boolean
                  nullable: true
                  example: false
                seoTitle:
                  type: string
                  nullable: true
                  example: My actor
                seoDescription:
                  type: string
                  nullable: true
                  example: My actor is the best
                restartOnError:
                  type: boolean
                  nullable: true
                  example: false
                versions:
                  type: array
                  items:
                    title: Version
                    type: object
                    required:
                      - versionNumber
                      - sourceType
                      - buildTag
                    properties:
                      versionNumber:
                        type: string
                        example: '0.0'
                      sourceType:
                        oneOf:
                          - nullable: true
                          - $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1versions/post/requestBody/content/application~1json/schema/properties/sourceType/oneOf/1'
                      envVars:
                        type: array
                        items:
                          $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1versions/post/requestBody/content/application~1json/schema/properties/envVars/items'
                        description: ''
                        nullable: true
                      applyEnvVarsToBuild:
                        type: boolean
                        nullable: true
                        example: false
                      buildTag:
                        type: string
                        example: latest
                      sourceFiles:
                        $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1versions/post/requestBody/content/application~1json/schema/properties/sourceFiles'
                  description: ''
                  nullable: true
                categories:
                  type: array
                  items:
                    type: string
                  description: ''
                  nullable: true
                defaultRunOptions:
                  oneOf:
                    - nullable: true
                    - title: defaultRunOptions
                      required:
                        - build
                        - timeoutSecs
                        - memoryMbytes
                      type: object
                      properties:
                        build:
                          type: string
                          example: latest
                        timeoutSecs:
                          type: number
                          example: 3600
                        memoryMbytes:
                          type: number
                          example: 2048
            example:
              name: MyActor
              description: My favourite Actor!
              title: My Actor
              isPublic: false
              seoTitle: My Actor
              seoDescription: My Actor is the best
              restartOnError: false
              versions:
                - versionNumber: '0.0'
                  sourceType: SOURCE_FILES
                  envVars:
                    - name: DOMAIN
                      value: 'http://example.com'
                      isSecret: false
                    - name: SECRET_PASSWORD
                      value: MyTopSecretPassword123
                      isSecret: true
                  applyEnvVarsToBuild: false
                  buildTag: latest
                  sourceFiles: []
              categories: []
              defaultRunOptions:
                build: latest
                timeoutSecs: 3600
                memoryMbytes: 2048
        required: true
      responses:
        '201':
          description: ''
          headers:
            Location:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 'https://api.apify.com/v2/acts/zdc3Pyhyz3m8vjDeM'
          content:
            application/json:
              schema:
                title: CreateActorResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    title: Actor
                    required:
                      - id
                      - userId
                      - name
                      - username
                      - isPublic
                      - createdAt
                      - modifiedAt
                      - stats
                      - versions
                      - defaultRunOptions
                      - deploymentKey
                    type: object
                    properties:
                      id:
                        type: string
                        example: zdc3Pyhyz3m8vjDeM
                      userId:
                        type: string
                        example: wRsJZtadYvn4mBZmm
                      name:
                        type: string
                        example: MyActor
                      username:
                        type: string
                        example: jane35
                      description:
                        type: string
                        nullable: true
                        example: My favourite actor!
                      restartOnError:
                        type: boolean
                        nullable: true
                        example: false
                      isPublic:
                        type: boolean
                        example: false
                      createdAt:
                        type: string
                        example: '2019-07-08T11:27:57.401Z'
                      modifiedAt:
                        type: string
                        example: '2019-07-08T14:01:05.546Z'
                      stats:
                        title: ActorStats
                        required:
                          - totalBuilds
                          - totalRuns
                          - totalUsers
                          - totalUsers7Days
                          - totalUsers30Days
                          - totalUsers90Days
                          - totalMetamorphs
                          - lastRunStartedAt
                        type: object
                        properties:
                          totalBuilds:
                            type: number
                            example: 9
                          totalRuns:
                            type: number
                            example: 16
                          totalUsers:
                            type: number
                            example: 6
                          totalUsers7Days:
                            type: number
                            example: 2
                          totalUsers30Days:
                            type: number
                            example: 6
                          totalUsers90Days:
                            type: number
                            example: 6
                          totalMetamorphs:
                            type: number
                            example: 2
                          lastRunStartedAt:
                            type: string
                            example: '2019-07-08T14:01:05.546Z'
                      versions:
                        type: array
                        items:
                          $ref: '#/paths/~1v2~1acts/post/requestBody/content/application~1json/schema/properties/versions/items'
                        description: ''
                      defaultRunOptions:
                        $ref: '#/paths/~1v2~1acts/post/requestBody/content/application~1json/schema/properties/defaultRunOptions/oneOf/1'
                      exampleRunInput:
                        oneOf:
                          - nullable: true
                          - title: exampleRunInput
                            required:
                              - body
                              - contentType
                            type: object
                            properties:
                              body:
                                type: string
                                example:
                                  helloWorld: 123
                              contentType:
                                type: string
                                example: application/json; charset=utf-8
                      isDeprecated:
                        type: boolean
                        nullable: true
                        example: false
                      deploymentKey:
                        type: string
                        example: ssh-rsa AAAA ...
                      title:
                        type: string
                        nullable: true
                        example: My Actor
                      taggedBuilds:
                        oneOf:
                          - nullable: true
                          - title: taggedBuilds
                            type: object
                            properties:
                              latest:
                                oneOf:
                                  - nullable: true
                                  - type: object
                                    properties:
                                      buildId:
                                        type: string
                                        nullable: true
                                        example: z2EryhbfhgSyqj6Hn
                                      buildNumber:
                                        type: string
                                        nullable: true
                                        example: 0.0.2
                                      finishedAt:
                                        type: string
                                        nullable: true
                                        example: '2019-06-10T11:15:49.286Z'
              example:
                data:
                  id: zdc3Pyhyz3m8vjDeM
                  userId: wRsJZtadYvn4mBZmm
                  name: MyActor
                  username: jane35
                  description: My favourite Actor!
                  restartOnError: false
                  isPublic: false
                  createdAt: '2019-07-08T11:27:57.401Z'
                  modifiedAt: '2019-07-08T14:01:05.546Z'
                  stats:
                    totalBuilds: 9
                    totalRuns: 16
                    totalUsers: 6
                    totalUsers7Days: 2
                    totalUsers30Days: 6
                    totalUsers90Days: 6
                    totalMetamorphs: 2
                    lastRunStartedAt: '2019-07-08T14:01:05.546Z'
                  versions:
                    - versionNumber: '0.1'
                      envVars: null
                      sourceType: SOURCE_FILES
                      applyEnvVarsToBuild: false
                      buildTag: latest
                      sourceFiles: []
                    - versionNumber: '0.2'
                      sourceType: GIT_REPO
                      envVars: null
                      applyEnvVarsToBuild: false
                      buildTag: latest
                      gitRepoUrl: 'https://github.com/jane35/my-actor'
                    - versionNumber: '0.3'
                      sourceType: TARBALL
                      envVars: null
                      applyEnvVarsToBuild: false
                      buildTag: latest
                      tarballUrl: 'https://github.com/jane35/my-actor/archive/master.zip'
                    - versionNumber: '0.4'
                      sourceType: GITHUB_GIST
                      envVars: null
                      applyEnvVarsToBuild: false
                      buildTag: latest
                      gitHubGistUrl: 'https://gist.github.com/jane35/e51feb784yu89'
                  defaultRunOptions:
                    build: latest
                    timeoutSecs: 3600
                    memoryMbytes: 2048
                  exampleRunInput:
                    body: '{ "helloWorld": 123 }'
                    contentType: application/json; charset=utf-8
                  isDeprecated: false
                  deploymentKey: ssh-rsa AAAA ...
                  title: My Actor
                  taggedBuilds:
                    latest:
                      buildId: z2EryhbfhgSyqj6Hn
                      buildNumber: 0.0.2
                      finishedAt: '2019-06-10T11:15:49.286Z'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/actor-collection/create-actor'
      x-js-parent: ActorCollectionClient
      x-js-name: create
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/ActorCollectionClient#create'
      x-py-parent: ActorCollectionClientAsync
      x-py-name: create
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/ActorCollectionClientAsync#create'
  '/v2/acts/{actorId}':
    get:
      tags:
        - Actors/Actor object
      summary: Get actor
      description: Gets an object that contains all the details about a specific Actor.
      operationId: act_get
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: GetActorResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/paths/~1v2~1acts/post/responses/201/content/application~1json/schema/properties/data'
              example:
                data:
                  id: zdc3Pyhyz3m8vjDeM
                  userId: wRsJZtadYvn4mBZmm
                  name: MyActor
                  username: jane35
                  description: My favourite Actor!
                  restartOnError: false
                  isPublic: false
                  createdAt: '2019-07-08T11:27:57.401Z'
                  modifiedAt: '2019-07-08T14:01:05.546Z'
                  stats:
                    totalBuilds: 9
                    totalRuns: 16
                    totalUsers: 6
                    totalUsers7Days: 2
                    totalUsers30Days: 6
                    totalUsers90Days: 6
                    totalMetamorphs: 2
                    lastRunStartedAt: '2019-07-08T14:01:05.546Z'
                  versions:
                    - versionNumber: '0.1'
                      envVars: null
                      sourceType: SOURCE_FILES
                      applyEnvVarsToBuild: false
                      buildTag: latest
                      sourceFiles: []
                    - versionNumber: '0.2'
                      sourceType: GIT_REPO
                      envVars: null
                      applyEnvVarsToBuild: false
                      buildTag: latest
                      gitRepoUrl: 'https://github.com/jane35/my-actor'
                    - versionNumber: '0.3'
                      sourceType: TARBALL
                      envVars: null
                      applyEnvVarsToBuild: false
                      buildTag: latest
                      tarballUrl: 'https://github.com/jane35/my-actor/archive/master.zip'
                    - versionNumber: '0.4'
                      sourceType: GITHUB_GIST
                      envVars: null
                      applyEnvVarsToBuild: false
                      buildTag: latest
                      gitHubGistUrl: 'https://gist.github.com/jane35/e51feb784yu89'
                  defaultRunOptions:
                    build: latest
                    timeoutSecs: 3600
                    memoryMbytes: 2048
                  exampleRunInput:
                    body: '{ "helloWorld": 123 }'
                    contentType: application/json; charset=utf-8
                  isDeprecated: false
                  deploymentKey: ssh-rsa AAAA ...
                  title: My Actor
                  taggedBuilds:
                    latest:
                      buildId: z2EryhbfhgSyqj6Hn
                      buildNumber: 0.0.2
                      finishedAt: '2019-06-10T11:15:49.286Z'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/actor-object/get-actor'
      x-js-parent: ActorClient
      x-js-name: get
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/ActorClient#get'
      x-py-parent: ActorClientAsync
      x-py-name: get
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/ActorClientAsync#get'
    put:
      tags:
        - Actors/Actor object
      summary: Update actor
      description: |
        Updates settings of an Actor using values specified by an Actor object
        passed as JSON in the POST payload.

        If the object does not define a specific property, its value will not be
        updated.


        The response is the full Actor object as returned by the
        [Get Actor](#/reference/actors/actor-object/get-actor) endpoint.


        The request needs to specify the `Content-Type: application/json` HTTP header!


        When providing your API authentication token, we recommend using the
        request's `Authorization` header, rather than the URL. ([More
        info](#/introduction/authentication)).


        If you want to make your Actor
        [public](https://docs.apify.com/platform/actors/publishing) using `isPublic:
        true`, you will need to provide the Actor's `title` and the `categories`
        under which that Actor will be classified in Apify Store. For this, it's
        best to use the [constants from our `apify-shared-js`
        package](https://github.com/apify/apify-shared-js/blob/2d43ebc41ece9ad31cd6525bd523fb86939bf860/packages/consts/src/consts.ts#L452-L471).
      operationId: act_put
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              title: ActUpdate
              required:
                - name
                - isPublic
                - versions
              type: object
              properties:
                name:
                  type: string
                  example: MyActor
                description:
                  type: string
                  nullable: true
                  example: My favourite actor!
                isPublic:
                  type: boolean
                  example: false
                seoTitle:
                  type: string
                  nullable: true
                  example: My actor
                seoDescription:
                  type: string
                  nullable: true
                  example: My actor is the best
                title:
                  type: string
                  nullable: true
                  example: My Actor
                restartOnError:
                  type: boolean
                  nullable: true
                  example: false
                versions:
                  type: array
                  items:
                    $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1versions~1%7BversionNumber%7D~1env-vars/post/requestBody/content/application~1json/schema'
                  description: ''
                categories:
                  type: array
                  items:
                    type: string
                  description: ''
                  nullable: true
                defaultRunOptions:
                  oneOf:
                    - nullable: true
                    - $ref: '#/paths/~1v2~1acts/post/requestBody/content/application~1json/schema/properties/defaultRunOptions/oneOf/1'
            example:
              name: MyActor
              description: My favourite Actor!
              isPublic: false
              seoTitle: My Actor
              seoDescription: My Actor is the best
              title: My Actor
              restartOnError: false
              versions:
                - versionNumber: '0.0'
                  sourceType: SOURCE_FILES
                  envVars:
                    - name: DOMAIN
                      value: 'http://example.com'
                      isSecret: false
                    - name: SECRET_PASSWORD
                      value: MyTopSecretPassword123
                      isSecret: true
                  applyEnvVarsToBuild: false
                  buildTag: latest
                  sourceFiles: []
              categories: []
              defaultRunOptions:
                build: latest
                timeoutSecs: 3600
                memoryMbytes: 2048
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: UpdateActorResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/paths/~1v2~1acts/post/responses/201/content/application~1json/schema/properties/data'
              example:
                data:
                  id: zdc3Pyhyz3m8vjDeM
                  userId: wRsJZtadYvn4mBZmm
                  name: MyActor
                  username: jane35
                  description: My favourite Actor!
                  restartOnError: false
                  isPublic: false
                  createdAt: '2019-07-08T11:27:57.401Z'
                  modifiedAt: '2019-07-08T14:01:05.546Z'
                  stats:
                    totalBuilds: 9
                    totalRuns: 16
                    totalUsers: 6
                    totalUsers7Days: 2
                    totalUsers30Days: 6
                    totalUsers90Days: 6
                    totalMetamorphs: 2
                    lastRunStartedAt: '2019-07-08T14:01:05.546Z'
                  versions:
                    - versionNumber: '0.1'
                      envVars: null
                      sourceType: SOURCE_FILES
                      applyEnvVarsToBuild: false
                      buildTag: latest
                      sourceFiles: []
                    - versionNumber: '0.2'
                      sourceType: GIT_REPO
                      envVars: null
                      applyEnvVarsToBuild: false
                      buildTag: latest
                      gitRepoUrl: 'https://github.com/jane35/my-actor'
                    - versionNumber: '0.3'
                      sourceType: TARBALL
                      envVars: null
                      applyEnvVarsToBuild: false
                      buildTag: latest
                      tarballUrl: 'https://github.com/jane35/my-actor/archive/master.zip'
                    - versionNumber: '0.4'
                      sourceType: GITHUB_GIST
                      envVars: null
                      applyEnvVarsToBuild: false
                      buildTag: latest
                      gitHubGistUrl: 'https://gist.github.com/jane35/e51feb784yu89'
                  defaultRunOptions:
                    build: latest
                    timeoutSecs: 3600
                    memoryMbytes: 2048
                  exampleRunInput:
                    body: '{ "helloWorld": 123 }'
                    contentType: application/json; charset=utf-8
                  isDeprecated: false
                  deploymentKey: ssh-rsa AAAA ...
                  title: My Actor
                  taggedBuilds:
                    latest:
                      buildId: z2EryhbfhgSyqj6Hn
                      buildNumber: 0.0.2
                      finishedAt: '2019-06-10T11:15:49.286Z'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/actor-object/update-actor'
      x-js-parent: ActorClient
      x-js-name: update
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/ActorClient#update'
      x-py-parent: ActorClientAsync
      x-py-name: update
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/ActorClientAsync#update'
    delete:
      tags:
        - Actors/Actor object
      summary: Delete actor
      description: Deletes an Actor.
      operationId: act_delete
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
      responses:
        '204':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
                example: {}
              example: {}
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/actor-object/delete-actor'
      x-js-parent: ActorClient
      x-js-name: delete
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/ActorClient#delete'
  '/v2/acts/{actorId}/versions':
    get:
      tags:
        - Actors/Version collection
      summary: Get list of versions
      description: |
        Gets the list of versions of a specific Actor. The response is a JSON object
        with the list of [Version objects](#/reference/actors/version-object), where each
        contains basic information about a single version.
      operationId: act_versions_get
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: GetVersionListResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    type: object
                    required:
                      - total
                      - items
                    properties:
                      total:
                        type: number
                        example: 5
                      items:
                        type: array
                        items:
                          $ref: '#/paths/~1v2~1acts/post/requestBody/content/application~1json/schema/properties/versions/items'
                        description: ''
              example:
                data:
                  total: 5
                  items:
                    - versionNumber: '0.1'
                      envVars: null
                      sourceType: SOURCE_FILES
                      applyEnvVarsToBuild: false
                      buildTag: latest
                      sourceFiles: []
                    - versionNumber: '0.2'
                      sourceType: GIT_REPO
                      envVars: null
                      applyEnvVarsToBuild: false
                      buildTag: latest
                      gitRepoUrl: 'https://github.com/jane35/my-actor'
                    - versionNumber: '0.3'
                      sourceType: TARBALL
                      envVars: null
                      applyEnvVarsToBuild: false
                      buildTag: latest
                      tarballUrl: 'https://github.com/jane35/my-actor/archive/master.zip'
                    - versionNumber: '0.4'
                      sourceType: GITHUB_GIST
                      envVars: null
                      applyEnvVarsToBuild: false
                      buildTag: latest
                      gitHubGistUrl: 'https://gist.github.com/jane35/e51feb784yu89'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/version-collection/get-list-of-versions'
      x-py-parent: ActorVersionCollectionClientAsync
      x-py-name: list
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/ActorVersionCollectionClientAsync#list'
    post:
      tags:
        - Actors/Version collection
      summary: Create version
      description: |
        Creates a version of an Actor using values specified in a [Version
        object](#/reference/actors/version-object) passed as JSON in the POST
        payload.

        The request must specify `versionNumber` and `sourceType` parameters (as
        strings) in the JSON payload and a `Content-Type: application/json` HTTP
        header.

        Each `sourceType` requires its own additional properties to be passed to the
        JSON payload object. These are outlined in the [Version
        object](#/reference/actors/version-object) table below and in more detail in
        the [Apify
        documentation](https://docs.apify.com/platform/actors/development/deployment/source-types).

        For example, if an Actor's source code is stored in a [GitHub
        repository](https://docs.apify.com/platform/actors/development/deployment/source-types#git-repository),
        you will set the `sourceType` to `GIT_REPO` and pass the repository's URL in
        the `gitRepoUrl` property.

        ```
        {
            "versionNumber": "0.1",
            "sourceType": "GIT_REPO",
            "gitRepoUrl": "https://github.com/my-github-account/actor-repo"
        }
        ```

        The response is the [Version object](#/reference/actors/version-object) as
        returned by the [Get version](#/reference/actors/version-object/get-version) endpoint.
      operationId: act_versions_post
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              title: CreateOrUpdateVersionRequest
              type: object
              properties:
                versionNumber:
                  type: string
                  nullable: true
                  example: '0.0'
                sourceType:
                  oneOf:
                    - nullable: true
                    - title: VersionSourceType
                      enum:
                        - SOURCE_FILES
                        - GIT_REPO
                        - TARBALL
                        - GITHUB_GIST
                      type: string
                envVars:
                  type: array
                  items:
                    title: EnvVar
                    required:
                      - name
                      - value
                    type: object
                    properties:
                      name:
                        type: string
                        example: MY_ENV_VAR
                      value:
                        type: string
                        example: my-value
                      isSecret:
                        type: boolean
                        nullable: true
                        example: false
                  description: ''
                  nullable: true
                applyEnvVarsToBuild:
                  type: boolean
                  nullable: true
                  example: false
                buildTag:
                  type: string
                  nullable: true
                  example: latest
                sourceFiles:
                  title: VersionSourceFiles
                  type: array
                  items:
                    anyOf:
                      - type: object
                        title: SourceCodeFile
                        properties:
                          format:
                            type: string
                            enum:
                              - BASE64
                              - TEXT
                            example: TEXT
                          content:
                            type: string
                            example: console.log('This is the main.js file');
                          name:
                            type: string
                            example: src/main.js
                        required:
                          - format
                          - content
                          - name
                      - type: object
                        title: SourceCodeFolder
                        properties:
                          name:
                            type: string
                            example: src/placeholder
                          folder:
                            type: boolean
                            enum:
                              - true
                            example: true
                        required:
                          - name
                          - folder
            example:
              versionNumber: '0.1'
              sourceType: GIT_REPO
              gitRepoUrl: 'https://github.com/my-github-account/actor-repo'
        required: true
      responses:
        '201':
          description: ''
          headers:
            Location:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 'https://api.apify.com/v2/acts/zdc3Pyhyz3m8vjDeM/versions/0.0'
          content:
            application/json:
              schema:
                title: GetVersionResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/paths/~1v2~1acts/post/requestBody/content/application~1json/schema/properties/versions/items'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/version-collection/create-version'
      x-py-parent: ActorVersionCollectionClientAsync
      x-py-name: create
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/ActorVersionCollectionClientAsync#create'
  '/v2/acts/{actorId}/versions/{versionNumber}':
    get:
      tags:
        - Actors/Version object
      summary: Get version
      description: |
        The **Version object** contains the source code of a specific version of an
        Actor.'
      operationId: act_version_get
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
        - name: versionNumber
          in: path
          description: Actor major and minor version of the Actor.
          required: true
          style: simple
          schema:
            type: string
            example: '1.0'
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1versions/post/responses/201/content/application~1json/schema'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/version-object/get-version'
      x-py-parent: ActorVersionClientAsync
      x-py-name: get
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/ActorVersionClientAsync#get'
    put:
      tags:
        - Actors/Version object
      summary: Update version
      description: |
        The **Version object** contains the source code of a specific version of an
        Actor.

        The `sourceType` property indicates where the source code is hosted, and
        based on its value the Version object has the following additional property:

        <table>
          <tr>
            <td><code>"SOURCE_FILES"</code></td>
            <td>
                Source code is comprised of multiple files specified in the <code>sourceFiles</code> array.
                Each item of the array is an object with the following fields:<br>
                <code>name</code></li> - File path and name<br>
                <code>format</code></li> - Format of the content, can be either <code>"TEXT"</code> or <code>"BASE64"</code><br>
                <code>content</code></li> - File content<br>
                <br>
                Source files can be shown and edited in the Apify Console's Web IDE.
            </td>
          </tr>
          <tr>
            <td><code>"GIT_REPO"</code></td>
            <td>
                Source code is cloned from a Git repository, whose URL is specified in the <code>gitRepoUrl</code> field.
            </td>
          </tr>
          <tr>
              <td><code>"TARBALL"</code></td>
              <td>
                Source code is downloaded using a tarball or Zip file from a URL specified in the <code>tarballUrl</code> field.
              </td>
          </tr>
          <tr>
              <td><code>"GITHUB_GIST"</code></td>
              <td>
                Source code is taken from a GitHub Gist, whose URL is specified in the <code>gitHubGistUrl</code> field.
              </td>
          </tr>
        </table>


        For more information about source code and Actor versions, see [Source
        code](https://docs.apify.com/platform/actors/development/actor-definition/source-code)
        in Actors documentation.Updates Actor version using values specified by a
        [Version object](#/reference/actors/version-object) passed as JSON in the POST payload.

        If the object does not define a specific property, its value will not be
        updated.

        The request needs to specify the `Content-Type: application/json` HTTP
        header!

        When providing your API authentication token, we recommend using the
        request's `Authorization` header, rather than the URL. ([More
        info](#/introduction/authentication)).

        The response is the [Version object](#/reference/actors/version-object) as
        returned by the [Get version](#/reference/actors/version-object/get-version) endpoint.
      operationId: act_version_put
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
        - name: versionNumber
          in: path
          description: Actor major and minor version of the Actor.
          required: true
          style: simple
          schema:
            type: string
            example: '1.0'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1versions/post/requestBody/content/application~1json/schema'
            example:
              versionNumber: '0.0'
              sourceType: SOURCE_FILES
              envVars:
                - name: DOMAIN
                  value: 'http://example.com'
                  isSecret: false
                - name: SECRET_PASSWORD
                  value: MyTopSecretPassword123
                  isSecret: true
              applyEnvVarsToBuild: false
              buildTag: latest
              sourceFiles: []
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1versions/post/responses/201/content/application~1json/schema'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/version-object/update-version'
      x-py-parent: ActorVersionClientAsync
      x-py-name: update
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/ActorVersionClientAsync#update'
    delete:
      tags:
        - Actors/Version object
      summary: Delete version
      description: |
        The **Version object** contains the source code of a specific version of an
        Actor.

        The `sourceType` property indicates where the source code is hosted, and
        based

        on its value the Version object has the following additional property:


        <table>
          <tr>
            <td><code>"SOURCE_FILES"</code></td>
            <td>
                Source code is comprised of multiple files specified in the <code>sourceFiles</code> array.
                Each item of the array is an object with the following fields:<br>
                <code>name</code></li> - File path and name<br>
                <code>format</code></li> - Format of the content, can be either <code>"TEXT"</code> or <code>"BASE64"</code><br>
                <code>content</code></li> - File content<br>
                <br>
                Source files can be shown and edited in the Apify Console's Web IDE.
            </td>
          </tr>
          <tr>
            <td><code>"GIT_REPO"</code></td>
            <td>
                Source code is cloned from a Git repository, whose URL is specified in the <code>gitRepoUrl</code> field.
            </td>
          </tr>
          <tr>
              <td><code>"TARBALL"</code></td>
              <td>
                Source code is downloaded using a tarball or Zip file from a URL specified in the <code>tarballUrl</code> field.
              </td>
          </tr>
          <tr>
              <td><code>"GITHUB_GIST"</code></td>
              <td>
                Source code is taken from a GitHub Gist, whose URL is specified in the <code>gitHubGistUrl</code> field.
              </td>
          </tr>
        </table>


        For more information about source code and Actor versions, see [Source
        code](https://docs.apify.com/platform/actors/development/actor-definition/source-code)
        in Actors documentation.Deletes a specific version of Actor's source code.
      operationId: act_version_delete
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
        - name: versionNumber
          in: path
          description: Actor major and minor version of the Actor.
          required: true
          style: simple
          schema:
            type: string
            example: '1.0'
      responses:
        '204':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
                example: {}
              example: {}
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/version-object/delete-version'
  '/v2/acts/{actorId}/versions/{versionNumber}/env-vars':
    get:
      tags:
        - Actors/Environment variable collection
      summary: Get list of environment variables
      description: |
        Gets the list of environment variables for a specific version of an Actor.
        The response is a JSON object with the list of [EnvVar objects](#/reference/actors/environment-variable-object), where
        each contains basic information about a single environment variable.
      operationId: act_version_envVars_get
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
        - name: versionNumber
          in: path
          description: Actor version
          required: true
          style: simple
          schema:
            type: string
            example: '0.1'
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: GetEnvVarListResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    type: object
                    required:
                      - total
                      - items
                    properties:
                      total:
                        type: number
                        example: 5
                      items:
                        type: array
                        items:
                          $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1versions/post/requestBody/content/application~1json/schema/properties/envVars/items'
                        description: ''
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/environment-variable-collection/get-list-of-environment-variables'
      x-py-parent: ActorEnvVarCollectionClientAsync
      x-py-name: list
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/ActorEnvVarCollectionClientAsync#list'
    post:
      tags:
        - Actors/Environment variable collection
      summary: Create environment variable
      description: |
        Creates an environment variable of an Actor using values specified in a
        [EnvVar object](#/reference/actors/environment-variable-object) passed as
        JSON in the POST payload.

        The request must specify `name` and `value` parameters (as strings) in the
        JSON payload and a `Content-Type: application/json` HTTP header.

        ```

        {
            "name": "ENV_VAR_NAME",
            "value": "my-env-var"
        }

        ```

        The response is the [EnvVar
        object](#/reference/actors/environment-variable-object) as returned by the [Get environment
        variable](#/reference/actors/environment-variable-object/get-environment-variable)
        endpoint.
      operationId: act_version_envVars_post
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
        - name: versionNumber
          in: path
          description: Actor version
          required: true
          style: simple
          schema:
            type: string
            example: '0.1'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              title: CreateOrUpdateEnvVarRequest
              required:
                - name
                - value
              type: object
              properties:
                name:
                  type: string
                  example: MY_ENV_VAR
                value:
                  type: string
                  example: my-new-value
                isSecret:
                  type: boolean
                  nullable: true
                  example: false
            example:
              name: ENV_VAR_NAME
              value: my-env-var
        required: true
      responses:
        '201':
          description: ''
          headers:
            Location:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 'https://api.apify.com/v2/acts/zdc3Pyhyz3m8vjDeM/versions/1.0/env-vars/ENV_VAR_NAME'
          content:
            application/json:
              schema:
                title: CreateEnvironmentVariableResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1versions/post/requestBody/content/application~1json/schema/properties/envVars/items'
              example:
                data:
                  name: MY_ENV_VAR
                  value: my-value
                  isSecret: false
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/environment-variable-collection/create-environment-variable'
      x-py-parent: ActorEnvVarCollectionClientAsync
      x-py-name: create
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/ActorEnvVarCollectionClientAsync#create'
  '/v2/acts/{actorId}/versions/{versionNumber}/env-vars/{envVarName}':
    get:
      tags:
        - Actors/Environment variable object
      summary: Get environment variable
      description: |
        Gets a [EnvVar object](#/reference/actors/environment-variable-object) that
        contains all the details about a specific environment variable of an Actor.

        If `isSecret` is set to `true`, then `value` will never be returned.
      operationId: act_version_envVar_get
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
        - name: versionNumber
          in: path
          description: Actor version
          required: true
          style: simple
          schema:
            type: string
            example: '0.1'
        - name: envVarName
          in: path
          description: The name of the environment variable
          required: true
          style: simple
          schema:
            type: string
            example: MY_ENV_VAR
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1versions~1%7BversionNumber%7D~1env-vars/post/responses/201/content/application~1json/schema'
              example:
                data:
                  name: MY_ENV_VAR
                  value: my-value
                  isSecret: false
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/environment-variable-object/get-environment-variable'
      x-py-parent: ActorEnvVarClientAsync
      x-py-name: get
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/ActorEnvVarClientAsync#get'
    put:
      tags:
        - Actors/Environment variable object
      summary: Update environment variable
      description: |
        Updates Actor environment variable using values specified by a [EnvVar
        object](#/reference/actors/environment-variable-object)

        passed as JSON in the POST payload.

        If the object does not define a specific property, its value will not be
        updated.


        The request needs to specify the `Content-Type: application/json` HTTP
        header!


        When providing your API authentication token, we recommend using the
        request's `Authorization` header, rather than the URL. ([More
        info](#/introduction/authentication)).


        The response is the [EnvVar
        object](#/reference/actors/environment-variable-object) as returned by the

        [Get environment
        variable](#/reference/actors/environment-variable-object/get-environment-variable)
        endpoint.
      operationId: act_version_envVar_put
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
        - name: versionNumber
          in: path
          description: Actor version
          required: true
          style: simple
          schema:
            type: string
            example: '0.1'
        - name: envVarName
          in: path
          description: The name of the environment variable
          required: true
          style: simple
          schema:
            type: string
            example: MY_ENV_VAR
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1versions~1%7BversionNumber%7D~1env-vars/post/requestBody/content/application~1json/schema'
            example:
              name: MY_ENV_VAR
              value: my-new-value
              isSecret: false
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1versions~1%7BversionNumber%7D~1env-vars/post/responses/201/content/application~1json/schema'
              example:
                data:
                  name: MY_ENV_VAR
                  value: my-value
                  isSecret: false
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/environment-variable-object/update-environment-variable'
      x-py-parent: ActorEnvVarClientAsync
      x-py-name: update
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/ActorEnvVarClientAsync#update'
    delete:
      tags:
        - Actors/Environment variable object
      summary: Delete environment variable
      description: Deletes a specific environment variable.
      operationId: act_version_envVar_delete
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
        - name: versionNumber
          in: path
          description: Actor version
          required: true
          style: simple
          schema:
            type: string
            example: '0.1'
        - name: envVarName
          in: path
          description: The name of the environment variable
          required: true
          style: simple
          schema:
            type: string
            example: MY_ENV_VAR
      responses:
        '204':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
                example: {}
              example: {}
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/environment-variable-object/delete-environment-variable'
  '/v2/acts/{actorId}/webhooks':
    get:
      tags:
        - Actors/Webhook collection
      summary: Get list of webhooks
      description: |
        Gets the list of webhooks of a specific Actor. The response is a JSON with
        the list of objects, where each object contains basic information about a single webhook.

        The endpoint supports pagination using the `limit` and `offset` parameters
        and it will not return more than 1000 records.

        By default, the records are sorted by the `createdAt` field in ascending
        order, to sort the records in descending order, use the `desc=1` parameter.
      operationId: act_webhooks_get
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
        - name: offset
          in: query
          description: |
            Number of array elements that should be skipped at the start. The
            default value is `0`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 10
        - name: limit
          in: query
          description: |
            Maximum number of array elements to return. The default value as well as
            the maximum is `1000`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 99
        - name: desc
          in: query
          description: |
            If `true` or `1` then the objects are sorted by the `createdAt` field in
            descending order. By default, they are sorted in ascending order.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1webhooks/get/responses/200/content/application~1json/schema'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/webhook-collection/get-list-of-webhooks'
  '/v2/acts/{actorId}/builds':
    get:
      tags:
        - Actors/Build collection
      summary: Get list of builds
      description: |
        Gets the list of builds of a specific Actor. The response is a JSON with the
        list of objects, where each object contains basic information about a single build.


        The endpoint supports pagination using the `limit` and `offset` parameters
        and it will not return more than 1000 records.


        By default, the records are sorted by the `startedAt` field in ascending order,
        therefore you can use pagination to incrementally fetch all builds while new
        ones are still being started. To sort the records in descending order, use
        the `desc=1` parameter.
      operationId: act_builds_get
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
        - name: offset
          in: query
          description: |
            Number of records that should be skipped at the start. The default value is `0`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 10
        - name: limit
          in: query
          description: |
            Maximum number of records to return. The default value as well as the maximum is `1000`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 99
        - name: desc
          in: query
          description: |
            If `true` or `1` then the objects are sorted by the `startedAt` field in
            descending order. By default, they are sorted in ascending order.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1actor-builds/get/responses/200/content/application~1json/schema'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/build-collection/get-list-of-builds'
      x-js-parent: BuildCollectionClient
      x-js-name: list
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/BuildCollectionClient#list'
      x-py-parent: BuildCollectionClientAsync
      x-py-name: list
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/BuildCollectionClientAsync#list'
    post:
      tags:
        - Actors/Build collection
      summary: Build actor
      description: |-
        Builds an Actor.
        The response is the build object as returned by the
        [Get build](#/reference/actors/build-object/get-build) endpoint.
      operationId: act_builds_post
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
        - name: version
          in: query
          description: Actor version number to be built.
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: '0.0'
        - name: useCache
          in: query
          description: |
            If `true` or `1`, the system will use a cache to speed up the build
            process. By default, cache is not used.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: betaPackages
          in: query
          description: |
            If `true` or `1` then the Actor is built with beta versions of Apify NPM
            packages. By default, the build uses `latest` packages.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: tag
          in: query
          description: |
            Tag to be applied to the build on success. By default, the tag is taken
            from Actor version's `buildTag` property.
          style: form
          explode: true
          schema:
            type: string
            example: latest
        - name: waitForFinish
          in: query
          description: |
            The maximum number of seconds the server waits for the build to finish.
            By default it is `0`, the maximum value is `60`. <!--
            MAX_ACTOR_JOB_ASYNC_WAIT_SECS -->
            If the build finishes in time then the returned build object will have a terminal status (e.g. `SUCCEEDED`),
            otherwise it will have a transitional status (e.g. `RUNNING`).
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 60
      responses:
        '201':
          description: ''
          headers:
            Location:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 'https://api.apify.com/v2/acts/zdc3Pyhyz3m8vjDeM/runs/HG7ML7M8z78YcAPEB'
          content:
            application/json:
              schema:
                title: BuildActorResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    title: Build
                    required:
                      - id
                      - actId
                      - userId
                      - startedAt
                      - status
                      - meta
                      - buildNumber
                    type: object
                    properties:
                      id:
                        type: string
                        example: HG7ML7M8z78YcAPEB
                      actId:
                        type: string
                        example: janedoe~my-actor
                      userId:
                        type: string
                        example: klmdEpoiojmdEMlk3
                      startedAt:
                        type: string
                        example: '2019-11-30T07:34:24.202Z'
                      finishedAt:
                        type: string
                        nullable: true
                        example: '2019-12-12T09:30:12.202Z'
                      status:
                        type: string
                        example: SUCCEEDED
                      meta:
                        title: BuildsMeta
                        required:
                          - origin
                          - clientIp
                          - userAgent
                        type: object
                        properties:
                          origin:
                            type: string
                            example: WEB
                          clientIp:
                            type: string
                            example: 172.234.12.34
                          userAgent:
                            type: string
                            example: Mozilla/5.0 (iPad)
                      stats:
                        allOf:
                          - oneOf:
                              - nullable: true
                              - title: BuildStats
                                required:
                                  - durationMillis
                                  - runTimeSecs
                                  - computeUnits
                                type: object
                                properties:
                                  durationMillis:
                                    type: number
                                    example: 1000
                                  runTimeSecs:
                                    type: number
                                    example: 45.718
                                  computeUnits:
                                    type: number
                                    example: 0.0126994444444444
                          - {}
                      options:
                        allOf:
                          - oneOf:
                              - nullable: true
                              - title: BuildOptions
                                type: object
                                properties:
                                  useCache:
                                    type: boolean
                                    nullable: true
                                    example: false
                                  betaPackages:
                                    type: boolean
                                    nullable: true
                                    example: false
                                  memoryMbytes:
                                    type: number
                                    nullable: true
                                    example: 1024
                                  diskMbytes:
                                    type: number
                                    nullable: true
                                    example: 2048
                          - {}
                      usage:
                        allOf:
                          - oneOf:
                              - nullable: true
                              - title: BuildUsage
                                type: object
                                properties:
                                  ACTOR_COMPUTE_UNITS:
                                    type: number
                                    nullable: true
                                    example: 0.08
                          - {}
                      usageTotalUsd:
                        type: number
                        nullable: true
                        example: 0.02
                      usageUsd:
                        allOf:
                          - oneOf:
                              - nullable: true
                              - $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1builds/post/responses/201/content/application~1json/schema/properties/data/properties/usage/allOf/0/oneOf/1'
                          - {}
                      inputSchema:
                        type: string
                        nullable: true
                        example: '{\n  \"title\": \"Schema for ... }'
                      readme:
                        type: string
                        nullable: true
                        example: '# Magic Actor\nThis Actor is magic.'
                      buildNumber:
                        type: string
                        example: 0.1.1
                    example:
                      id: HG7ML7M8z78YcAPEB
                      actId: janedoe~my-actor
                      userId: klmdEpoiojmdEMlk3
                      startedAt: '2019-11-30T07:34:24.202Z'
                      finishedAt: '2019-12-12T09:30:12.202Z'
                      status: SUCCEEDED
                      meta:
                        origin: WEB
                        clientIp: 172.234.12.34
                        userAgent: Mozilla/5.0 (iPad)
                      stats:
                        durationMillis: 1000
                        runTimeSecs: 45.718
                        computeUnits: 0.012699444444444444
                      options:
                        useCache: false
                        betaPackages: false
                        memoryMbytes: 1024
                        diskMbytes: 2048
                      usage:
                        ACTOR_COMPUTE_UNITS: 0.08
                      usageTotalUsd: 0.02
                      usageUsd:
                        ACTOR_COMPUTE_UNITS: 0.02
                      inputSchema: '{\n  \"title\": \"Schema for ... }'
                      readme: '# Magic Actor\nThis Actor is magic.'
                      buildNumber: 0.1.1
              example:
                data:
                  id: HG7ML7M8z78YcAPEB
                  actId: janedoe~my-actor
                  userId: klmdEpoiojmdEMlk3
                  startedAt: '2019-11-30T07:34:24.202Z'
                  finishedAt: '2019-12-12T09:30:12.202Z'
                  status: SUCCEEDED
                  meta:
                    origin: WEB
                    clientIp: 172.234.12.34
                    userAgent: Mozilla/5.0 (iPad)
                  stats:
                    durationMillis: 1000
                    runTimeSecs: 45.718
                    computeUnits: 0.012699444444444444
                  options:
                    useCache: false
                    betaPackages: false
                    memoryMbytes: 1024
                    diskMbytes: 2048
                  usage:
                    ACTOR_COMPUTE_UNITS: 0.08
                  usageTotalUsd: 0.02
                  usageUsd:
                    ACTOR_COMPUTE_UNITS: 0.02
                  inputSchema: '{\n  \"title\": \"Schema for ... }'
                  readme: '# Magic Actor\nThis Actor is magic.'
                  buildNumber: 0.1.1
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/build-collection/build-actor'
      x-js-parent: ActorClient
      x-js-name: build
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/ActorClient#build'
      x-py-parent: ActorClientAsync
      x-py-name: build
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/ActorClientAsync#build'
  '/v2/acts/{actorId}/builds/{buildId}':
    get:
      tags:
        - Actors/Build object
      summary: Get build
      description: |
        **[DEPRECATED]** API endpoints related to build of the Actor were moved
        under new namespace [`actor-builds`](#/reference/actor-builds).Gets an object
        that contains all the details about a specific build of an Actor.


        By passing the optional `waitForFinish` parameter the API endpoint will
        synchronously wait for the build to finish.

        This is useful to avoid periodic polling when waiting for an Actor build to
        finish.


        This endpoint does not require the authentication token. Instead, calls are authenticated using a hard-to-guess ID of the build. However,
        if you access the endpoint without the token, certain attributes, such as `usageUsd` and `usageTotalUsd`, will be hidden.
      operationId: act_build_get
      security:
        - apiKeyActorBuilds: []
        - httpBearerActorBuilds: []
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
        - name: buildId
          in: path
          description: 'ID of the build you want to get, found in the build''s `Info` tab.'
          required: true
          style: simple
          schema:
            type: string
            example: soSkq9ekdmfOslopH
        - name: waitForFinish
          in: query
          description: |
            The maximum number of seconds the server waits for the build to finish.
            By default it is `0`, the maximum value is `60`. <!--
            MAX_ACTOR_JOB_ASYNC_WAIT_SECS -->
                                                 If the build finishes in time then the returned build object will have a terminal status (e.g. `SUCCEEDED`),
                                                 otherwise it will have a transitional status (e.g. `RUNNING`).
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 60
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: GetBuildResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    allOf:
                      - $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1builds/post/responses/201/content/application~1json/schema/properties/data'
                      - {}
              example:
                data:
                  id: HG7ML7M8z78YcAPEB
                  actId: janedoe~my-actor
                  userId: klmdEpoiojmdEMlk3
                  startedAt: '2019-11-30T07:34:24.202Z'
                  finishedAt: '2019-12-12T09:30:12.202Z'
                  status: SUCCEEDED
                  meta:
                    origin: WEB
                    clientIp: 172.234.12.34
                    userAgent: Mozilla/5.0 (iPad)
                  stats:
                    durationMillis: 1000
                    runTimeSecs: 45.718
                    computeUnits: 0.012699444444444444
                  options:
                    useCache: false
                    betaPackages: false
                    memoryMbytes: 1024
                    diskMbytes: 2048
                  usage:
                    ACTOR_COMPUTE_UNITS: 0.08
                  usageTotalUsd: 0.02
                  usageUsd:
                    ACTOR_COMPUTE_UNITS: 0.02
                  inputSchema: '{\n  \"title\": \"Schema for ... }'
                  readme: '# Magic Actor\nThis Actor is magic.'
                  buildNumber: 0.1.1
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/build-object/get-build'
  '/v2/acts/{actorId}/builds/{buildId}/abort':
    post:
      tags:
        - Actors/Abort build
      summary: Abort build
      description: |
        **[DEPRECATED]** API endpoints related to build of the Actor were moved
        under new namespace [`actor-builds`](#/reference/actor-builds).Aborts an
        Actor build and returns an object that contains all the details about the
        build.

        Only builds that are starting or running are aborted. For builds with status
        `FINISHED`, `FAILED`, `ABORTING` and `TIMED-OUT` this call does nothing.
      operationId: act_build_abort_post
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
        - name: buildId
          in: path
          description: Build ID.
          required: true
          style: simple
          schema:
            type: string
            example: 3KH8gEpp4d8uQSe8T
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: PostAbortBuildResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    allOf:
                      - $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1builds/post/responses/201/content/application~1json/schema/properties/data'
                      - {}
                example:
                  data:
                    id: HG7ML7M8z78YcAPEB
                    actId: janedoe~my-actor
                    userId: klmdEpoiojmdEMlk3
                    startedAt: '2019-11-30T07:34:24.202Z'
                    finishedAt: '2019-12-12T09:30:12.202Z'
                    status: ABORTED
                    meta:
                      origin: WEB
                    stats:
                      durationMillis: 1000
                      runTimeSecs: 5.718
                    options:
                      useCache: false
                      memoryMbytes: 1024
                      diskMbytes: 2048
                    usage:
                      ACTOR_COMPUTE_UNITS: 0.08
                    usageTotalUsd: 0.02
                    usageUsd:
                      ACTOR_COMPUTE_UNITS: 0.02
              example:
                data:
                  id: HG7ML7M8z78YcAPEB
                  actId: janedoe~my-actor
                  userId: klmdEpoiojmdEMlk3
                  startedAt: '2019-11-30T07:34:24.202Z'
                  finishedAt: '2019-12-12T09:30:12.202Z'
                  status: ABORTED
                  meta:
                    origin: WEB
                  stats:
                    durationMillis: 1000
                    runTimeSecs: 5.718
                  options:
                    useCache: false
                    memoryMbytes: 1024
                    diskMbytes: 2048
                  usage:
                    ACTOR_COMPUTE_UNITS: 0.08
                  usageTotalUsd: 0.02
                  usageUsd:
                    ACTOR_COMPUTE_UNITS: 0.02
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/abort-build/abort-build'
  '/v2/acts/{actorId}/runs':
    get:
      tags:
        - Actors/Run collection
      summary: Get list of runs
      description: |
        Gets the list of runs of a specific actor. The response is a list of
        objects, where each object contains basic information about a single actor run.


        The endpoint supports pagination using the `limit` and `offset` parameters
        and it will not return more than 1000 array elements.


        By default, the records are sorted by the `startedAt` field in ascending
        order, therefore you can use pagination to incrementally fetch all records while
        new ones are still being created. To sort the records in descending order, use
        `desc=1` parameter. You can also filter runs by status ([available
        statuses](https://docs.apify.com/platform/actors/running/runs-and-builds#lifecycle)).
      operationId: act_runs_get
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
        - name: offset
          in: query
          description: |
            Number of array elements that should be skipped at the start. The
            default value is `0`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 10
        - name: limit
          in: query
          description: |
            Maximum number of array elements to return. The default value as well as
            the maximum is `1000`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 99
        - name: desc
          in: query
          description: |
            If `true` or `1` then the objects are sorted by the `startedAt` field in
            descending order. By default, they are sorted in ascending order.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: status
          in: query
          description: |
            Return only runs with the provided status ([available
            statuses](https://docs.apify.com/platform/actors/running/runs-and-builds#lifecycle))
          style: form
          explode: true
          schema:
            type: string
            example: SUCCEEDED
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: GetUserRunsListResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    allOf:
                      - $ref: '#/paths/~1v2~1actor-tasks/get/responses/200/content/application~1json/schema/properties/data/allOf/0'
                      - type: object
                        required:
                          - items
                        properties:
                          items:
                            type: array
                            items:
                              $ref: '#/paths/~1v2~1actor-tasks~1%7BactorTaskId%7D~1runs/get/responses/200/content/application~1json/schema/properties/data/allOf/1/properties/items/items'
              example:
                data:
                  total: 2
                  offset: 0
                  limit: 1000
                  desc: false
                  count: 2
                  items:
                    - id: HG7ML7M8z78YcAPEB
                      actId: HDSasDasz78YcAPEB
                      actorTaskId: KJHSKHausidyaJKHs
                      status: SUCCEEDED
                      startedAt: '2019-11-30T07:34:24.202Z'
                      finishedAt: '2019-12-12T09:30:12.202Z'
                      buildId: HG7ML7M8z78YcAPEB
                      buildNumber: 0.0.2
                      meta:
                        origin: WEB
                      usageTotalUsd: 0.2
                      defaultKeyValueStoreId: sfAjeR4QmeJCQzTfe
                      defaultDatasetId: 3ZojQDdFTsyE7Moy4
                      defaultRequestQueueId: so93g2shcDzK3pA85
                    - id: HG7ML7M8z78YcAPEB
                      actId: HDSasDasz78YcAPEB
                      actorTaskId: KJHSKHausidyaJKHs
                      status: FAILED
                      startedAt: '2019-12-12T07:34:14.202Z'
                      finishedAt: '2019-12-13T08:36:13.202Z'
                      buildId: u78dML7M8z78YcAPEB
                      buildNumber: 0.2.2
                      meta:
                        origin: DEVELOPMENT
                      usageTotalUsd: 0.6
                      defaultKeyValueStoreId: sffsouqlseJCQzTfe
                      defaultDatasetId: CFGggdjQDsyE7Moyw
                      defaultRequestQueueId: soowucklrmDzKpA8x
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/run-collection/get-list-of-runs'
      x-js-parent: RunCollectionClient
      x-js-name: list
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/RunCollectionClient#list'
      x-py-parent: RunCollectionClientAsync
      x-py-name: list
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/RunCollectionClientAsync#list'
    post:
      tags:
        - Actors/Run collection
      summary: Run actor
      description: |
        Runs an Actor and immediately returns without waiting for the run to finish.

        The POST payload including its `Content-Type` header is passed as `INPUT` to
        the Actor (usually `application/json`).

        The Actor is started with the default options; you can override them using
        various URL query parameters.

        The response is the Run object as returned by the [Get
        run](#/reference/actor-runs/run-object-and-its-storages/get-run) API
        endpoint.

        If you want to wait for the run to finish and receive the actual output of
        the Actor as the response, please use one of the [Run Actor
        synchronously](#/reference/actors/run-actor-synchronously) API endpoints
        instead.

        To fetch the Actor run results that are typically stored in the default
        dataset, you'll need to pass the ID received in the `defaultDatasetId` field
        received in the response JSON to the [Get items](#/reference/datasets/item-collection/get-items)
        API endpoint.
      operationId: act_runs_post
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
        - name: timeout
          in: query
          description: |
            Optional timeout for the run, in seconds. By default, the run uses a
            timeout specified in the default run configuration for the Actor.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 60
        - name: memory
          in: query
          description: |
            Memory limit for the run, in megabytes. The amount of memory can be set
            to a power of 2 with a minimum of 128. By default, the run uses a memory
            limit specified in the default run configuration for the Actor.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 256
        - name: maxItems
          in: query
          description: |
            The maximum number of items that the Actor run should return. This is
            useful for pay-per-result Actors, as it allows you to limit the number
            of results that will be charged to your subscription. You can access the
            maximum number of items in your Actor by using the
            `ACTOR_MAX_PAID_DATASET_ITEMS` environment variable.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 1000
        - name: build
          in: query
          description: |
            Specifies the Actor build to run. It can be either a build tag or build
            number. By default, the run uses the build specified in the default run
            configuration for the Actor (typically `latest`).
          style: form
          explode: true
          schema:
            type: string
            example: 0.1.234
        - name: waitForFinish
          in: query
          description: |
            The maximum number of seconds the server waits for the run to finish. By
            default, it is `0`, the maximum value is `60`. <!--
            MAX_ACTOR_JOB_ASYNC_WAIT_SECS -->
            If the build finishes in time then the returned run object will have a terminal status (e.g. `SUCCEEDED`),
            otherwise it will have a transitional status (e.g. `RUNNING`).
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 60
        - name: webhooks
          in: query
          description: |
            Specifies optional webhooks associated with the Actor run, which can be
            used to receive a notification e.g. when the Actor finished or failed. The value is a Base64-encoded
            JSON array of objects defining the webhooks. For more information, see
            [Webhooks documentation](https://docs.apify.com/platform/integrations/webhooks).
          style: form
          explode: true
          schema:
            type: string
            example: dGhpcyBpcyBqdXN0IGV4YW1wbGUK...
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
            example:
              foo: bar
        required: true
      responses:
        '201':
          description: ''
          headers:
            Location:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 'https://api.apify.com/v2/acts/zdc3Pyhyz3m8vjDeM/runs/HG7ML7M8z78YcAPEB'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1actor-runs~1%7BrunId%7D/put/responses/200/content/application~1json/schema'
              example:
                data:
                  id: HG7ML7M8z78YcAPEB
                  actId: HDSasDasz78YcAPEB
                  userId: 7sT5jcggjjA9fNcxF
                  actorTaskId: KJHSKHausidyaJKHs
                  startedAt: '2019-11-30T07:34:24.202Z'
                  finishedAt: '2019-12-12T09:30:12.202Z'
                  status: RUNNING
                  statusMessage: Actor is running
                  isStatusMessageTerminal: false
                  meta:
                    origin: WEB
                    clientIp: 172.234.12.34
                    userAgent: Mozilla/5.0 (iPad)
                  stats:
                    inputBodyLen: 240
                    restartCount: 0
                    resurrectCount: 2
                    memAvgBytes: 267874071.9
                    memMaxBytes: 404713472
                    memCurrentBytes: 0
                    cpuAvgUsage: 33.75321011075384
                    cpuMaxUsage: 169.65073553494125
                    cpuCurrentUsage: 0
                    netRxBytes: 103508042
                    netTxBytes: 4854600
                    durationMillis: 248472
                    runTimeSecs: 248.472
                    metamorph: 0
                    computeUnits: 0.13804
                  options:
                    build: latest
                    timeoutSecs: 300
                    memoryMbytes: 1024
                    diskMbytes: 2048
                  buildId: 7sT5jcggjjA9fNcxF
                  exitCode: 0
                  defaultKeyValueStoreId: eJNzqsbPiopwJcgGQ
                  defaultDatasetId: wmKPijuyDnPZAPRMk
                  defaultRequestQueueId: FL35cSF7jrxr3BY39
                  buildNumber: 0.0.36
                  containerUrl: 'https://g8kd8kbc5ge8.runs.apify.net'
                  isContainerServerReady: true
                  gitBranchName: master
                  usage:
                    ACTOR_COMPUTE_UNITS: 3
                    DATASET_READS: 4
                    DATASET_WRITES: 4
                    KEY_VALUE_STORE_READS: 5
                    KEY_VALUE_STORE_WRITES: 3
                    KEY_VALUE_STORE_LISTS: 5
                    REQUEST_QUEUE_READS: 2
                    REQUEST_QUEUE_WRITES: 1
                    DATA_TRANSFER_INTERNAL_GBYTES: 1
                    DATA_TRANSFER_EXTERNAL_GBYTES?: 3
                    PROXY_RESIDENTIAL_TRANSFER_GBYTES: 34
                    PROXY_SERPS: 3
                  usageTotalUsd: 0.2654
                  usageUsd:
                    ACTOR_COMPUTE_UNITS: 0.072
                    DATASET_READS: 0.0004
                    DATASET_WRITES: 0.0002
                    KEY_VALUE_STORE_READS: 0.0006
                    KEY_VALUE_STORE_WRITES: 0.002
                    KEY_VALUE_STORE_LISTS: 0.004
                    REQUEST_QUEUE_READS: 0.005
                    REQUEST_QUEUE_WRITES: 0.02
                    DATA_TRANSFER_INTERNAL_GBYTES: 0.0004
                    DATA_TRANSFER_EXTERNAL_GBYTES?: 0.0002
                    PROXY_RESIDENTIAL_TRANSFER_GBYTES: 0.16
                    PROXY_SERPS: 0.0006
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/run-collection/run-actor'
      x-js-parent: ActorClient
      x-js-name: start
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/ActorClient#start'
      x-py-parent: ActorClientAsync
      x-py-name: call
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/ActorClientAsync#call'
  '/v2/acts/{actorId}/run-sync':
    post:
      tags:
        - Actors/Run actor synchronously
      summary: With input
      description: |
        Runs a specific Actor and returns its output.


        The POST payload including its `Content-Type` header is passed as `INPUT` to
        the Actor (usually <code>application/json</code>).

        The HTTP response contains Actors `OUTPUT` record from its default
        key-value store.


        The Actor is started with the default options; you can override them using
        various URL query parameters.

        If the Actor run exceeds 300<!-- MAX_ACTOR_JOB_SYNC_WAIT_SECS --> seconds,
        the HTTP response will have status 408 (Request Timeout).


        Beware that it might be impossible to maintain an idle HTTP connection for a
        long period of time, due to client timeout or network conditions. Make sure your HTTP client is
        configured to have a long enough connection timeout.

        If the connection breaks, you will not receive any information about the run
        and its status.


        To run the Actor asynchronously, use the [Run
        Actor](#/reference/actors/run-collection/run-actor) API endpoint instead.
      operationId: act_runSync_post
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
        - name: outputRecordKey
          in: query
          description: |-
            Key of the record from run's default key-value store to be returned
                                                         in the response. By default, it is `OUTPUT`.
          style: form
          explode: true
          schema:
            type: string
            example: OUTPUT
        - name: timeout
          in: query
          description: |
            Optional timeout for the run, in seconds. By default, the run uses a
            timeout specified in the default run configuration for the Actor.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 60
        - name: memory
          in: query
          description: |
            Memory limit for the run, in megabytes. The amount of memory can be set
            to a power of 2 with a minimum of 128. By default, the run uses a memory
            limit specified in the default run configuration for the Actor.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 256
        - name: maxItems
          in: query
          description: |
            The maximum number of items that the Actor run should return. This is
            useful for pay-per-result Actors, as it allows you to limit the number
            of results that will be charged to your subscription. You can access the
            maximum number of items in your Actor by using the
            `ACTOR_MAX_PAID_DATASET_ITEMS` environment variable.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 1000
        - name: build
          in: query
          description: |
            Specifies the Actor build to run. It can be either a build tag or build
            number. By default, the run uses the build specified in the default run
            configuration for the Actor (typically `latest`).
          style: form
          explode: true
          schema:
            type: string
            example: 0.1.234
        - name: webhooks
          in: query
          description: |
            Specifies optional webhooks associated with the Actor run, which can be
            used to receive a notification

            e.g. when the Actor finished or failed. The value is a Base64-encoded
            JSON array of objects defining the webhooks. For more information, see

            [Webhooks
            documentation](https://docs.apify.com/platform/integrations/webhooks).
          style: form
          explode: true
          schema:
            type: string
            example: dGhpcyBpcyBqdXN0IGV4YW1wbGUK...
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
            example:
              foo: bar
        required: true
      responses:
        '201':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
              example:
                bar: foo
        '400':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1run-sync/get/responses/400/content/application~1json/schema'
              example:
                error:
                  type: run-failed
                  message: 'Actor run did not succeed (run ID: 55uatRrZib4xbZs, status: FAILED)'
        '408':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1run-sync/get/responses/400/content/application~1json/schema'
              example:
                error:
                  type: run-timeout-exceeded
                  message: Actor run exceeded timeout of 300 seconds for this API endpoint
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/run-actor-synchronously/with-input'
    get:
      tags:
        - Actors/Run actor synchronously
      summary: Without input
      description: |
        Runs a specific Actor and returns its output.

        The run must finish in 300<!-- MAX_ACTOR_JOB_SYNC_WAIT_SECS --> seconds
        otherwise the API endpoint returns a timeout error.

        The Actor is not passed any input.


        Beware that it might be impossible to maintain an idle HTTP connection for a
        long period of time,

        due to client timeout or network conditions. Make sure your HTTP client is
        configured to have a long enough connection timeout.

        If the connection breaks, you will not receive any information about the run
        and its status.


        To run the Actor asynchronously, use the [Run
        Actor](#/reference/actors/run-collection/run-actor) API endpoint instead.
      operationId: act_runSync_get
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
        - name: outputRecordKey
          in: query
          description: |-
            Key of the record from run's default key-value store to be returned
                                                         in the response. By default, it is `OUTPUT`.
          style: form
          explode: true
          schema:
            type: string
            example: OUTPUT
        - name: timeout
          in: query
          description: |
            Optional timeout for the run, in seconds. By default, the run uses a
            timeout specified in the default run configuration for the Actor.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 60
        - name: memory
          in: query
          description: |
            Memory limit for the run, in megabytes. The amount of memory can be set
            to a power of 2 with a minimum of 128. By default, the run uses a memory
            limit specified in the default run configuration for the Actor.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 256
        - name: maxItems
          in: query
          description: |
            The maximum number of items that the Actor run should return. This is
            useful for pay-per-result Actors, as it allows you to limit the number
            of results that will be charged to your subscription. You can access the
            maximum number of items in your Actor by using the
            `ACTOR_MAX_PAID_DATASET_ITEMS` environment variable.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 1000
        - name: build
          in: query
          description: |
            Specifies the Actor build to run. It can be either a build tag or build
            number. By default, the run uses the build specified in the default run
            configuration for the Actor (typically `latest`).
          style: form
          explode: true
          schema:
            type: string
            example: 0.1.234
        - name: webhooks
          in: query
          description: |
            Specifies optional webhooks associated with the Actor run, which can be
            used to receive a notification

            e.g. when the Actor finished or failed. The value is a Base64-encoded
            JSON array of objects defining the webhooks. For more information, see

            [Webhooks
            documentation](https://docs.apify.com/platform/integrations/webhooks).
          style: form
          explode: true
          schema:
            type: string
            example: dGhpcyBpcyBqdXN0IGV4YW1wbGUK...
      responses:
        '201':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
              example:
                foo: bar
        '400':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: ErrorResponse
                required:
                  - error
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - type
                      - message
                    properties:
                      type:
                        type: string
                        example: run-failed
                      message:
                        type: string
                        example: 'Actor run did not succeed (run ID: 55uatRrZib4xbZs, status: FAILED)'
              example:
                error:
                  type: run-failed
                  message: 'Actor run did not succeed (run ID: 55uatRrZib4xbZs, status: FAILED)'
        '408':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1run-sync/get/responses/400/content/application~1json/schema'
              example:
                error:
                  type: run-timeout-exceeded
                  message: Actor run exceeded timeout of 60 seconds for this API endpoint
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/run-actor-synchronously/without-input'
  '/v2/acts/{actorId}/run-sync-get-dataset-items':
    post:
      tags:
        - Actors/Run Actor synchronously and get dataset items
      summary: Run actor synchronously with input and get dataset items
      description: |
        Runs a specific Actor and returns its dataset items.


        The POST payload including its `Content-Type` header is passed as `INPUT` to
        the Actor (usually `application/json`).

        The HTTP response contains the Actors dataset items, while the format of
        items depends on specifying dataset items' `format` parameter.


        You can send all the same options in parameters as the [Get Dataset
        Items](#/reference/datasets/item-collection/get-items) API endpoint.


        The Actor is started with the default options; you can override them using
        URL query parameters.

        If the Actor run exceeds 300<!-- MAX_ACTOR_JOB_SYNC_WAIT_SECS --> seconds,

        the HTTP response will return the 408 status code (Request Timeout).


        Beware that it might be impossible to maintain an idle HTTP connection for a
        long period of time,

        due to client timeout or network conditions. Make sure your HTTP client is
        configured to have a long enough connection timeout.

        If the connection breaks, you will not receive any information about the run
        and its status.


        To run the Actor asynchronously, use the [Run
        Actor](#/reference/actors/run-collection/run-actor) API endpoint instead.
      operationId: act_runSyncGetDatasetItems_post
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
        - name: timeout
          in: query
          description: |
            Optional timeout for the run, in seconds. By default, the run uses a
            timeout specified in the default run configuration for the Actor.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 60
        - name: memory
          in: query
          description: |
            Memory limit for the run, in megabytes. The amount of memory can be set
            to a power of 2 with a minimum of 128. By default, the run uses a memory
            limit specified in the default run configuration for the Actor.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 256
        - name: maxItems
          in: query
          description: |
            The maximum number of items that the Actor run should return. This is
            useful for pay-per-result Actors, as it allows you to limit the number
            of results that will be charged to your subscription. You can access the
            maximum number of items in your Actor by using the
            `ACTOR_MAX_PAID_DATASET_ITEMS` environment variable.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 1000
        - name: build
          in: query
          description: |
            Specifies the Actor build to run. It can be either a build tag or build
            number. By default, the run uses the build specified in the default run
            configuration for the Actor (typically `latest`).
          style: form
          explode: true
          schema:
            type: string
            example: 0.1.234
        - name: webhooks
          in: query
          description: |
            Specifies optional webhooks associated with the Actor run, which can be
            used to receive a notification

            e.g. when the Actor finished or failed. The value is a Base64-encoded
            JSON array of objects defining the webhooks. For more information, see

            [Webhooks
            documentation](https://docs.apify.com/platform/integrations/webhooks).
          style: form
          explode: true
          schema:
            type: string
            example: dGhpcyBpcyBqdXN0IGV4YW1wbGUK...
        - name: format
          in: query
          description: |
            Format of the results, possible values are: `json`, `jsonl`, `csv`,
            `html`, `xlsx`, `xml` and `rss`. The default value is `json`.
          style: form
          explode: true
          schema:
            type: string
            example: json
        - name: clean
          in: query
          description: |
            If `true` or `1` then the API endpoint returns only non-empty items and
            skips hidden fields

            (i.e. fields starting with the # character).

            The `clean` parameter is just a shortcut for `skipHidden=true` and
            `skipEmpty=true` parameters.

            Note that since some objects might be skipped from the output, that the
            result might contain less items than the `limit` value.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: offset
          in: query
          description: |
            Number of items that should be skipped at the start. The default value
            is `0`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 0
        - name: limit
          in: query
          description: Maximum number of items to return. By default there is no limit.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 99
        - name: fields
          in: query
          description: |
            A comma-separated list of fields which should be picked from the items,

            only these fields will remain in the resulting record objects.

            Note that the fields in the outputted items are sorted the same way as
            they are specified in the `fields` query parameter.

            You can use this feature to effectively fix the output format.
          style: form
          explode: true
          schema:
            type: string
            example: 'myValue,myOtherValue'
        - name: omit
          in: query
          description: A comma-separated list of fields which should be omitted from the items.
          style: form
          explode: true
          schema:
            type: string
            example: 'myValue,myOtherValue'
        - name: unwind
          in: query
          description: |
            A comma-separated list of fields which should be unwound, in order which
            they should be processed. Each field should be either an array or an object.

            If the field is an array then every element of

            the array will become a separate record and merged with parent object.

            If the unwound field is an object then it is merged with the parent
            object

            If the unwound field is missing or its value is neither an array nor an
            object and therefore cannot be merged with a parent object then the item
            gets preserved as it is.

            Note that the unwound items ignore the `desc` parameter.
          style: form
          explode: true
          schema:
            type: string
            example: 'myValue,myOtherValue'
        - name: flatten
          in: query
          description: |
            A comma-separated list of fields which should transform nested objects
            into flat structures.

            For example, with `flatten="foo"` the object `{"foo":{"bar": "hello"}}`
            is turned into `{"foo.bar": "hello"}`.

            The original object with properties is replaced with the flattened
            object.
          style: form
          explode: true
          schema:
            type: string
            example: myValue
        - name: desc
          in: query
          description: |
            By default, results are returned in the same order as they were stored.
            To reverse the order, set this parameter to `true` or `1`.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: attachment
          in: query
          description: |
            If `true` or `1` then the response will define the `Content-Disposition:
            attachment` header, forcing a web browser to download the file rather
            than to display it. By default this header is not present.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: delimiter
          in: query
          description: |
            A delimiter character for CSV files, only used if `format=csv`. You
            might need to URL-encode the character (e.g. use `%09` for tab or `%3B`
            for semicolon). The default delimiter is a simple comma (`,`).
          style: form
          explode: true
          schema:
            type: string
            example: ;
        - name: bom
          in: query
          description: |
            All text responses are encoded in UTF-8 encoding. By default, the
            `format=csv` files are prefixed with

            the UTF-8 Byte Order Mark (BOM), while `json`, `jsonl`, `xml`, `html`
            and `rss` files are not.

            If you want to override this default behavior, specify `bom=1` query
            parameter to include the BOM or `bom=0` to skip it.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: xmlRoot
          in: query
          description: |
            Overrides default root element name of `xml` output. By default the root
            element is `items`.
          style: form
          explode: true
          schema:
            type: string
            example: items
        - name: xmlRow
          in: query
          description: |
            Overrides default element name that wraps each page or page function
            result object in `xml` output. By default the element name is `item`.
          style: form
          explode: true
          schema:
            type: string
            example: item
        - name: skipHeaderRow
          in: query
          description: If `true` or `1` then header row in the `csv` format is skipped.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: skipHidden
          in: query
          description: |-
            If `true` or `1` then hidden fields are skipped from the output,
            i.e. fields starting with the `#` character.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: skipEmpty
          in: query
          description: |
            If `true` or `1` then empty items are skipped from the output.

            Note that if used, the results might contain less items than the limit
            value.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: simplified
          in: query
          description: |
            If `true` or `1` then, the endpoint applies the
            `fields=url,pageFunctionResult,errorInfo`

            and `unwind=pageFunctionResult` query parameters. This feature is used
            to emulate simplified results provided by the

            legacy Apify Crawler product and it's not recommended to use it in new
            integrations.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: skipFailedPages
          in: query
          description: |
            If `true` or `1` then, the all the items with errorInfo property will be
            skipped from the output.

            This feature is here to emulate functionality of API version 1 used for
            the legacy Apify Crawler product and it's not recommended to use it in
            new integrations.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
            example:
              foo: bar
        required: true
      responses:
        '201':
          description: ''
          headers:
            X-Apify-Pagination-Offset:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '0'
            X-Apify-Pagination-Limit:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '100'
            X-Apify-Pagination-Count:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '100'
            X-Apify-Pagination-Total:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '10204'
          content:
            application/json:
              schema:
                type: object
                example:
                  - myValue: some value
                    myOtherValue: some other value
              example:
                - myValue: some value
                  myOtherValue: some other value
        '400':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1run-sync/get/responses/400/content/application~1json/schema'
              example:
                error:
                  type: run-failed
                  message: 'Actor run did not succeed (run ID: 55uatRrZib4xbZs, status: FAILED)'
        '408':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1run-sync/get/responses/400/content/application~1json/schema'
              example:
                error:
                  type: run-timeout-exceeded
                  message: Actor run exceeded timeout of 300 seconds for this API endpoint
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/run-actor-synchronously-and-get-dataset-items/run-actor-synchronously-with-input-and-get-dataset-items'
    get:
      tags:
        - Actors/Run Actor synchronously and get dataset items
      summary: Run actor synchronously without input and get dataset items
      description: |
        Runs a specific actor and returns its dataset items.

        The run must finish in 300<!-- MAX_ACTOR_JOB_SYNC_WAIT_SECS --> seconds
        otherwise the API endpoint returns a timeout error.

        The actor is not passed any input.


        It allows to send all possible options in parameters from [Get Dataset
        Items](#/reference/datasets/item-collection/get-items) API endpoint.


        Beware that it might be impossible to maintain an idle HTTP connection for a
        long period of time,

        due to client timeout or network conditions. Make sure your HTTP client is
        configured to have a long enough connection timeout.

        If the connection breaks, you will not receive any information about the run
        and its status.


        To run the Actor asynchronously, use the [Run
        Actor](#/reference/actors/run-collection/run-actor) API endpoint instead.
      operationId: act_runSyncGetDatasetItems_get
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
        - name: timeout
          in: query
          description: |
            Optional timeout for the run, in seconds. By default, the run uses a
            timeout specified in the default run configuration for the Actor.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 60
        - name: memory
          in: query
          description: |
            Memory limit for the run, in megabytes. The amount of memory can be set
            to a power of 2 with a minimum of 128. By default, the run uses a memory
            limit specified in the default run configuration for the Actor.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 256
        - name: maxItems
          in: query
          description: |
            The maximum number of items that the Actor run should return. This is
            useful for pay-per-result Actors, as it allows you to limit the number
            of results that will be charged to your subscription. You can access the
            maximum number of items in your Actor by using the
            `ACTOR_MAX_PAID_DATASET_ITEMS` environment variable.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 1000
        - name: build
          in: query
          description: |
            Specifies the Actor build to run. It can be either a build tag or build
            number. By default, the run uses the build specified in the default run
            configuration for the Actor (typically `latest`).
          style: form
          explode: true
          schema:
            type: string
            example: 0.1.234
        - name: webhooks
          in: query
          description: |
            Specifies optional webhooks associated with the Actor run, which can be
            used to receive a notification

            e.g. when the Actor finished or failed. The value is a Base64-encoded
            JSON array of objects defining the webhooks. For more information, see

            [Webhooks
            documentation](https://docs.apify.com/platform/integrations/webhooks).
          style: form
          explode: true
          schema:
            type: string
            example: dGhpcyBpcyBqdXN0IGV4YW1wbGUK...
        - name: format
          in: query
          description: |
            Format of the results, possible values are: `json`, `jsonl`, `csv`,
            `html`, `xlsx`, `xml` and `rss`. The default value is `json`.
          style: form
          explode: true
          schema:
            type: string
            example: json
        - name: clean
          in: query
          description: |
            If `true` or `1` then the API endpoint returns only non-empty items and
            skips hidden fields

            (i.e. fields starting with the # character).

            The `clean` parameter is just a shortcut for `skipHidden=true` and
            `skipEmpty=true` parameters.

            Note that since some objects might be skipped from the output, that the
            result might contain less items than the `limit` value.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: offset
          in: query
          description: |
            Number of items that should be skipped at the start. The default value
            is `0`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 0
        - name: limit
          in: query
          description: Maximum number of items to return. By default there is no limit.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 99
        - name: fields
          in: query
          description: |
            A comma-separated list of fields which should be picked from the items,

            only these fields will remain in the resulting record objects.

            Note that the fields in the outputted items are sorted the same way as
            they are specified in the `fields` query parameter.

            You can use this feature to effectively fix the output format.
          style: form
          explode: true
          schema:
            type: string
            example: 'myValue,myOtherValue'
        - name: omit
          in: query
          description: A comma-separated list of fields which should be omitted from the items.
          style: form
          explode: true
          schema:
            type: string
            example: 'myValue,myOtherValue'
        - name: unwind
          in: query
          description: |
            A comma-separated list of fields which should be unwound, in order which
            they should be processed. Each field should be either an array or an object.

            If the field is an array then every element of

            the array will become a separate record and merged with parent object.

            If the unwound field is an object then it is merged with the parent
            object

            If the unwound field is missing or its value is neither an array nor an
            object and therefore cannot be merged with a parent object then the item
            gets preserved as it is.

            Note that the unwound items ignore the `desc` parameter.
          style: form
          explode: true
          schema:
            type: string
            example: 'myValue,myOtherValue'
        - name: flatten
          in: query
          description: |
            A comma-separated list of fields which should transform nested objects
            into flat structures.

            For example, with `flatten="foo"` the object `{"foo":{"bar": "hello"}}`
            is turned into `{"foo.bar": "hello"}`.

            The original object with properties is replaced with the flattened
            object.
          style: form
          explode: true
          schema:
            type: string
            example: myValue
        - name: desc
          in: query
          description: |
            By default, results are returned in the same order as they were stored.
            To reverse the order, set this parameter to `true` or `1`.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: attachment
          in: query
          description: |
            If `true` or `1` then the response will define the `Content-Disposition:
            attachment` header, forcing a web browser to download the file rather
            than to display it. By default this header is not present.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: delimiter
          in: query
          description: |
            A delimiter character for CSV files, only used if `format=csv`. You
            might need to URL-encode the character (e.g. use `%09` for tab or `%3B`
            for semicolon). The default delimiter is a simple comma (`,`).
          style: form
          explode: true
          schema:
            type: string
            example: ;
        - name: bom
          in: query
          description: |
            All text responses are encoded in UTF-8 encoding. By default, the
            `format=csv` files are prefixed with

            the UTF-8 Byte Order Mark (BOM), while `json`, `jsonl`, `xml`, `html`
            and `rss` files are not.

            If you want to override this default behavior, specify `bom=1` query
            parameter to include the BOM or `bom=0` to skip it.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: xmlRoot
          in: query
          description: |
            Overrides default root element name of `xml` output. By default the root
            element is `items`.
          style: form
          explode: true
          schema:
            type: string
            example: items
        - name: xmlRow
          in: query
          description: |
            Overrides default element name that wraps each page or page function
            result object in `xml` output. By default the element name is `item`.
          style: form
          explode: true
          schema:
            type: string
            example: item
        - name: skipHeaderRow
          in: query
          description: If `true` or `1` then header row in the `csv` format is skipped.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: skipHidden
          in: query
          description: |-
            If `true` or `1` then hidden fields are skipped from the output,
            i.e. fields starting with the `#` character.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: skipEmpty
          in: query
          description: |
            If `true` or `1` then empty items are skipped from the output.

            Note that if used, the results might contain less items than the limit
            value.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: simplified
          in: query
          description: |
            If `true` or `1` then, the endpoint applies the
            `fields=url,pageFunctionResult,errorInfo`

            and `unwind=pageFunctionResult` query parameters. This feature is used
            to emulate simplified results provided by the

            legacy Apify Crawler product and it's not recommended to use it in new
            integrations.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: skipFailedPages
          in: query
          description: |
            If `true` or `1` then, the all the items with errorInfo property will be
            skipped from the output.

            This feature is here to emulate functionality of API version 1 used for
            the legacy Apify Crawler product and it's not recommended to use it in
            new integrations.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
      responses:
        '201':
          description: ''
          headers:
            X-Apify-Pagination-Offset:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '0'
            X-Apify-Pagination-Limit:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '100'
            X-Apify-Pagination-Count:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '100'
            X-Apify-Pagination-Total:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '10204'
          content:
            application/json:
              schema:
                type: object
              example:
                - myValue: some value
                  myOtherValue: some other value
        '400':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1run-sync/get/responses/400/content/application~1json/schema'
              example:
                error:
                  type: run-failed
                  message: 'Actor run did not succeed (run ID: 55uatRrZib4xbZs, status: FAILED)'
        '408':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1run-sync/get/responses/400/content/application~1json/schema'
              example:
                error:
                  type: run-timeout-exceeded
                  message: Actor run exceeded timeout of 60 seconds for this API endpoint
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/run-actor-synchronously-and-get-dataset-items/run-actor-synchronously-without-input-and-get-dataset-items'
  '/v2/acts/{actorId}/runs/{runId}':
    get:
      tags:
        - Actors/Run object
      summary: Get run
      description: |
        **[DEPRECATED]** API endpoints related to run of the Actor were moved under
        new namespace [`actor-runs`](#/reference/actor-runs).**[DEPRECATED]** API
        endpoints related to run of the Actor were moved under new namespace
        [`actor-runs`](#/reference/actor-runs).


        Gets an object that contains all the details about a specific run of an
        Actor.


        By passing the optional `waitForFinish` parameter the API endpoint will
        synchronously wait for the run to finish.

        This is useful to avoid periodic polling when waiting for Actor run to
        complete.


        This endpoint does not require the authentication token. Instead, calls are authenticated using a hard-to-guess ID of the run. However,
        if you access the endpoint without the token, certain attributes, such as `usageUsd` and `usageTotalUsd`, will be hidden.
      operationId: act_run_get
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
        - name: runId
          in: path
          description: Run ID.
          required: true
          style: simple
          schema:
            type: string
            example: 3KH8gEpp4d8uQSe8T
        - name: waitForFinish
          in: query
          description: |
            The maximum number of seconds the server waits for the run to finish. By
            default it is `0`, the maximum value is `60`. <!--
            MAX_ACTOR_JOB_ASYNC_WAIT_SECS -->
                                                     If the build finishes in time then the returned run object will have a terminal status (e.g. `SUCCEEDED`),
                                                     otherwise it will have a transitional status (e.g. `RUNNING`).
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 60
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1actor-runs~1%7BrunId%7D/put/responses/200/content/application~1json/schema'
              example:
                data:
                  id: HG7ML7M8z78YcAPEB
                  actId: HDSasDasz78YcAPEB
                  userId: 7sT5jcggjjA9fNcxF
                  actorTaskId: KJHSKHausidyaJKHs
                  startedAt: '2019-11-30T07:34:24.202Z'
                  finishedAt: '2019-12-12T09:30:12.202Z'
                  status: RUNNING
                  statusMessage: Actor is running
                  isStatusMessageTerminal: false
                  meta:
                    origin: WEB
                    clientIp: 172.234.12.34
                    userAgent: Mozilla/5.0 (iPad)
                  stats:
                    inputBodyLen: 240
                    restartCount: 0
                    resurrectCount: 2
                    memAvgBytes: 267874071.9
                    memMaxBytes: 404713472
                    memCurrentBytes: 0
                    cpuAvgUsage: 33.75321011075384
                    cpuMaxUsage: 169.65073553494125
                    cpuCurrentUsage: 0
                    netRxBytes: 103508042
                    netTxBytes: 4854600
                    durationMillis: 248472
                    runTimeSecs: 248.472
                    metamorph: 0
                    computeUnits: 0.13804
                  options:
                    build: latest
                    timeoutSecs: 300
                    memoryMbytes: 1024
                    diskMbytes: 2048
                  buildId: 7sT5jcggjjA9fNcxF
                  exitCode: 0
                  defaultKeyValueStoreId: eJNzqsbPiopwJcgGQ
                  defaultDatasetId: wmKPijuyDnPZAPRMk
                  defaultRequestQueueId: FL35cSF7jrxr3BY39
                  buildNumber: 0.0.36
                  containerUrl: 'https://g8kd8kbc5ge8.runs.apify.net'
                  isContainerServerReady: true
                  gitBranchName: master
                  usage:
                    ACTOR_COMPUTE_UNITS: 3
                    DATASET_READS: 4
                    DATASET_WRITES: 4
                    KEY_VALUE_STORE_READS: 5
                    KEY_VALUE_STORE_WRITES: 3
                    KEY_VALUE_STORE_LISTS: 5
                    REQUEST_QUEUE_READS: 2
                    REQUEST_QUEUE_WRITES: 1
                    DATA_TRANSFER_INTERNAL_GBYTES: 1
                    DATA_TRANSFER_EXTERNAL_GBYTES?: 3
                    PROXY_RESIDENTIAL_TRANSFER_GBYTES: 34
                    PROXY_SERPS: 3
                  usageTotalUsd: 0.2654
                  usageUsd:
                    ACTOR_COMPUTE_UNITS: 0.072
                    DATASET_READS: 0.0004
                    DATASET_WRITES: 0.0002
                    KEY_VALUE_STORE_READS: 0.0006
                    KEY_VALUE_STORE_WRITES: 0.002
                    KEY_VALUE_STORE_LISTS: 0.004
                    REQUEST_QUEUE_READS: 0.005
                    REQUEST_QUEUE_WRITES: 0.02
                    DATA_TRANSFER_INTERNAL_GBYTES: 0.0004
                    DATA_TRANSFER_EXTERNAL_GBYTES?: 0.0002
                    PROXY_RESIDENTIAL_TRANSFER_GBYTES: 0.16
                    PROXY_SERPS: 0.0006
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/run-object/get-run'
  '/v2/acts/{actorId}/runs/{runId}/abort':
    post:
      tags:
        - Actors/Abort run
      summary: Abort run
      description: |
        **[DEPRECATED]** API endpoints related to run of the Actor were moved under
        new namespace [`actor-runs`](#/reference/actor-runs).Aborts an Actor run and
        returns an object that contains all the details about the run.

        Only runs that are starting or running are aborted. For runs with status
        `FINISHED`, `FAILED`, `ABORTING` and `TIMED-OUT` this call does nothing.
      operationId: act_run_abort_post
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
        - name: runId
          in: path
          description: Run ID.
          required: true
          style: simple
          schema:
            type: string
            example: 3KH8gEpp4d8uQSe8T
        - name: gracefully
          in: query
          description: |-
            If true passed, the Actor run will abort gracefully.
                                                    It will send `aborting` and `persistState` event into run and force-stop the run after 30 seconds.
                                                    It is helpful in cases where you plan to resurrect the run later.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1actor-runs~1%7BrunId%7D/put/responses/200/content/application~1json/schema'
              example:
                data:
                  id: HG7ML7M8z78YcAPEB
                  actId: janedoe~my-actor
                  userId: BPWZBd7Z9c746JAng
                  actorTaskId: rANaydYhUxjsnA3oz
                  startedAt: '2019-11-30T07:34:24.202Z'
                  finishedAt: '2019-12-12T09:30:12.202Z'
                  status: ABORTED
                  statusMessage: Actor was aborted
                  isStatusMessageTerminal: true
                  meta:
                    origin: WEB
                    clientIp: 172.234.12.34
                    userAgent: Mozilla/5.0 (iPad)
                  stats:
                    inputBodyLen: 240
                    restartCount: 0
                    resurrectCount: 1
                    memAvgBytes: 35914228.4
                    memMaxBytes: 38244352
                    memCurrentBytes: 0
                    cpuAvgUsage: 0.00955965
                    cpuMaxUsage: 3.1546
                    cpuCurrentUsage: 0
                    netRxBytes: 2652
                    netTxBytes: 1338
                    durationMillis: 26239
                    runTimeSecs: 26.239
                    metamorph: 0
                    computeUnits: 0.0072886
                  options:
                    build: latest
                    timeoutSecs: 300
                    memoryMbytes: 1024
                    diskMbytes: 2048
                  buildId: 7sT5jcggjjA9fNcxF
                  exitCode: 0
                  defaultKeyValueStoreId: eJNzqsbPiopwJcgGQ
                  defaultDatasetId: wmKPijuyDnPZAPRMk
                  defaultRequestQueueId: FL35cSF7jrxr3BY39
                  isContainerServerReady: false
                  gitBranchName: master
                  usage:
                    ACTOR_COMPUTE_UNITS: 3
                    DATASET_READS: 4
                    DATASET_WRITES: 4
                    KEY_VALUE_STORE_READS: 5
                    KEY_VALUE_STORE_WRITES: 3
                    KEY_VALUE_STORE_LISTS: 5
                    REQUEST_QUEUE_READS: 2
                    REQUEST_QUEUE_WRITES: 1
                    DATA_TRANSFER_INTERNAL_GBYTES: 1
                    DATA_TRANSFER_EXTERNAL_GBYTES?: 3
                    PROXY_RESIDENTIAL_TRANSFER_GBYTES: 34
                    PROXY_SERPS: 3
                  usageTotalUsd: 0.2654
                  usageUsd:
                    ACTOR_COMPUTE_UNITS: 0.072
                    DATASET_READS: 0.0004
                    DATASET_WRITES: 0.0002
                    KEY_VALUE_STORE_READS: 0.0006
                    KEY_VALUE_STORE_WRITES: 0.002
                    KEY_VALUE_STORE_LISTS: 0.004
                    REQUEST_QUEUE_READS: 0.005
                    REQUEST_QUEUE_WRITES: 0.02
                    DATA_TRANSFER_INTERNAL_GBYTES: 0.0004
                    DATA_TRANSFER_EXTERNAL_GBYTES?: 0.0002
                    PROXY_RESIDENTIAL_TRANSFER_GBYTES: 0.16
                    PROXY_SERPS: 0.0006
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/abort-run/abort-run'
  '/v2/acts/{actorId}/runs/{runId}/metamorph':
    post:
      tags:
        - Actors/Metamorph run
      summary: Metamorph run
      description: |
        **[DEPRECATED]** API endpoints related to run of the actor were moved under
        new namespace [`actor-runs`](#/reference/actor-runs).Transforms an actor run
        into a run of another actor with a new input.

        This is useful if you want to use another actor to finish the work

        of your current actor run, without the need to create a completely new run
        and waiting for its finish.

        For the users of your actors, the metamorph operation is transparent, they
        will just see your actor got the work done.


        There is a limit on how many times you can metamorph a single run. You can
        check the limit in [the Actor runtime
        limits](https://docs.apify.com/platform/limits#actor-limits).


        Internally, the system stops the Docker container corresponding to the actor
        run

        and starts a new container using a different Docker image.

        All the default storages are preserved and the new input is stored under the
        `INPUT-METAMORPH-1` key in the same default key-value store.


        For more information, see the [Actor
        docs](https://docs.apify.com/platform/actors/development/programming-interface/metamorph).
      operationId: act_run_metamorph_post
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
        - name: runId
          in: path
          description: Actor run ID.
          required: true
          style: simple
          schema:
            type: string
            example: 3KH8gEpp4d8uQSe8T
        - name: targetActorId
          in: query
          description: ID of a target Actor that the run should be transformed into.
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: HDSasDasz78YcAPEB
        - name: build
          in: query
          description: |
            Optional build of the target Actor.

            It can be either a build tag or build number. By default, the run uses
            the build specified in the default run configuration for the target
            Actor (typically `latest`).
          style: form
          explode: true
          schema:
            type: string
            example: beta
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1actor-runs~1%7BrunId%7D/put/responses/200/content/application~1json/schema'
              example:
                data:
                  id: HG7ML7M8z78YcAPEB
                  actId: janedoe~my-actor
                  userId: PNWZBd7Z9c746JAnF
                  startedAt: '2019-11-30T07:34:24.202Z'
                  finishedAt: null
                  status: RUNNING
                  statusMessage: Actor is running
                  isStatusMessageTerminal: false
                  meta:
                    origin: WEB
                    clientIp: 172.234.12.34
                    userAgent: Mozilla/5.0 (iPad)
                  stats:
                    inputBodyLen: 240
                    restartCount: 0
                    resurrectCount: 1
                    memAvgBytes: 35914228.4
                    memMaxBytes: 38244352
                    memCurrentBytes: 0
                    cpuAvgUsage: 0.00955965
                    cpuMaxUsage: 3.1546
                    cpuCurrentUsage: 0
                    netRxBytes: 2652
                    netTxBytes: 1338
                    durationMillis: 26239
                    runTimeSecs: 26.239
                    metamorph: 0
                    computeUnits: 0.0072886
                  options:
                    build: latest
                    timeoutSecs: 300
                    memoryMbytes: 1024
                    diskMbytes: 2048
                  buildId: HG7ML7M8z78YcAPEB
                  defaultKeyValueStoreId: eJNzqsbPiopwJcgGQ
                  defaultDatasetId: wmKPijuyDnPZAPRMk
                  defaultRequestQueueId: FL35cSF7jrxr3BY39
                  metamorphs:
                    - createdAt: '2019-11-30T07:39:24.202Z'
                      actorId: nspoEjklmnsF2oosD
                      buildId: ME6oKecqy5kXDS4KQ
                      inputKey: INPUT-METAMORPH-1
                  buildNumber: 0.1.10
                  containerUrl: 'https://hfewsyknno9o.runs.apify.com'
                  isContainerServerReady: false
                  gitBranchName: master
                  usage:
                    ACTOR_COMPUTE_UNITS: 3
                    DATASET_READS: 4
                    DATASET_WRITES: 4
                    KEY_VALUE_STORE_READS: 5
                    KEY_VALUE_STORE_WRITES: 3
                    KEY_VALUE_STORE_LISTS: 5
                    REQUEST_QUEUE_READS: 2
                    REQUEST_QUEUE_WRITES: 1
                    DATA_TRANSFER_INTERNAL_GBYTES: 1
                    DATA_TRANSFER_EXTERNAL_GBYTES?: 3
                    PROXY_RESIDENTIAL_TRANSFER_GBYTES: 34
                    PROXY_SERPS: 3
                  usageTotalUsd: 0.2654
                  usageUsd:
                    ACTOR_COMPUTE_UNITS: 0.072
                    DATASET_READS: 0.0004
                    DATASET_WRITES: 0.0002
                    KEY_VALUE_STORE_READS: 0.0006
                    KEY_VALUE_STORE_WRITES: 0.002
                    KEY_VALUE_STORE_LISTS: 0.004
                    REQUEST_QUEUE_READS: 0.005
                    REQUEST_QUEUE_WRITES: 0.02
                    DATA_TRANSFER_INTERNAL_GBYTES: 0.0004
                    DATA_TRANSFER_EXTERNAL_GBYTES?: 0.0002
                    PROXY_RESIDENTIAL_TRANSFER_GBYTES: 0.16
                    PROXY_SERPS: 0.0006
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/metamorph-run/metamorph-run'
  '/v2/acts/{actorId}/runs/{runId}/resurrect':
    post:
      tags:
        - Actors/Resurrect run
      summary: Resurrect run
      description: |
        **[DEPRECATED]** API endpoints related to run of the Actor were moved under
        new namespace [`actor-runs`](#/reference/actor-runs).Resurrects a finished
        Actor run and returns an object that contains all the details about the
        resurrected run.

        Only finished runs, i.e. runs with status `FINISHED`, `FAILED`, `ABORTED`
        and `TIMED-OUT` can be resurrected.

        Run status will be updated to RUNNING and its container will be restarted
        with the same storages

        (the same behaviour as when the run gets migrated to the new server).


        For more information, see the [Actor
        docs](https://docs.apify.com/platform/actors/running/runs-and-builds#resurrection-of-finished-run).
      operationId: act_run_resurrect_post
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
        - name: runId
          in: path
          description: Run ID.
          required: true
          style: simple
          schema:
            type: string
            example: 3KH8gEpp4d8uQSe8T
        - name: build
          in: query
          description: |
            Specifies the Actor build to run. It can be either a build tag or build
            number. By default, the run uses the build specified in the run that is
            being resurrected (typically `latest`).
          style: form
          explode: true
          schema:
            type: string
            example: 0.1.234
        - name: timeout
          in: query
          description: |
            Optional timeout for the run, in seconds. By default, the run uses a
            timeout specified in the run that is being resurrected.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 60
        - name: memory
          in: query
          description: |
            Memory limit for the run, in megabytes. The amount of memory can be set
            to a power of 2 with a minimum of 128. By default, the run uses a memory
            limit specified in the run that is being resurrected.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 256
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1actor-runs~1%7BrunId%7D/put/responses/200/content/application~1json/schema'
              example:
                data:
                  id: HG7ML7M8z78YcAPEB
                  actId: HDSasDasz78YcAPEB
                  userId: 7sT5jcggjjA9fNcxF
                  actorTaskId: KJHSKHausidyaJKHs
                  startedAt: '2019-11-30T07:34:24.202Z'
                  finishedAt: '2019-12-12T09:30:12.202Z'
                  status: RUNNING
                  statusMessage: Actor is running
                  isStatusMessageTerminal: false
                  meta:
                    origin: WEB
                    clientIp: 172.234.12.34
                    userAgent: Mozilla/5.0 (iPad)
                  stats:
                    inputBodyLen: 240
                    restartCount: 0
                    resurrectCount: 2
                    memAvgBytes: 267874071.9
                    memMaxBytes: 404713472
                    memCurrentBytes: 0
                    cpuAvgUsage: 33.75321011075384
                    cpuMaxUsage: 169.65073553494125
                    cpuCurrentUsage: 0
                    netRxBytes: 103508042
                    netTxBytes: 4854600
                    durationMillis: 248472
                    runTimeSecs: 248.472
                    metamorph: 0
                    computeUnits: 0.13804
                  options:
                    build: latest
                    timeoutSecs: 300
                    memoryMbytes: 1024
                    diskMbytes: 2048
                  buildId: 7sT5jcggjjA9fNcxF
                  exitCode: 0
                  defaultKeyValueStoreId: eJNzqsbPiopwJcgGQ
                  defaultDatasetId: wmKPijuyDnPZAPRMk
                  defaultRequestQueueId: FL35cSF7jrxr3BY39
                  buildNumber: 0.0.36
                  containerUrl: 'https://g8kd8kbc5ge8.runs.apify.net'
                  isContainerServerReady: true
                  gitBranchName: master
                  usage:
                    ACTOR_COMPUTE_UNITS: 3
                    DATASET_READS: 4
                    DATASET_WRITES: 4
                    KEY_VALUE_STORE_READS: 5
                    KEY_VALUE_STORE_WRITES: 3
                    KEY_VALUE_STORE_LISTS: 5
                    REQUEST_QUEUE_READS: 2
                    REQUEST_QUEUE_WRITES: 1
                    DATA_TRANSFER_INTERNAL_GBYTES: 1
                    DATA_TRANSFER_EXTERNAL_GBYTES?: 3
                    PROXY_RESIDENTIAL_TRANSFER_GBYTES: 34
                    PROXY_SERPS: 3
                  usageTotalUsd: 0.2654
                  usageUsd:
                    ACTOR_COMPUTE_UNITS: 0.072
                    DATASET_READS: 0.0004
                    DATASET_WRITES: 0.0002
                    KEY_VALUE_STORE_READS: 0.0006
                    KEY_VALUE_STORE_WRITES: 0.002
                    KEY_VALUE_STORE_LISTS: 0.004
                    REQUEST_QUEUE_READS: 0.005
                    REQUEST_QUEUE_WRITES: 0.02
                    DATA_TRANSFER_INTERNAL_GBYTES: 0.0004
                    DATA_TRANSFER_EXTERNAL_GBYTES?: 0.0002
                    PROXY_RESIDENTIAL_TRANSFER_GBYTES: 0.16
                    PROXY_SERPS: 0.0006
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/resurrect-run/resurrect-run'
  '/v2/acts/{actorId}/runs/last':
    get:
      tags:
        - Actors/Last run object and its storages
      summary: Get last run
      description: |
        This is not a single endpoint, but an entire group of endpoints that lets
        you to

        retrieve and manage the last run of given Actor or any of its default
        storages.
        .
      operationId: act_runs_last_get
      parameters:
        - name: actorId
          in: path
          description: Actor ID or a tilde-separated owner's username and Actor name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-actor
        - name: status
          in: query
          description: Filter for the run status.
          style: form
          explode: true
          schema:
            type: string
            example: SUCCEEDED
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1actor-runs~1%7BrunId%7D/put/responses/200/content/application~1json/schema'
              example:
                data:
                  id: HG7ML7M8z78YcAPEB
                  actId: HDSasDasz78YcAPEB
                  userId: 7sT5jcggjjA9fNcxF
                  actorTaskId: KJHSKHausidyaJKHs
                  startedAt: '2019-11-30T07:34:24.202Z'
                  finishedAt: '2019-12-12T09:30:12.202Z'
                  status: RUNNING
                  statusMessage: Actor is running
                  isStatusMessageTerminal: false
                  meta:
                    origin: WEB
                    clientIp: 172.234.12.34
                    userAgent: Mozilla/5.0 (iPad)
                  stats:
                    inputBodyLen: 240
                    restartCount: 0
                    resurrectCount: 2
                    memAvgBytes: 267874071.9
                    memMaxBytes: 404713472
                    memCurrentBytes: 0
                    cpuAvgUsage: 33.75321011075384
                    cpuMaxUsage: 169.65073553494125
                    cpuCurrentUsage: 0
                    netRxBytes: 103508042
                    netTxBytes: 4854600
                    durationMillis: 248472
                    runTimeSecs: 248.472
                    metamorph: 0
                    computeUnits: 0.13804
                  options:
                    build: latest
                    timeoutSecs: 300
                    memoryMbytes: 1024
                    diskMbytes: 2048
                  buildId: 7sT5jcggjjA9fNcxF
                  exitCode: 0
                  defaultKeyValueStoreId: eJNzqsbPiopwJcgGQ
                  defaultDatasetId: wmKPijuyDnPZAPRMk
                  defaultRequestQueueId: FL35cSF7jrxr3BY39
                  buildNumber: 0.0.36
                  containerUrl: 'https://g8kd8kbc5ge8.runs.apify.net'
                  isContainerServerReady: true
                  gitBranchName: master
                  usage:
                    ACTOR_COMPUTE_UNITS: 3
                    DATASET_READS: 4
                    DATASET_WRITES: 4
                    KEY_VALUE_STORE_READS: 5
                    KEY_VALUE_STORE_WRITES: 3
                    KEY_VALUE_STORE_LISTS: 5
                    REQUEST_QUEUE_READS: 2
                    REQUEST_QUEUE_WRITES: 1
                    DATA_TRANSFER_INTERNAL_GBYTES: 1
                    DATA_TRANSFER_EXTERNAL_GBYTES?: 3
                    PROXY_RESIDENTIAL_TRANSFER_GBYTES: 34
                    PROXY_SERPS: 3
                  usageTotalUsd: 0.2654
                  usageUsd:
                    ACTOR_COMPUTE_UNITS: 0.072
                    DATASET_READS: 0.0004
                    DATASET_WRITES: 0.0002
                    KEY_VALUE_STORE_READS: 0.0006
                    KEY_VALUE_STORE_WRITES: 0.002
                    KEY_VALUE_STORE_LISTS: 0.004
                    REQUEST_QUEUE_READS: 0.005
                    REQUEST_QUEUE_WRITES: 0.02
                    DATA_TRANSFER_INTERNAL_GBYTES: 0.0004
                    DATA_TRANSFER_EXTERNAL_GBYTES?: 0.0002
                    PROXY_RESIDENTIAL_TRANSFER_GBYTES: 0.16
                    PROXY_SERPS: 0.0006
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actors/last-run-object-and-its-storages/get-last-run'
  /v2/actor-tasks:
    get:
      tags:
        - Actor tasks/Task collection
      summary: Get list of tasks
      description: |
        Gets the complete list of tasks that a user has created or used. The
        response is a list of objects in which each object contains essential
        information about a single task.

        The endpoint supports pagination using the `limit` and `offset` parameters,
        and it does not return more than a 1000 records.

        By default, the records are sorted by the `createdAt` field in ascending
        order; therefore you can use pagination to incrementally fetch all tasks while new
        ones are still being created. To sort the records in descending order, use
        the `desc=1` parameter.
      operationId: actorTasks_get
      parameters:
        - name: offset
          in: query
          description: |
            Number of records that should be skipped at the start. The default value is `0`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 10
        - name: limit
          in: query
          description: |
            Maximum number of records to return. The default value as well as the maximum is `1000`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 99
        - name: desc
          in: query
          description: |
            If `true` or `1` then the objects are sorted by the `createdAt` field in
            descending order. By default, they are sorted in ascending order.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    allOf:
                      - title: PaginationResponse
                        required:
                          - total
                          - offset
                          - limit
                          - desc
                          - count
                        type: object
                        properties:
                          total:
                            type: number
                            example: 2
                          offset:
                            type: number
                            example: 0
                          limit:
                            type: number
                            example: 1000
                          desc:
                            type: boolean
                            example: false
                          count:
                            type: number
                            example: 2
                      - type: object
                        required:
                          - items
                        properties:
                          items:
                            type: array
                            items:
                              title: TaskShort
                              required:
                                - id
                                - userId
                                - actId
                                - actName
                                - name
                                - actUsername
                                - createdAt
                                - modifiedAt
                              type: object
                              properties:
                                id:
                                  type: string
                                  example: zdc3Pyhyz3m8vjDeM
                                userId:
                                  type: string
                                  example: wRsJZtadYvn4mBZmm
                                actId:
                                  type: string
                                  example: asADASadYvn4mBZmm
                                actName:
                                  type: string
                                  example: my-actor
                                name:
                                  type: string
                                  example: my-task
                                username:
                                  type: string
                                  nullable: true
                                  example: janedoe
                                actUsername:
                                  type: string
                                  example: janedoe
                                createdAt:
                                  type: string
                                  example: '2018-10-26T07:23:14.855Z'
                                modifiedAt:
                                  type: string
                                  example: '2018-10-26T13:30:49.578Z'
                                stats:
                                  allOf:
                                    - oneOf:
                                        - nullable: true
                                        - $ref: '#/paths/~1v2~1actor-tasks~1%7BactorTaskId%7D/put/requestBody/content/application~1json/schema/properties/stats/allOf/0/oneOf/1'
                                    - {}
              example:
                data:
                  total: 2
                  offset: 0
                  limit: 1000
                  desc: false
                  count: 2
                  items:
                    - id: zdc3Pyhyz3m8vjDeM
                      userId: wRsJZtadYvn4mBZmm
                      actId: asADASadYvn4mBZmm
                      actName: my-actor
                      name: my-task
                      username: janedoe
                      actUsername: janedoe
                      createdAt: '2018-10-26T07:23:14.855Z'
                      modifiedAt: '2018-10-26T13:30:49.578Z'
                      stats:
                        totalRuns: 15
                    - id: aWE3asdas3m8vjDeM
                      userId: wRsJZtadYvn4mBZmm
                      actId: asADASadYvn4mBZmm
                      actName: my-actor
                      actUsername: janedoe
                      name: my-task-2
                      username: janedoe
                      createdAt: '2018-10-26T07:23:14.855Z'
                      modifiedAt: '2018-10-26T13:30:49.578Z'
                      stats:
                        totalRuns: 4
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-tasks/task-collection/get-list-of-tasks'
      x-js-parent: TaskCollectionClient
      x-js-name: list
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/TaskCollectionClient#list'
      x-py-parent: TaskCollectionClientAsync
      x-py-name: list
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/TaskCollectionClientAsync#list'
    post:
      tags:
        - Actor tasks/Task collection
      summary: Create task
      description: |
        Create a new task with settings specified by the object passed as JSON in
        the POST payload.

        The response is the full task object as returned by the
        [Get task](#/reference/tasks/task-object/get-task) endpoint.

        The request needs to specify the `Content-Type: application/json` HTTP header!

        When providing your API authentication token, we recommend using the
        request's `Authorization` header, rather than the URL. ([More
        info](#/introduction/authentication)).
      operationId: actorTasks_post
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - title: CreateTaskRequest
                  required:
                    - actId
                    - name
                  type: object
                  properties:
                    actId:
                      type: string
                      example: asADASadYvn4mBZmm
                    name:
                      type: string
                      example: my-task
                    options:
                      allOf:
                        - oneOf:
                            - nullable: true
                            - $ref: '#/paths/~1v2~1actor-tasks~1%7BactorTaskId%7D/put/requestBody/content/application~1json/schema/properties/options/allOf/0/oneOf/1'
                        - {}
                    input:
                      allOf:
                        - oneOf:
                            - nullable: true
                            - title: TaskInput
                              type: object
                              properties:
                                hello:
                                  type: string
                                  nullable: true
                                  example: world
                        - {}
                - example:
                    actId: asADASadYvn4mBZmm
                    name: my-task
                    options:
                      build: latest
                      timeoutSecs: 300
                      memoryMbytes: 128
                    input:
                      hello: world
            example:
              actId: asADASadYvn4mBZmm
              name: my-task
              options:
                build: latest
                timeoutSecs: 300
                memoryMbytes: 128
        required: true
      responses:
        '201':
          description: ''
          headers:
            Location:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 'https://api.apify.com/v2/actor-tasks/zdc3Pyhyz3m8vjDeM'
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    title: Task
                    required:
                      - id
                      - userId
                      - actId
                      - name
                      - createdAt
                      - modifiedAt
                    type: object
                    properties:
                      id:
                        type: string
                        example: zdc3Pyhyz3m8vjDeM
                      userId:
                        type: string
                        example: wRsJZtadYvn4mBZmm
                      actId:
                        type: string
                        example: asADASadYvn4mBZmm
                      name:
                        type: string
                        example: my-task
                      username:
                        type: string
                        nullable: true
                        example: janedoe
                      createdAt:
                        type: string
                        example: '2018-10-26T07:23:14.855Z'
                      modifiedAt:
                        type: string
                        example: '2018-10-26T13:30:49.578Z'
                      removedAt:
                        type: string
                        nullable: true
                      stats:
                        allOf:
                          - oneOf:
                              - nullable: true
                              - $ref: '#/paths/~1v2~1actor-tasks~1%7BactorTaskId%7D/put/requestBody/content/application~1json/schema/properties/stats/allOf/0/oneOf/1'
                          - {}
                      options:
                        allOf:
                          - oneOf:
                              - nullable: true
                              - $ref: '#/paths/~1v2~1actor-tasks~1%7BactorTaskId%7D/put/requestBody/content/application~1json/schema/properties/options/allOf/0/oneOf/1'
                          - {}
                      input:
                        allOf:
                          - oneOf:
                              - nullable: true
                              - $ref: '#/paths/~1v2~1actor-tasks/post/requestBody/content/application~1json/schema/allOf/0/properties/input/allOf/0/oneOf/1'
                          - {}
              example:
                data:
                  id: zdc3Pyhyz3m8vjDeM
                  userId: wRsJZtadYvn4mBZmm
                  actId: asADASadYvn4mBZmm
                  name: my-task
                  username: janedoe
                  createdAt: '2018-10-26T07:23:14.855Z'
                  modifiedAt: '2018-10-26T13:30:49.578Z'
                  removedAt: null
                  stats:
                    totalRuns: 15
                  options:
                    build: latest
                    timeoutSecs: 300
                    memoryMbytes: 128
                  input:
                    hello: world
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-tasks/task-collection/create-task'
      x-js-parent: TaskCollectionClient
      x-js-name: create
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/TaskCollectionClient#create'
      x-py-parent: TaskCollectionClientAsync
      x-py-name: create
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/TaskCollectionClientAsync#create'
  '/v2/actor-tasks/{actorTaskId}':
    get:
      tags:
        - Actor tasks/Task object
      summary: Get task
      description: Get an object that contains all the details about a task.
      operationId: actorTask_get
      parameters:
        - name: actorTaskId
          in: path
          description: Task ID or a tilde-separated owner's username and task's name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-task
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/paths/~1v2~1actor-tasks/post/responses/201/content/application~1json/schema/properties/data'
              example:
                data:
                  id: zdc3Pyhyz3m8vjDeM
                  userId: wRsJZtadYvn4mBZmm
                  actId: asADASadYvn4mBZmm
                  name: my-task
                  username: janedoe
                  createdAt: '2018-10-26T07:23:14.855Z'
                  modifiedAt: '2018-10-26T13:30:49.578Z'
                  removedAt: null
                  stats:
                    totalRuns: 15
                  options:
                    build: latest
                    timeoutSecs: 300
                    memoryMbytes: 128
                  input:
                    hello: world
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-tasks/task-object/get-task'
      x-js-parent: TaskClient
      x-js-name: get
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/TaskClient#get'
      x-py-parent: TaskClientAsync
      x-py-name: get
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/TaskClientAsync#get'
    put:
      tags:
        - Actor tasks/Task object
      summary: Update task
      description: |
        Update settings of a task using values specified by an object passed as JSON
        in the POST payload.

        If the object does not define a specific property, its value is not updated.

        The response is the full task object as returned by the
        [Get task](#/reference/tasks/task-object/get-task) endpoint.

        The request needs to specify the `Content-Type: application/json` HTTP
        header!

        When providing your API authentication token, we recommend using the
        request's `Authorization` header, rather than the URL. ([More
        info](#/introduction/authentication)).
      operationId: actorTask_put
      parameters:
        - name: actorTaskId
          in: path
          description: Task ID or a tilde-separated owner's username and task's name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-task
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              title: UpdateTaskRequest
              required:
                - id
                - userId
                - actId
                - name
                - createdAt
                - modifiedAt
              type: object
              properties:
                id:
                  type: string
                  example: ZxLNxrRaZrSjuhT9y
                userId:
                  type: string
                  example: BPWZBd7Z9c746JAnF
                actId:
                  type: string
                  example: asADASadYvn4mBZmm
                name:
                  type: string
                  example: my-task
                username:
                  type: string
                  nullable: true
                  example: janedoe
                createdAt:
                  type: string
                  example: '2018-10-26T07:23:14.855Z'
                modifiedAt:
                  type: string
                  example: '2018-10-26T13:30:49.578Z'
                removedAt:
                  type: string
                  nullable: true
                stats:
                  allOf:
                    - oneOf:
                        - nullable: true
                        - title: TaskStats
                          required:
                            - totalRuns
                          type: object
                          properties:
                            totalRuns:
                              type: number
                              example: 15
                    - {}
                options:
                  allOf:
                    - oneOf:
                        - nullable: true
                        - title: TaskOptions
                          type: object
                          properties:
                            build:
                              type: string
                              nullable: true
                              example: latest
                            timeoutSecs:
                              type: number
                              nullable: true
                              example: 300
                            memoryMbytes:
                              type: number
                              nullable: true
                              example: 128
                    - {}
                input:
                  allOf:
                    - oneOf:
                        - nullable: true
                        - $ref: '#/paths/~1v2~1actor-tasks/post/responses/201/content/application~1json/schema/properties/data'
                    - {}
            example:
              id: ZxLNxrRaZrSjuhT9y
              userId: BPWZBd7Z9c746JAnF
              actId: asADASadYvn4mBZmm
              name: my-task
              username: janedoe
              createdAt: '2018-10-26T07:23:14.855Z'
              modifiedAt: '2018-10-26T13:30:49.578Z'
              removedAt: null
              stats:
                totalRuns: 15
              options:
                build: latest
                timeoutSecs: 300
                memoryMbytes: 128
              input:
                hello: world
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/paths/~1v2~1actor-tasks/post/responses/201/content/application~1json/schema/properties/data'
              example:
                data:
                  id: zdc3Pyhyz3m8vjDeM
                  userId: wRsJZtadYvn4mBZmm
                  actId: asADASadYvn4mBZmm
                  name: my-task
                  username: janedoe
                  createdAt: '2018-10-26T07:23:14.855Z'
                  modifiedAt: '2018-10-26T13:30:49.578Z'
                  removedAt: null
                  stats:
                    totalRuns: 15
                  options:
                    build: latest
                    timeoutSecs: 300
                    memoryMbytes: 128
                  input:
                    hello: world
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-tasks/task-object/update-task'
      x-js-parent: TaskClient
      x-js-name: update
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/TaskClient#update'
      x-py-parent: TaskClientAsync
      x-py-name: update
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/TaskClientAsync#update'
    delete:
      tags:
        - Actor tasks/Task object
      summary: Delete task
      description: Delete the task specified through the `actorTaskId` parameter.
      operationId: actorTask_delete
      parameters:
        - name: actorTaskId
          in: path
          description: Task ID or a tilde-separated owner's username and task's name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-task
      responses:
        '204':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
              example: {}
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-tasks/task-object/delete-task'
      x-js-parent: TaskClient
      x-js-name: delete
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/TaskClient#delete'
  '/v2/actor-tasks/{actorTaskId}/input':
    get:
      tags:
        - Actor tasks/Task input object
      summary: Get task input
      description: Returns the input of a given task.
      operationId: actorTask_input_get
      parameters:
        - name: actorTaskId
          in: path
          description: Task ID or a tilde-separated owner's username and task's name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-task
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
              example:
                myField1: some-value
                myField2: another-value
                myField3: 1
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-tasks/task-input-object/get-task-input'
      x-js-parent: TaskClient
      x-js-name: getInput
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/TaskClient#getInput'
      x-py-parent: TaskClientAsync
      x-py-name: get_input
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/TaskClientAsync#get_input'
    put:
      tags:
        - Actor tasks/Task input object
      summary: Update task input
      description: |
        Updates the input of a task using values specified by an object passed as
        JSON in the PUT payload.

        If the object does not define a specific property, its value is not updated.

        The response is the full task input as returned by the
        [Get task input](#/reference/tasks/task-input-object/get-task-input) endpoint.


        The request needs to specify the `Content-Type: application/json` HTTP
        header!

        When providing your API authentication token, we recommend using the
        request's `Authorization` header, rather than the URL. ([More
        info](#/introduction/authentication)).
      operationId: actorTask_input_put
      parameters:
        - name: actorTaskId
          in: path
          description: Task ID or a tilde-separated owner's username and task's name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-task
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
            example:
              myField2: updated-value
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
              example:
                myField1: some-value
                myField2: updated-value
                myField3: 1
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-tasks/task-input-object/update-task-input'
      x-js-parent: TaskClient
      x-js-name: updateInput
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/TaskClient#updateInput'
      x-py-parent: TaskClientAsync
      x-py-name: update_input
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/TaskClientAsync#update_input'
  '/v2/actor-tasks/{actorTaskId}/webhooks':
    get:
      tags:
        - Actor tasks/Webhook collection
      summary: Get list of webhooks
      description: |
        Gets the list of webhooks of a specific actor task. The response is a JSON
        with the list of objects, where each object contains basic information about a single webhook.

        The endpoint supports pagination using the `limit` and `offset` parameters
        and it will not return more than 1000 records.

        By default, the records are sorted by the `createdAt` field in ascending
        order, to sort the records in descending order, use the `desc=1` parameter.
      operationId: actorTask_webhooks_get
      parameters:
        - name: actorTaskId
          in: path
          description: Task ID or a tilde-separated owner's username and task's name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-task
        - name: offset
          in: query
          description: |
            Number of array elements that should be skipped at the start. The
            default value is `0`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 10
        - name: limit
          in: query
          description: |
            Maximum number of array elements to return. The default value as well as
            the maximum is `1000`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 99
        - name: desc
          in: query
          description: |
            If `true` or `1` then the objects are sorted by the `createdAt` field in
            descending order. By default, they are sorted in ascending order.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    allOf:
                      - $ref: '#/paths/~1v2~1actor-tasks/get/responses/200/content/application~1json/schema/properties/data/allOf/0'
                      - type: object
                        required:
                          - items
                        properties:
                          items:
                            type: array
                            items:
                              title: Webhook
                              required:
                                - id
                                - createdAt
                                - modifiedAt
                                - userId
                                - eventTypes
                                - condition
                                - ignoreSslErrors
                                - requestUrl
                              type: object
                              properties:
                                id:
                                  type: string
                                  example: YiKoxjkaS9gjGTqhF
                                createdAt:
                                  type: string
                                  example: '2019-12-12T07:34:14.202Z'
                                modifiedAt:
                                  type: string
                                  example: '2019-12-13T08:36:13.202Z'
                                userId:
                                  type: string
                                  example: wRsJZtadYvn4mBZmm
                                isAdHoc:
                                  type: boolean
                                  nullable: true
                                  example: false
                                shouldInterpolateStrings:
                                  type: boolean
                                  nullable: true
                                  example: false
                                eventTypes:
                                  type: array
                                  items:
                                    type: string
                                  example:
                                    - ACTOR.RUN.SUCCEEDED
                                condition:
                                  $ref: '#/paths/~1v2~1webhooks/post/requestBody/content/application~1json/schema/properties/condition'
                                ignoreSslErrors:
                                  type: boolean
                                  example: false
                                doNotRetry:
                                  type: boolean
                                  nullable: true
                                  example: false
                                requestUrl:
                                  type: string
                                  example: 'http://example.com/'
                                payloadTemplate:
                                  type: string
                                  nullable: true
                                  example: '{\n \"userId\": {{userId}}...'
                                headersTemplate:
                                  type: string
                                  nullable: true
                                  example: '{\n \"Authorization\": Bearer...'
                                description:
                                  type: string
                                  nullable: true
                                  example: this is webhook description
                                lastDispatch:
                                  nullable: true
                                  allOf:
                                    - title: ExampleWebhookDispatch
                                      required:
                                        - status
                                        - finishedAt
                                      type: object
                                      properties:
                                        status:
                                          type: string
                                          example: SUCCEEDED
                                        finishedAt:
                                          type: string
                                          example: '2019-12-13T08:36:13.202Z'
                                stats:
                                  nullable: true
                                  allOf:
                                    - title: WebhookStats
                                      required:
                                        - totalDispatches
                                      type: object
                                      properties:
                                        totalDispatches:
                                          type: number
                                          example: 1
              example:
                data:
                  total: 2
                  offset: 0
                  limit: 1000
                  desc: false
                  count: 2
                  items:
                    - id: YiKoxjkaS9gjGTqhF
                      createdAt: '2019-12-12T07:34:14.202Z'
                      modifiedAt: '2019-12-13T08:36:13.202Z'
                      userId: wRsJZtadYvn4mBZmm
                      isAdHoc: false
                      shouldInterpolateStrings: false
                      eventTypes:
                        - ACTOR.RUN.SUCCEEDED
                      condition:
                        actorId: hksJZtadYvn4mBuin
                        actorTaskId: asdLZtadYvn4mBZmm
                        actorRunId: hgdKZtadYvn4mBpoi
                      ignoreSslErrors: false
                      doNotRetry: false
                      requestUrl: 'http://example.com/'
                      payloadTemplate: '{\n \"userId\": {{userId}}...'
                      headersTemplate: '{\n \"Authorization\": Bearer...'
                      description: this is webhook description
                      lastDispatch:
                        status: SUCCEEDED
                        finishedAt: '2019-12-13T08:36:13.202Z'
                      stats:
                        totalDispatches: 1
                    - id: YiKoxjkaS9gjGTqhF
                      createdAt: '2019-12-12T07:34:14.202Z'
                      modifiedAt: '2019-12-13T08:36:13.202Z'
                      userId: wRsJZtadYvn4mBZmm
                      isAdHoc: false
                      shouldInterpolateStrings: false
                      eventTypes:
                        - ACTOR.RUN.SUCCEEDED
                      condition:
                        actorId: hksJZtadYvn4mBuin
                        actorTaskId: asdLZtadYvn4mBZmm
                        actorRunId: hgdKZtadYvn4mBpoi
                      ignoreSslErrors: false
                      doNotRetry: false
                      requestUrl: 'http://example.com/'
                      payloadTemplate: '{\n \"userId\": {{userId}}...'
                      headersTemplate: '{\n \"Authorization\": Bearer...'
                      description: this is webhook description
                      lastDispatch:
                        status: SUCCEEDED
                        finishedAt: '2019-12-13T08:36:13.202Z'
                      stats:
                        totalDispatches: 1
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-tasks/webhook-collection/get-list-of-webhooks'
  '/v2/actor-tasks/{actorTaskId}/runs':
    get:
      tags:
        - Actor tasks/Run collection
      summary: Get list of task runs
      description: |
        Get a list of runs of a specific task. The response is a list of objects,
        where each object contains essential information about a single task run.

        The endpoint supports pagination using the `limit` and `offset` parameters,
        and it does not return more than a 1000 array elements.

        By default, the records are sorted by the `startedAt` field in ascending
        order; therefore you can use pagination to incrementally fetch all records while
        new ones are still being created. To sort the records in descending order, use
        the `desc=1` parameter. You can also filter runs by status ([available
        statuses](https://docs.apify.com/platform/actors/running/runs-and-builds#lifecycle)).
      operationId: actorTask_runs_get
      parameters:
        - name: actorTaskId
          in: path
          description: Task ID or a tilde-separated owner's username and task's name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-task
        - name: offset
          in: query
          description: |
            Number of array elements that should be skipped at the start. The default value is `0`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 10
        - name: limit
          in: query
          description: |
            Maximum number of array elements to return. The default value as well as the maximum is `1000`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 99
        - name: desc
          in: query
          description: |
            If `true` or `1` then the objects are sorted by the `startedAt` field in
            descending order. By default, they are sorted in ascending order.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: status
          in: query
          description: |
            Return only runs with the provided status ([available
            statuses](https://docs.apify.com/platform/actors/running/runs-and-builds#lifecycle))
          style: form
          explode: true
          schema:
            type: string
            example: SUCCEEDED
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    allOf:
                      - $ref: '#/paths/~1v2~1actor-tasks/get/responses/200/content/application~1json/schema/properties/data/allOf/0'
                      - type: object
                        required:
                          - items
                        properties:
                          items:
                            type: array
                            items:
                              title: RunShort
                              required:
                                - id
                                - actId
                                - status
                                - startedAt
                                - finishedAt
                                - buildId
                                - buildNumber
                                - meta
                                - usageTotalUsd
                                - defaultKeyValueStoreId
                                - defaultDatasetId
                                - defaultRequestQueueId
                              type: object
                              properties:
                                id:
                                  type: string
                                  example: HG7ML7M8z78YcAPEB
                                actId:
                                  type: string
                                  example: HDSasDasz78YcAPEB
                                actorTaskId:
                                  type: string
                                  nullable: true
                                  example: KJHSKHausidyaJKHs
                                status:
                                  type: string
                                  example: SUCCEEDED
                                startedAt:
                                  type: string
                                  example: '2019-11-30T07:34:24.202Z'
                                finishedAt:
                                  type: string
                                  example: '2019-12-12T09:30:12.202Z'
                                buildId:
                                  type: string
                                  example: HG7ML7M8z78YcAPEB
                                buildNumber:
                                  type: string
                                  example: 0.0.2
                                meta:
                                  allOf:
                                    - $ref: '#/paths/~1v2~1actor-tasks~1%7BactorTaskId%7D~1runs/post/responses/201/content/application~1json/schema/properties/data/properties/meta'
                                    - {}
                                usageTotalUsd:
                                  type: number
                                  example: 0.2
                                defaultKeyValueStoreId:
                                  type: string
                                  example: sfAjeR4QmeJCQzTfe
                                defaultDatasetId:
                                  type: string
                                  example: 3ZojQDdFTsyE7Moy4
                                defaultRequestQueueId:
                                  type: string
                                  example: so93g2shcDzK3pA85
              example:
                data:
                  total: 2
                  offset: 0
                  limit: 1000
                  desc: false
                  count: 2
                  items:
                    - id: HG7ML7M8z78YcAPEB
                      actId: HDSasDasz78YcAPEB
                      actorTaskId: KJHSKHausidyaJKHs
                      status: SUCCEEDED
                      startedAt: '2019-11-30T07:34:24.202Z'
                      finishedAt: '2019-12-12T09:30:12.202Z'
                      buildId: HG7ML7M8z78YcAPEB
                      buildNumber: 0.0.2
                      meta:
                        origin: WEB
                      usageTotalUsd: 0.2
                      defaultKeyValueStoreId: sfAjeR4QmeJCQzTfe
                      defaultDatasetId: 3ZojQDdFTsyE7Moy4
                      defaultRequestQueueId: so93g2shcDzK3pA85
                    - id: HG7ML7M8z78YcAPEB
                      actId: HDSasDasz78YcAPEB
                      actorTaskId: KJHSKHausidyaJKHs
                      status: FAILED
                      startedAt: '2019-12-12T07:34:14.202Z'
                      finishedAt: '2019-12-13T08:36:13.202Z'
                      buildId: u78dML7M8z78YcAPEB
                      buildNumber: 0.2.2
                      meta:
                        origin: DEVELOPMENT
                      usageTotalUsd: 0.6
                      defaultKeyValueStoreId: sffsouqlseJCQzTfe
                      defaultDatasetId: CFGggdjQDsyE7Moyw
                      defaultRequestQueueId: soowucklrmDzKpA8x
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-tasks/run-collection/get-list-of-task-runs'
    post:
      tags:
        - Actor tasks/Run collection
      summary: Run task
      description: |
        Runs an actor task and immediately returns without waiting for the run to
        finish.

        Optionally, you can override the actor input configuration by passing a JSON
        object as the POST payload and setting the `Content-Type: application/json` HTTP header.

        Note that if the object in the POST payload does not define a particular
        input property, the actor run uses the default value defined by the task (or actor's input
        schema if not defined by the task).

        The response is the actor Run object as returned by the [Get
        run](#/reference/actor-runs/run-object-and-its-storages/get-run) endpoint.

        If you want to wait for the run to finish and receive the actual output of
        the actor run as the response, use one of the [Run task
        synchronously](#/reference/actor-tasks/run-task-synchronously) API endpoints
        instead.

        To fetch the actor run results that are typically stored in the default
        dataset, you'll need to pass the ID received in the `defaultDatasetId` field
        received in the response JSON to the
        [Get items](#/reference/datasets/item-collection/get-items) API endpoint.
      operationId: actorTask_runs_post
      parameters:
        - name: actorTaskId
          in: path
          description: Task ID or a tilde-separated owner's username and task's name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-task
        - name: timeout
          in: query
          description: |
            Optional timeout for the run, in seconds. By default, the run uses a
            timeout specified in the task settings.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 60
        - name: memory
          in: query
          description: |
            Memory limit for the run, in megabytes. The amount of memory can be set
            to a power of 2 with a minimum of 128. By default, the run uses a memory
            limit specified in the task settings.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 256
        - name: maxItems
          in: query
          description: |
            The maximum number of items that the actor run should return. This is
            useful for pay-per-result actors, as it allows you to limit the number
            of results that will be charged to your subscription. You can access the
            maximum number of items in your actor by using the
            `ACTOR_MAX_PAID_DATASET_ITEMS` environment variable.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 1000
        - name: build
          in: query
          description: |
            Specifies the actor build to run. It can be either a build tag or build
            number. By default, the run uses the build specified in the task
            settings (typically `latest`).
          style: form
          explode: true
          schema:
            type: string
            example: 0.1.234
        - name: waitForFinish
          in: query
          description: |
            The maximum number of seconds the server waits for the run to finish. By
            default, it is `0`, the maximum value is `60`. <!--
            MAX_ACTOR_JOB_ASYNC_WAIT_SECS -->

            If the build finishes in time then the returned run object will have a
            terminal status (e.g. `SUCCEEDED`),

            otherwise it will have a transitional status (e.g. `RUNNING`).
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 60
        - name: webhooks
          in: query
          description: |
            Specifies optional webhooks associated with the actor run, which can be
            used to receive a notification

            e.g. when the actor finished or failed. The value is a Base64-encoded
            JSON array of objects defining the webhooks.

            **Note**: if you already have a webhook set up for the actor or task,
            you do not have to add it again here.

            For more information, see [Webhooks documentation](https://docs.apify.com/platform/integrations/webhooks).
          style: form
          explode: true
          schema:
            type: string
            example: dGhpcyBpcyBqdXN0IGV4YW1wbGUK...
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
            example:
              foo: bar
        required: true
      responses:
        '201':
          description: ''
          headers:
            Location:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 'https://api.apify.com/v2/actor-tasks/zdc3Pyhyz3m8vjDeM/runs/HG7ML7M8z78YcAPEB'
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    title: Run
                    required:
                      - id
                      - actId
                      - userId
                      - startedAt
                      - finishedAt
                      - status
                      - meta
                      - stats
                      - options
                      - buildId
                      - defaultKeyValueStoreId
                      - defaultDatasetId
                      - defaultRequestQueueId
                      - buildNumber
                      - containerUrl
                    type: object
                    properties:
                      id:
                        type: string
                        example: HG7ML7M8z78YcAPEB
                      actId:
                        type: string
                        example: HDSasDasz78YcAPEB
                      userId:
                        type: string
                        example: 7sT5jcggjjA9fNcxF
                      actorTaskId:
                        type: string
                        nullable: true
                        example: KJHSKHausidyaJKHs
                      startedAt:
                        type: string
                        example: '2019-11-30T07:34:24.202Z'
                      finishedAt:
                        type: string
                        example: '2019-12-12T09:30:12.202Z'
                      status:
                        type: string
                        example: RUNNING
                      statusMessage:
                        type: string
                        nullable: true
                        example: Actor is running
                      isStatusMessageTerminal:
                        type: boolean
                        nullable: true
                        example: false
                      meta:
                        title: RunMeta
                        required:
                          - origin
                        type: object
                        properties:
                          origin:
                            type: string
                            enum:
                              - DEVELOPMENT
                              - WEB
                              - API
                              - SCHEDULER
                              - TEST
                              - WEBHOOK
                              - ACTOR
                              - CLI
                              - STANDBY
                      stats:
                        title: RunStats
                        required:
                          - inputBodyLen
                          - restartCount
                          - resurrectCount
                          - computeUnits
                        type: object
                        properties:
                          inputBodyLen:
                            type: number
                            example: 240
                          restartCount:
                            type: number
                            example: 0
                          resurrectCount:
                            type: number
                            example: 2
                          memAvgBytes:
                            type: number
                            example: 267874071.9
                          memMaxBytes:
                            type: number
                            example: 404713472
                          memCurrentBytes:
                            type: number
                            example: 0
                          cpuAvgUsage:
                            type: number
                            example: 33.7532101107538
                          cpuMaxUsage:
                            type: number
                            example: 169.650735534941
                          cpuCurrentUsage:
                            type: number
                            example: 0
                          netRxBytes:
                            type: number
                            example: 103508042
                          netTxBytes:
                            type: number
                            example: 4854600
                          durationMillis:
                            type: number
                            example: 248472
                          runTimeSecs:
                            type: number
                            example: 248.472
                          metamorph:
                            type: number
                            example: 0
                          computeUnits:
                            type: number
                            example: 0.13804
                      options:
                        title: RunOptions
                        required:
                          - build
                          - timeoutSecs
                          - memoryMbytes
                          - diskMbytes
                        type: object
                        properties:
                          build:
                            type: string
                            example: latest
                          timeoutSecs:
                            type: number
                            example: 300
                          memoryMbytes:
                            type: number
                            example: 1024
                          diskMbytes:
                            type: number
                            example: 2048
                      buildId:
                        type: string
                        example: 7sT5jcggjjA9fNcxF
                      exitCode:
                        type: number
                        nullable: true
                        example: 0
                      defaultKeyValueStoreId:
                        type: string
                        example: eJNzqsbPiopwJcgGQ
                      defaultDatasetId:
                        type: string
                        example: wmKPijuyDnPZAPRMk
                      defaultRequestQueueId:
                        type: string
                        example: FL35cSF7jrxr3BY39
                      buildNumber:
                        type: string
                        example: 0.0.36
                      containerUrl:
                        type: string
                        example: 'https://g8kd8kbc5ge8.runs.apify.net'
                      isContainerServerReady:
                        type: boolean
                        nullable: true
                        example: true
                      gitBranchName:
                        type: string
                        nullable: true
                        example: master
                      usage:
                        allOf:
                          - oneOf:
                              - nullable: true
                              - title: RunUsage
                                type: object
                                properties:
                                  ACTOR_COMPUTE_UNITS:
                                    type: number
                                    nullable: true
                                    example: 3
                                  DATASET_READS:
                                    type: number
                                    nullable: true
                                    example: 4
                                  DATASET_WRITES:
                                    type: number
                                    nullable: true
                                    example: 4
                                  KEY_VALUE_STORE_READS:
                                    type: number
                                    nullable: true
                                    example: 5
                                  KEY_VALUE_STORE_WRITES:
                                    type: number
                                    nullable: true
                                    example: 3
                                  KEY_VALUE_STORE_LISTS:
                                    type: number
                                    nullable: true
                                    example: 5
                                  REQUEST_QUEUE_READS:
                                    type: number
                                    nullable: true
                                    example: 2
                                  REQUEST_QUEUE_WRITES:
                                    type: number
                                    nullable: true
                                    example: 1
                                  DATA_TRANSFER_INTERNAL_GBYTES:
                                    type: number
                                    nullable: true
                                    example: 1
                                  DATA_TRANSFER_EXTERNAL_GBYTES?:
                                    type: number
                                    nullable: true
                                    example: 3
                                  PROXY_RESIDENTIAL_TRANSFER_GBYTES:
                                    type: number
                                    nullable: true
                                    example: 34
                                  PROXY_SERPS:
                                    type: number
                                    nullable: true
                                    example: 3
                          - {}
                      usageTotalUsd:
                        type: number
                        nullable: true
                        example: 0.2654
                      usageUsd:
                        allOf:
                          - oneOf:
                              - nullable: true
                              - $ref: '#/paths/~1v2~1actor-tasks~1%7BactorTaskId%7D~1runs/post/responses/201/content/application~1json/schema/properties/data/properties/usage/allOf/0/oneOf/1'
                          - {}
              example:
                data:
                  id: HG7ML7M8z78YcAPEB
                  actId: HDSasDasz78YcAPEB
                  userId: BPWZBd9V9c746JAnF
                  actorTaskId: KJHSKHausidyaJKHs
                  startedAt: '2019-11-30T07:34:24.202Z'
                  finishedAt: '2019-12-12T09:30:12.202Z'
                  status: SUCCEEDED
                  statusMessage: Actor has finished
                  isStatusMessageTerminal: true
                  meta:
                    origin: WEB
                    clientIp: 172.234.12.34
                    userAgent: Mozilla/5.0 (iPad)
                    scheduleId: dWazFsPpxMigMSqHL
                    scheduledAt: '2019-06-10T11:40:00.000Z'
                  stats:
                    inputBodyLen: 240
                    restartCount: 0
                    resurrectCount: 2
                    memAvgBytes: 35914228.4
                    memMaxBytes: 38244352
                    memCurrentBytes: 0
                    cpuAvgUsage: 0.00955965
                    cpuMaxUsage: 3.15469
                    cpuCurrentUsage: 0
                    netRxBytes: 2652
                    netTxBytes: 1338
                    durationMillis: 26239
                    runTimeSecs: 26.239
                    metamorph: 0
                    computeUnits: 0.0072886
                  options:
                    build: latest
                    timeoutSecs: 300
                    memoryMbytes: 1024
                    diskMbytes: 2048
                  buildId: 7sT5jcggjjA9fNcxF
                  exitCode: 0
                  defaultKeyValueStoreId: eJNzqsbPiopwJcgGQ
                  defaultDatasetId: wmKPijuyDnPZAPRMk
                  defaultRequestQueueId: FL35cSF7jrxr3BY39
                  buildNumber: 0.2.2
                  containerUrl: 'https://nwfcc4btrgqt.runs.apify.com'
                  isContainerServerReady: false
                  gitBranchName: master
                  usage:
                    ACTOR_COMPUTE_UNITS: 3
                    DATASET_READS: 4
                    DATASET_WRITES: 4
                    KEY_VALUE_STORE_READS: 5
                    KEY_VALUE_STORE_WRITES: 3
                    KEY_VALUE_STORE_LISTS: 5
                    REQUEST_QUEUE_READS: 2
                    REQUEST_QUEUE_WRITES: 1
                    DATA_TRANSFER_INTERNAL_GBYTES: 1
                    DATA_TRANSFER_EXTERNAL_GBYTES?: 3
                    PROXY_RESIDENTIAL_TRANSFER_GBYTES: 34
                    PROXY_SERPS: 3
                  usageTotalUsd: 0.2654
                  usageUsd:
                    ACTOR_COMPUTE_UNITS: 0.072
                    DATASET_READS: 0.0004
                    DATASET_WRITES: 0.0002
                    KEY_VALUE_STORE_READS: 0.0006
                    KEY_VALUE_STORE_WRITES: 0.002
                    KEY_VALUE_STORE_LISTS: 0.004
                    REQUEST_QUEUE_READS: 0.005
                    REQUEST_QUEUE_WRITES: 0.02
                    DATA_TRANSFER_INTERNAL_GBYTES: 0.0004
                    DATA_TRANSFER_EXTERNAL_GBYTES?: 0.0002
                    PROXY_RESIDENTIAL_TRANSFER_GBYTES: 0.16
                    PROXY_SERPS: 0.0006
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-tasks/run-collection/run-task'
      x-js-parent: TaskClient
      x-js-name: start
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/TaskClient#start'
      x-py-parent: TaskClientAsync
      x-py-name: call
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/TaskClientAsync#call'
  '/v2/actor-tasks/{actorTaskId}/run-sync':
    post:
      tags:
        - Actor tasks/Run task synchronously
      summary: Run task synchronously (POST)
      description: |
        Runs an actor task and synchronously returns its output.

        The run must finish in 300<!-- MAX_ACTOR_JOB_SYNC_WAIT_SECS --> seconds
        otherwise the HTTP request fails with a timeout error (this won't abort
        the run itself).

        Optionally, you can override the actor input configuration by passing a JSON
        object as the POST payload and setting the `Content-Type: application/json` HTTP header.

        Note that if the object in the POST payload does not define a particular
        input property, the actor run uses the default value defined by the task (or actor's input
        schema if not defined by the task).

        Beware that it might be impossible to maintain an idle HTTP connection for
        an extended period, due to client timeout or network conditions. Make sure your HTTP client is
        configured to have a long enough connection timeout.

        If the connection breaks, you will not receive any information about the run
        and its status.

        Input fields from actor task configuration can be overloaded with values
        passed as the POST payload.

        Just make sure to specify `Content-Type` header to be `application/json` and
        input to be an object.

        To run the task asynchronously, use the [Run
        task](#/reference/actor-tasks/run-collection/run-task) API endpoint instead.
      operationId: actorTask_runSync_post
      parameters:
        - name: actorTaskId
          in: path
          description: Task ID or a tilde-separated owner's username and task's name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-task
        - name: timeout
          in: query
          description: |
            Optional timeout for the run, in seconds. By default, the run uses a
            timeout specified in the task settings.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 60
        - name: memory
          in: query
          description: |
            Memory limit for the run, in megabytes. The amount of memory can be set
            to a power of 2 with a minimum of 128. By default, the run uses a memory
            limit specified in the task settings.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 256
        - name: maxItems
          in: query
          description: |
            The maximum number of items that the task run should return. This is
            useful for pay-per-result tasks, as it allows you to limit the number of
            results that will be charged to your subscription. You can access the
            maximum number of items in your actor by using the
            `ACTOR_MAX_PAID_DATASET_ITEMS` environment variable.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 1000
        - name: build
          in: query
          description: |
            Specifies the actor build to run. It can be either a build tag or build
            number. By default, the run uses the build specified in the task
            settings (typically `latest`).
          style: form
          explode: true
          schema:
            type: string
            example: 0.1.234
        - name: outputRecordKey
          in: query
          description: |-
            Key of the record from run's default key-value store to be returned
            in the response. By default, it is `OUTPUT`.
          style: form
          explode: true
          schema:
            type: string
            example: OUTPUT
        - name: webhooks
          in: query
          description: |
            Specifies optional webhooks associated with the actor run, which can be
            used to receive a notification

            e.g. when the actor finished or failed. The value is a Base64-encoded
            JSON array of objects defining the webhooks. For more information, see

            [Webhooks
            documentation](https://docs.apify.com/platform/integrations/webhooks).
          style: form
          explode: true
          schema:
            type: string
            example: dGhpcyBpcyBqdXN0IGV4YW1wbGUK...
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
            example:
              foo: bar
        required: true
      responses:
        '201':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
              example:
                bar: foo
        '400':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1run-sync/get/responses/400/content/application~1json/schema'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-tasks/run-task-synchronously/run-task-synchronously-post'
    get:
      tags:
        - Actor tasks/Run task synchronously
      summary: Run task synchronously (GET)
      description: |
        Run a specific task and return its output.

        The run must finish in 300<!-- MAX_ACTOR_JOB_SYNC_WAIT_SECS --> seconds
        otherwise the HTTP request fails with a timeout error (this won't abort
        the run itself).

        Beware that it might be impossible to maintain an idle HTTP connection for
        an extended period, due to client timeout or network conditions. Make sure your HTTP client is
        configured to have a long enough connection timeout.

        If the connection breaks, you will not receive any information about the run
        and its status.

        To run the Task asynchronously, use the
        [Run task asynchronously](#/reference/actor-tasks/run-collection/run-task)
        endpoint instead.
      operationId: actorTask_runSync_get
      parameters:
        - name: actorTaskId
          in: path
          description: Task ID or a tilde-separated owner's username and task's name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-task
        - name: timeout
          in: query
          description: |
            Optional timeout for the run, in seconds. By default, the run uses a
            timeout specified in the task settings.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 60
        - name: memory
          in: query
          description: |
            Memory limit for the run, in megabytes. The amount of memory can be set
            to a power of 2 with a minimum of 128. By default, the run uses a memory
            limit specified in the task settings.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 256
        - name: maxItems
          in: query
          description: |
            The maximum number of items that the task run should return. This is
            useful for pay-per-result tasks, as it allows you to limit the number of
            results that will be charged to your subscription. You can access the
            maximum number of items in your actor by using the
            `ACTOR_MAX_PAID_DATASET_ITEMS` environment variable.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 1000
        - name: build
          in: query
          description: |
            Specifies the actor build to run. It can be either a build tag or build
            number. By default, the run uses the build specified in the task
            settings (typically `latest`).
          style: form
          explode: true
          schema:
            type: string
            example: 0.1.234
        - name: outputRecordKey
          in: query
          description: |-
            Key of the record from run's default key-value store to be returned
            in the response. By default, it is `OUTPUT`.
          style: form
          explode: true
          schema:
            type: string
            example: OUTPUT
        - name: webhooks
          in: query
          description: |
            Specifies optional webhooks associated with the actor run, which can be
            used to receive a notification

            e.g. when the actor finished or failed. The value is a Base64-encoded
            JSON array of objects defining the webhooks. For more information, see

            [Webhooks
            documentation](https://docs.apify.com/platform/integrations/webhooks).
          style: form
          explode: true
          schema:
            type: string
            example: dGhpcyBpcyBqdXN0IGV4YW1wbGUK...
      responses:
        '201':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
              example:
                bar: foo
        '400':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1run-sync/get/responses/400/content/application~1json/schema'
        '408':
          description: 'Request Timeout: the HTTP request exceeded the 300 second limit'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1run-sync/get/responses/400/content/application~1json/schema'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-tasks/run-task-synchronously/run-task-synchronously-get'
  '/v2/actor-tasks/{actorTaskId}/run-sync-get-dataset-items':
    post:
      tags:
        - Actor tasks/Run task synchronously and get dataset items
      summary: Run task synchronously and get dataset items (POST)
      description: |
        Runs an actor task and synchronously returns its dataset items.

        The run must finish in 300<!-- MAX_ACTOR_JOB_SYNC_WAIT_SECS --> seconds
        otherwise the HTTP request fails with a timeout error (this won't abort
        the run itself).

        Optionally, you can override the actor input configuration by passing a JSON
        object as the POST payload and setting the `Content-Type: application/json` HTTP header.

        Note that if the object in the POST payload does not define a particular
        input property, the actor run uses the default value defined by the task (or the actor's
        input schema if not defined by the task).

        You can send all the same options in parameters as the [Get Dataset
        Items](#/reference/datasets/item-collection/get-items) API endpoint.

        Beware that it might be impossible to maintain an idle HTTP connection for
        an extended period, due to client timeout or network conditions. Make sure your HTTP client is
        configured to have a long enough connection timeout.

        If the connection breaks, you will not receive any information about the run
        and its status.

        Input fields from actor task configuration can be overloaded with values
        passed as the POST payload.

        Just make sure to specify the `Content-Type` header as `application/json`
        and that the input is an object.

        To run the task asynchronously, use the [Run
        task](#/reference/actor-tasks/run-collection/run-task) API endpoint instead.
      operationId: actorTask_runSyncGetDatasetItems_post
      parameters:
        - name: actorTaskId
          in: path
          description: Task ID or a tilde-separated owner's username and task's name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-task
        - name: timeout
          in: query
          description: |
            Optional timeout for the run, in seconds. By default, the run uses a
            timeout specified in the task settings.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 60
        - name: memory
          in: query
          description: |
            Memory limit for the run, in megabytes. The amount of memory can be set
            to a power of 2 with a minimum of 128. By default, the run uses a memory
            limit specified in the task settings.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 256
        - name: maxItems
          in: query
          description: |
            The maximum number of items that the task run should return. This is
            useful for pay-per-result tasks, as it allows you to limit the number of
            results that will be charged to your subscription. You can access the
            maximum number of items in your actor by using the
            `ACTOR_MAX_PAID_DATASET_ITEMS` environment variable.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 1000
        - name: build
          in: query
          description: |
            Specifies the actor build to run. It can be either a build tag or build
            number. By default, the run uses the build specified in the task
            settings (typically `latest`).
          style: form
          explode: true
          schema:
            type: string
            example: 0.1.234
        - name: webhooks
          in: query
          description: |
            Specifies optional webhooks associated with the actor run, which can be
            used to receive a notification

            e.g. when the actor finished or failed. The value is a Base64-encoded
            JSON array of objects defining the webhooks. For more information, see

            [Webhooks
            documentation](https://docs.apify.com/platform/integrations/webhooks).
          style: form
          explode: true
          schema:
            type: string
            example: dGhpcyBpcyBqdXN0IGV4YW1wbGUK...
        - name: format
          in: query
          description: |
            Format of the results, possible values are: `json`, `jsonl`, `csv`,
            `html`, `xlsx`, `xml` and `rss`. The default value is `json`.
          style: form
          explode: true
          schema:
            type: string
            example: json
        - name: clean
          in: query
          description: |
            If `true` or `1` then the API endpoint returns only non-empty items and
            skips hidden fields

            (i.e. fields starting with the # character).

            The `clean` parameter is just a shortcut for `skipHidden=true` and
            `skipEmpty=true` parameters.

            Note that since some objects might be skipped from the output, that the
            result might contain less items than the `limit` value.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: offset
          in: query
          description: |
            Number of items that should be skipped at the start. The default value
            is `0`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 0
        - name: limit
          in: query
          description: Maximum number of items to return. By default there is no limit.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 99
        - name: fields
          in: query
          description: |
            A comma-separated list of fields which should be picked from the items,

            only these fields will remain in the resulting record objects.

            Note that the fields in the outputted items are sorted the same way as
            they are specified in the `fields` query parameter.

            You can use this feature to effectively fix the output format.
          style: form
          explode: true
          schema:
            type: string
            example: 'myValue,myOtherValue'
        - name: omit
          in: query
          description: A comma-separated list of fields which should be omitted from the items.
          style: form
          explode: true
          schema:
            type: string
            example: 'myValue,myOtherValue'
        - name: unwind
          in: query
          description: |
            A comma-separated list of fields which should be unwound, in order which
            they should be processed. Each field should be either an array or an object.

            If the field is an array then every element of

            the array will become a separate record and merged with parent object.

            If the unwound field is an object then it is merged with the parent
            object

            If the unwound field is missing or its value is neither an array nor an
            object and therefore cannot be merged with a parent object then the item
            gets preserved as it is.

            Note that the unwound items ignore the `desc` parameter.
          style: form
          explode: true
          schema:
            type: string
            example: 'myValue,myOtherValue'
        - name: flatten
          in: query
          description: |
            A comma-separated list of fields which should transform nested objects
            into flat structures.

            For example, with `flatten="foo"` the object `{"foo":{"bar": "hello"}}`
            is turned into `{"foo.bar": "hello"}`.

            The original object with properties is replaced with the flattened
            object.
          style: form
          explode: true
          schema:
            type: string
            example: myValue
        - name: desc
          in: query
          description: |
            By default, results are returned in the same order as they were stored.
            To reverse the order, set this parameter to `true` or `1`.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: attachment
          in: query
          description: |
            If `true` or `1` then the response will define the `Content-Disposition:
            attachment` header, forcing a web browser to download the file rather
            than to display it. By default this header is not present.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: delimiter
          in: query
          description: |
            A delimiter character for CSV files, only used if `format=csv`. You
            might need to URL-encode the character (e.g. use `%09` for tab or `%3B`
            for semicolon). The default delimiter is a simple comma (`,`).
          style: form
          explode: true
          schema:
            type: string
            example: ;
        - name: bom
          in: query
          description: |
            All text responses are encoded in UTF-8 encoding. By default, the
            `format=csv` files are prefixed with

            the UTF-8 Byte Order Mark (BOM), while `json`, `jsonl`, `xml`, `html`
            and `rss` files are not.

            If you want to override this default behavior, specify `bom=1` query
            parameter to include the BOM or `bom=0` to skip it.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: xmlRoot
          in: query
          description: |
            Overrides default root element name of `xml` output. By default the root
            element is `items`.
          style: form
          explode: true
          schema:
            type: string
            example: items
        - name: xmlRow
          in: query
          description: |
            Overrides default element name that wraps each page or page function
            result object in `xml` output. By default the element name is `item`.
          style: form
          explode: true
          schema:
            type: string
            example: item
        - name: skipHeaderRow
          in: query
          description: If `true` or `1` then header row in the `csv` format is skipped.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: skipHidden
          in: query
          description: |-
            If `true` or `1` then hidden fields are skipped from the output,
            i.e. fields starting with the `#` character.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: skipEmpty
          in: query
          description: |
            If `true` or `1` then empty items are skipped from the output.

            Note that if used, the results might contain less items than the limit
            value.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: simplified
          in: query
          description: |
            If `true` or `1` then, the endpoint applies the
            `fields=url,pageFunctionResult,errorInfo`

            and `unwind=pageFunctionResult` query parameters. This feature is used
            to emulate simplified results provided by the

            legacy Apify Crawler product and it's not recommended to use it in new
            integrations.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: skipFailedPages
          in: query
          description: |
            If `true` or `1` then, the all the items with errorInfo property will be
            skipped from the output.

            This feature is here to emulate functionality of API version 1 used for
            the legacy Apify Crawler product and it's not recommended to use it in
            new integrations.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
            example:
              foo: bar
        required: true
      responses:
        '201':
          description: ''
          headers:
            X-Apify-Pagination-Offset:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '0'
            X-Apify-Pagination-Limit:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '100'
            X-Apify-Pagination-Count:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '100'
            X-Apify-Pagination-Total:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '10204'
          content:
            application/json:
              schema:
                type: object
        '400':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1run-sync/get/responses/400/content/application~1json/schema'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-tasks/run-task-synchronously-and-get-dataset-items/run-task-synchronously-and-get-dataset-items-post'
    get:
      tags:
        - Actor tasks/Run task synchronously and get dataset items
      summary: Run task synchronously and get dataset items (GET)
      description: |
        Run a specific task and return its dataset items.

        The run must finish in 300<!-- MAX_ACTOR_JOB_SYNC_WAIT_SECS --> seconds
        otherwise the HTTP request fails with a timeout error (this won't abort
        the run itself).

        You can send all the same options in parameters as the [Get Dataset
        Items](#/reference/datasets/item-collection/get-items) API endpoint.

        Beware that it might be impossible to maintain an idle HTTP connection for
        an extended period, due to client timeout or network conditions. Make sure your HTTP client is
        configured to have a long enough connection timeout.

        If the connection breaks, you will not receive any information about the run
        and its status.

        To run the Task asynchronously, use the [Run task
        asynchronously](#/reference/actor-tasks/run-collection/run-task) endpoint
        instead.
      operationId: actorTask_runSyncGetDatasetItems_get
      parameters:
        - name: actorTaskId
          in: path
          description: Task ID or a tilde-separated owner's username and task's name.
          required: true
          style: simple
          schema:
            type: string
            example: janedoe~my-task
        - name: timeout
          in: query
          description: |
            Optional timeout for the run, in seconds. By default, the run uses a
            timeout specified in the task settings.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 60
        - name: memory
          in: query
          description: |
            Memory limit for the run, in megabytes. The amount of memory can be set
            to a power of 2 with a minimum of 128. By default, the run uses a memory
            limit specified in the task settings.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 256
        - name: maxItems
          in: query
          description: |
            The maximum number of items that the task run should return. This is
            useful for pay-per-result tasks, as it allows you to limit the number of
            results that will be charged to your subscription. You can access the
            maximum number of items in your actor by using the
            `ACTOR_MAX_PAID_DATASET_ITEMS` environment variable.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 1000
        - name: build
          in: query
          description: |
            Specifies the actor build to run. It can be either a build tag or build
            number. By default, the run uses the build specified in the task
            settings (typically `latest`).
          style: form
          explode: true
          schema:
            type: string
            example: 0.1.234
        - name: webhooks
          in: query
          description: |
            Specifies optional webhooks associated with the actor run, which can be
            used to receive a notification

            e.g. when the actor finished or failed. The value is a Base64-encoded
            JSON array of objects defining the webhooks. For more information, see

            [Webhooks
            documentation](https://docs.apify.com/platform/integrations/webhooks).
          style: form
          explode: true
          schema:
            type: string
            example: dGhpcyBpcyBqdXN0IGV4YW1wbGUK...
        - name: format
          in: query
          description: |
            Format of the results, possible values are: `json`, `jsonl`, `csv`,
            `html`, `xlsx`, `xml` and `rss`. The default value is `json`.
          style: form
          explode: true
          schema:
            type: string
            example: json
        - name: clean
          in: query
          description: |
            If `true` or `1` then the API endpoint returns only non-empty items and
            skips hidden fields

            (i.e. fields starting with the # character).

            The `clean` parameter is just a shortcut for `skipHidden=true` and
            `skipEmpty=true` parameters.

            Note that since some objects might be skipped from the output, that the
            result might contain less items than the `limit` value.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: offset
          in: query
          description: |
            Number of items that should be skipped at the start. The default value
            is `0`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 0
        - name: limit
          in: query
          description: Maximum number of items to return. By default there is no limit.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 99
        - name: fields
          in: query
          description: |
            A comma-separated list of fields which should be picked from the items,

            only these fields will remain in the resulting record objects.

            Note that the fields in the outputted items are sorted the same way as
            they are specified in the `fields` query parameter.

            You can use this feature to effectively fix the output format.
          style: form
          explode: true
          schema:
            type: string
            example: 'myValue,myOtherValue'
        - name: omit
          in: query
          description: A comma-separated list of fields which should be omitted from the items.
          style: form
          explode: true
          schema:
            type: string
            example: 'myValue,myOtherValue'
        - name: unwind
          in: query
          description: |
            A comma-separated list of fields which should be unwound, in order which
            they should be processed. Each field should be either an array or an object.

            If the field is an array then every element of

            the array will become a separate record and merged with parent object.

            If the unwound field is an object then it is merged with the parent
            object

            If the unwound field is missing or its value is neither an array nor an
            object and therefore cannot be merged with a parent object then the item
            gets preserved as it is.

            Note that the unwound items ignore the `desc` parameter.
          style: form
          explode: true
          schema:
            type: string
            example: 'myValue,myOtherValue'
        - name: flatten
          in: query
          description: |
            A comma-separated list of fields which should transform nested objects
            into flat structures.

            For example, with `flatten="foo"` the object `{"foo":{"bar": "hello"}}`
            is turned into `{"foo.bar": "hello"}`.

            The original object with properties is replaced with the flattened
            object.
          style: form
          explode: true
          schema:
            type: string
            example: myValue
        - name: desc
          in: query
          description: |
            By default, results are returned in the same order as they were stored.
            To reverse the order, set this parameter to `true` or `1`.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: attachment
          in: query
          description: |
            If `true` or `1` then the response will define the `Content-Disposition:
            attachment` header, forcing a web browser to download the file rather
            than to display it. By default this header is not present.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: delimiter
          in: query
          description: |
            A delimiter character for CSV files, only used if `format=csv`. You
            might need to URL-encode the character (e.g. use `%09` for tab or `%3B`
            for semicolon). The default delimiter is a simple comma (`,`).
          style: form
          explode: true
          schema:
            type: string
            example: ;
        - name: bom
          in: query
          description: |
            All text responses are encoded in UTF-8 encoding. By default, the
            `format=csv` files are prefixed with

            the UTF-8 Byte Order Mark (BOM), while `json`, `jsonl`, `xml`, `html`
            and `rss` files are not.

            If you want to override this default behavior, specify `bom=1` query
            parameter to include the BOM or `bom=0` to skip it.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: xmlRoot
          in: query
          description: |
            Overrides default root element name of `xml` output. By default the root
            element is `items`.
          style: form
          explode: true
          schema:
            type: string
            example: items
        - name: xmlRow
          in: query
          description: |
            Overrides default element name that wraps each page or page function
            result object in `xml` output. By default the element name is `item`.
          style: form
          explode: true
          schema:
            type: string
            example: item
        - name: skipHeaderRow
          in: query
          description: If `true` or `1` then header row in the `csv` format is skipped.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: skipHidden
          in: query
          description: |-
            If `true` or `1` then hidden fields are skipped from the output,
            i.e. fields starting with the `#` character.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: skipEmpty
          in: query
          description: |
            If `true` or `1` then empty items are skipped from the output.

            Note that if used, the results might contain less items than the limit
            value.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: simplified
          in: query
          description: |
            If `true` or `1` then, the endpoint applies the
            `fields=url,pageFunctionResult,errorInfo`

            and `unwind=pageFunctionResult` query parameters. This feature is used
            to emulate simplified results provided by the

            legacy Apify Crawler product and it's not recommended to use it in new
            integrations.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: skipFailedPages
          in: query
          description: |
            If `true` or `1` then, the all the items with errorInfo property will be
            skipped from the output.

            This feature is here to emulate functionality of API version 1 used for
            the legacy Apify Crawler product and it's not recommended to use it in
            new integrations.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
      responses:
        '201':
          description: ''
          headers:
            X-Apify-Pagination-Offset:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '0'
            X-Apify-Pagination-Limit:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '100'
            X-Apify-Pagination-Count:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '100'
            X-Apify-Pagination-Total:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '10204'
          content:
            application/json:
              schema:
                type: object
        '400':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1run-sync/get/responses/400/content/application~1json/schema'
        '408':
          description: 'Request Timeout: the HTTP request exceeded the 300 second limit'
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1run-sync/get/responses/400/content/application~1json/schema'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-tasks/run-task-synchronously-and-get-dataset-items/run-task-synchronously-and-get-dataset-items-get'
  /v2/actor-runs:
    get:
      tags:
        - Actor runs/Run collection
      summary: Get user runs list
      description: |
        Gets a list of all runs for a user. The response is a list of objects, where
        each object contains basic information about a single actor run.

        The endpoint supports pagination using the `limit` and `offset` parameters
        and it will not return more than 1000 array elements.

        By default, the records are sorted by the `startedAt` field in ascending
        order. Therefore, you can use pagination to incrementally fetch all records while
        new ones are still being created. To sort the records in descending order, use
        `desc=1` parameter. You can also filter runs by status ([available
        statuses](https://docs.apify.com/platform/actors/running/runs-and-builds#lifecycle)).
      operationId: actorRuns_get
      parameters:
        - name: offset
          in: query
          description: |
            Number of array elements that should be skipped at the start. The
            default value is `0`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 10
        - name: limit
          in: query
          description: |
            Maximum number of array elements to return. The default value (as well
            as the maximum) is `1000`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 99
        - name: desc
          in: query
          description: |
            If `true` or `1` then the objects are sorted by the `startedAt` field in
            descending order. By default, they are sorted in ascending order.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: status
          in: query
          description: |
            Return only runs with the provided status ([available
            statuses](https://docs.apify.com/platform/actors/running/runs-and-builds#lifecycle))
          style: form
          explode: true
          schema:
            type: string
            example: SUCCEEDED
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1runs/get/responses/200/content/application~1json/schema'
              example:
                data:
                  total: 2
                  offset: 0
                  limit: 1000
                  desc: false
                  count: 2
                  items:
                    - id: HG7ML7M8z78YcAPEB
                      actId: HDSasDasz78YcAPEB
                      actorTaskId: KJHSKHausidyaJKHs
                      status: SUCCEEDED
                      startedAt: '2019-11-30T07:34:24.202Z'
                      finishedAt: '2019-12-12T09:30:12.202Z'
                      buildId: HG7ML7M8z78YcAPEB
                      buildNumber: 0.0.2
                      meta:
                        origin: WEB
                      usageTotalUsd: 0.2
                      defaultKeyValueStoreId: sfAjeR4QmeJCQzTfe
                      defaultDatasetId: 3ZojQDdFTsyE7Moy4
                      defaultRequestQueueId: so93g2shcDzK3pA85
                    - id: HG7ML7M8z78YcAPEB
                      actId: HDSasDasz78YcAPEB
                      actorTaskId: KJHSKHausidyaJKHs
                      status: FAILED
                      startedAt: '2019-12-12T07:34:14.202Z'
                      finishedAt: '2019-12-13T08:36:13.202Z'
                      buildId: u78dML7M8z78YcAPEB
                      buildNumber: 0.2.2
                      meta:
                        origin: DEVELOPMENT
                      usageTotalUsd: 0.6
                      defaultKeyValueStoreId: sffsouqlseJCQzTfe
                      defaultDatasetId: CFGggdjQDsyE7Moyw
                      defaultRequestQueueId: soowucklrmDzKpA8x
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-runs/run-collection/get-user-runs-list'
  '/v2/actor-runs/{runId}':
    get:
      tags:
        - Actor runs/Run object and its storages
      summary: Get run
      description: |
        This is not a single endpoint, but an entire group of endpoints that lets
        you retrieve the run or any of its default storages.

        The endpoints accept the same HTTP methods and query parameters as
        the respective storage endpoints.
      operationId: actorRun_get
      parameters:
        - name: runId
          in: path
          description: Run ID.
          required: true
          style: simple
          schema:
            type: string
            example: 3KH8gEpp4d8uQSe8T
        - name: waitForFinish
          in: query
          description: |
            The maximum number of seconds the server waits for the run to finish. By
            default it is `0`, the maximum value is `60`. <!--
            MAX_ACTOR_JOB_ASYNC_WAIT_SECS -->
            If the build finishes in time then the returned run object will have a terminal status (e.g. `SUCCEEDED`),
            otherwise it will have a transitional status (e.g. `RUNNING`).
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 60
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1v2~1actor-runs~1%7BrunId%7D/put/responses/200/content/application~1json/schema'
              example:
                data:
                  id: HG7ML7M8z78YcAPEB
                  actId: HDSasDasz78YcAPEB
                  userId: 7sT5jcggjjA9fNcxF
                  actorTaskId: KJHSKHausidyaJKHs
                  startedAt: '2019-11-30T07:34:24.202Z'
                  finishedAt: '2019-12-12T09:30:12.202Z'
                  status: RUNNING
                  statusMessage: Actor is running
                  isStatusMessageTerminal: false
                  meta:
                    origin: WEB
                    clientIp: 172.234.12.34
                    userAgent: Mozilla/5.0 (iPad)
                  stats:
                    inputBodyLen: 240
                    restartCount: 0
                    resurrectCount: 2
                    memAvgBytes: 267874071.9
                    memMaxBytes: 404713472
                    memCurrentBytes: 0
                    cpuAvgUsage: 33.75321011075384
                    cpuMaxUsage: 169.65073553494125
                    cpuCurrentUsage: 0
                    netRxBytes: 103508042
                    netTxBytes: 4854600
                    durationMillis: 248472
                    runTimeSecs: 248.472
                    metamorph: 0
                    computeUnits: 0.13804
                  options:
                    build: latest
                    timeoutSecs: 300
                    memoryMbytes: 1024
                    diskMbytes: 2048
                  buildId: 7sT5jcggjjA9fNcxF
                  exitCode: 0
                  defaultKeyValueStoreId: eJNzqsbPiopwJcgGQ
                  defaultDatasetId: wmKPijuyDnPZAPRMk
                  defaultRequestQueueId: FL35cSF7jrxr3BY39
                  buildNumber: 0.0.36
                  containerUrl: 'https://g8kd8kbc5ge8.runs.apify.net'
                  isContainerServerReady: true
                  gitBranchName: master
                  usage:
                    ACTOR_COMPUTE_UNITS: 3
                    DATASET_READS: 4
                    DATASET_WRITES: 4
                    KEY_VALUE_STORE_READS: 5
                    KEY_VALUE_STORE_WRITES: 3
                    KEY_VALUE_STORE_LISTS: 5
                    REQUEST_QUEUE_READS: 2
                    REQUEST_QUEUE_WRITES: 1
                    DATA_TRANSFER_INTERNAL_GBYTES: 1
                    DATA_TRANSFER_EXTERNAL_GBYTES?: 3
                    PROXY_RESIDENTIAL_TRANSFER_GBYTES: 34
                    PROXY_SERPS: 3
                  usageTotalUsd: 0.2654
                  usageUsd:
                    ACTOR_COMPUTE_UNITS: 0.072
                    DATASET_READS: 0.0004
                    DATASET_WRITES: 0.0002
                    KEY_VALUE_STORE_READS: 0.0006
                    KEY_VALUE_STORE_WRITES: 0.002
                    KEY_VALUE_STORE_LISTS: 0.004
                    REQUEST_QUEUE_READS: 0.005
                    REQUEST_QUEUE_WRITES: 0.02
                    DATA_TRANSFER_INTERNAL_GBYTES: 0.0004
                    DATA_TRANSFER_EXTERNAL_GBYTES?: 0.0002
                    PROXY_RESIDENTIAL_TRANSFER_GBYTES: 0.16
                    PROXY_SERPS: 0.0006
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-runs/run-object-and-its-storages/get-run'
    delete:
      tags:
        - Actor runs/Delete run
      summary: Delete run
      description: |
        Delete the run. Only finished runs can be deleted. Only the person or
        organization that initiated the run can delete it.
      operationId: actorRun_delete
      parameters:
        - name: runId
          in: path
          description: Run ID.
          required: true
          style: simple
          schema:
            type: string
            example: 3KH8gEpp4d8uQSe8T
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-runs/delete-run/delete-run'
      x-js-parent: RunClient
      x-js-name: delete
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/RunClient#delete'
    put:
      tags:
        - Actor runs/Update status message
      summary: Update status message
      description: |
        You can set a single status message on your run that will be displayed in
        the Apify Console UI. During an actor run, you will typically do this in order
        to inform users of your actor about the actor's progress.

        The request body must contain `runId` and `statusMessage` properties. The
        `isStatusMessageTerminal` property is optional and it indicates if the
        status message is the very last one. In the absence of a status message, the
        platform will try to substitute sensible defaults.
      operationId: actorRun_put
      parameters:
        - name: runId
          in: path
          description: Run ID.
          required: true
          style: simple
          schema:
            type: string
            example: 3KH8gEpp4d8uQSe8T
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - title: UpdateRunRequest
                  required:
                    - runId
                    - statusMessage
                  type: object
                  properties:
                    runId:
                      type: string
                      example: 3KH8gEpp4d8uQSe8T
                    statusMessage:
                      type: string
                      example: Actor has finished
                    isStatusMessageTerminal:
                      type: boolean
                      example: true
                - example:
                    runId: 3KH8gEpp4d8uQSe8T
                    statusMessage: Actor has finished
                    isStatusMessageTerminal: true
            example:
              runId: 3KH8gEpp4d8uQSe8T
              statusMessage: Actor has finished
              isStatusMessageTerminal: true
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: RunResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    allOf:
                      - $ref: '#/paths/~1v2~1actor-tasks~1%7BactorTaskId%7D~1runs/post/responses/201/content/application~1json/schema/properties/data'
                      - {}
              example:
                data:
                  id: HG7ML7M8z78YcAPEB
                  actId: HDSasDasz78YcAPEB
                  userId: 7sT5jcggjjA9fNcxF
                  actorTaskId: KJHSKHausidyaJKHs
                  startedAt: '2019-11-30T07:34:24.202Z'
                  finishedAt: '2019-12-12T09:30:12.202Z'
                  status: RUNNING
                  statusMessage: Actor is running
                  isStatusMessageTerminal: false
                  meta:
                    origin: WEB
                    clientIp: 172.234.12.34
                    userAgent: Mozilla/5.0 (iPad)
                  stats:
                    inputBodyLen: 240
                    restartCount: 0
                    resurrectCount: 2
                    memAvgBytes: 267874071.9
                    memMaxBytes: 404713472
                    memCurrentBytes: 0
                    cpuAvgUsage: 33.75321011075384
                    cpuMaxUsage: 169.65073553494125
                    cpuCurrentUsage: 0
                    netRxBytes: 103508042
                    netTxBytes: 4854600
                    durationMillis: 248472
                    runTimeSecs: 248.472
                    metamorph: 0
                    computeUnits: 0.13804
                  options:
                    build: latest
                    timeoutSecs: 300
                    memoryMbytes: 1024
                    diskMbytes: 2048
                  buildId: 7sT5jcggjjA9fNcxF
                  exitCode: 0
                  defaultKeyValueStoreId: eJNzqsbPiopwJcgGQ
                  defaultDatasetId: wmKPijuyDnPZAPRMk
                  defaultRequestQueueId: FL35cSF7jrxr3BY39
                  buildNumber: 0.0.36
                  containerUrl: 'https://g8kd8kbc5ge8.runs.apify.net'
                  isContainerServerReady: true
                  gitBranchName: master
                  usage:
                    ACTOR_COMPUTE_UNITS: 3
                    DATASET_READS: 4
                    DATASET_WRITES: 4
                    KEY_VALUE_STORE_READS: 5
                    KEY_VALUE_STORE_WRITES: 3
                    KEY_VALUE_STORE_LISTS: 5
                    REQUEST_QUEUE_READS: 2
                    REQUEST_QUEUE_WRITES: 1
                    DATA_TRANSFER_INTERNAL_GBYTES: 1
                    DATA_TRANSFER_EXTERNAL_GBYTES?: 3
                    PROXY_RESIDENTIAL_TRANSFER_GBYTES: 34
                    PROXY_SERPS: 3
                  usageTotalUsd: 0.2654
                  usageUsd:
                    ACTOR_COMPUTE_UNITS: 0.072
                    DATASET_READS: 0.0004
                    DATASET_WRITES: 0.0002
                    KEY_VALUE_STORE_READS: 0.0006
                    KEY_VALUE_STORE_WRITES: 0.002
                    KEY_VALUE_STORE_LISTS: 0.004
                    REQUEST_QUEUE_READS: 0.005
                    REQUEST_QUEUE_WRITES: 0.02
                    DATA_TRANSFER_INTERNAL_GBYTES: 0.0004
                    DATA_TRANSFER_EXTERNAL_GBYTES?: 0.0002
                    PROXY_RESIDENTIAL_TRANSFER_GBYTES: 0.16
                    PROXY_SERPS: 0.0006
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-runs/update-status-message/update-status-message'
  '/v2/actor-runs/{runId}/abort':
    post:
      tags:
        - Actor runs/Abort run
      summary: Abort run
      description: |
        Aborts an actor run and returns an object that contains all the details
        about the run.

        Only runs that are starting or running are aborted. For runs with status
        `FINISHED`, `FAILED`, `ABORTING` and `TIMED-OUT` this call does nothing.
      operationId: actorRun_abort_post
      parameters:
        - name: runId
          in: path
          description: Run ID.
          required: true
          style: simple
          schema:
            type: string
            example: 3KH8gEpp4d8uQSe8T
        - name: gracefully
          in: query
          description: |-
            If true passed, the actor run will abort gracefully.
            It will send `aborting` and `persistState` event into run and force-stop the run after 30 seconds.
            It is helpful in cases where you plan to resurrect the run later.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1actor-runs~1%7BrunId%7D/put/responses/200/content/application~1json/schema'
              example:
                data:
                  id: HG7ML7M8z78YcAPEB
                  actId: janedoe~my-actor
                  userId: BPWZBd7Z9c746JAng
                  actorTaskId: rANaydYhUxjsnA3oz
                  startedAt: '2019-11-30T07:34:24.202Z'
                  finishedAt: '2019-12-12T09:30:12.202Z'
                  status: ABORTED
                  statusMessage: Actor was aborted
                  isStatusMessageTerminal: true
                  meta:
                    origin: WEB
                    clientIp: 172.234.12.34
                    userAgent: Mozilla/5.0 (iPad)
                  stats:
                    inputBodyLen: 240
                    restartCount: 0
                    resurrectCount: 1
                    memAvgBytes: 35914228.4
                    memMaxBytes: 38244352
                    memCurrentBytes: 0
                    cpuAvgUsage: 0.00955965
                    cpuMaxUsage: 3.1546
                    cpuCurrentUsage: 0
                    netRxBytes: 2652
                    netTxBytes: 1338
                    durationMillis: 26239
                    runTimeSecs: 26.239
                    metamorph: 0
                    computeUnits: 0.0072886
                  options:
                    build: latest
                    timeoutSecs: 300
                    memoryMbytes: 1024
                    diskMbytes: 2048
                  buildId: 7sT5jcggjjA9fNcxF
                  exitCode: 0
                  defaultKeyValueStoreId: eJNzqsbPiopwJcgGQ
                  defaultDatasetId: wmKPijuyDnPZAPRMk
                  defaultRequestQueueId: FL35cSF7jrxr3BY39
                  isContainerServerReady: false
                  gitBranchName: master
                  usage:
                    ACTOR_COMPUTE_UNITS: 3
                    DATASET_READS: 4
                    DATASET_WRITES: 4
                    KEY_VALUE_STORE_READS: 5
                    KEY_VALUE_STORE_WRITES: 3
                    KEY_VALUE_STORE_LISTS: 5
                    REQUEST_QUEUE_READS: 2
                    REQUEST_QUEUE_WRITES: 1
                    DATA_TRANSFER_INTERNAL_GBYTES: 1
                    DATA_TRANSFER_EXTERNAL_GBYTES?: 3
                    PROXY_RESIDENTIAL_TRANSFER_GBYTES: 34
                    PROXY_SERPS: 3
                  usageTotalUsd: 0.2654
                  usageUsd:
                    ACTOR_COMPUTE_UNITS: 0.072
                    DATASET_READS: 0.0004
                    DATASET_WRITES: 0.0002
                    KEY_VALUE_STORE_READS: 0.0006
                    KEY_VALUE_STORE_WRITES: 0.002
                    KEY_VALUE_STORE_LISTS: 0.004
                    REQUEST_QUEUE_READS: 0.005
                    REQUEST_QUEUE_WRITES: 0.02
                    DATA_TRANSFER_INTERNAL_GBYTES: 0.0004
                    DATA_TRANSFER_EXTERNAL_GBYTES?: 0.0002
                    PROXY_RESIDENTIAL_TRANSFER_GBYTES: 0.16
                    PROXY_SERPS: 0.0006
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-runs/abort-run/abort-run'
      x-js-parent: RunClient
      x-js-name: abort
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/RunClient#abort'
      x-py-parent: RunClientAsync
      x-py-name: abort
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/RunClientAsync#abort'
  '/v2/actor-runs/{runId}/metamorph':
    post:
      tags:
        - Actor runs/Metamorph run
      summary: Metamorph run
      description: |
        Transforms an actor run into a run of another actor with a new input.

        This is useful if you want to use another actor to finish the work
        of your current actor run, without the need to create a completely new run
        and waiting for its finish.

        For the users of your actors, the metamorph operation is transparent, they
        will just see your actor got the work done.

        Internally, the system stops the Docker container corresponding to the actor
        run and starts a new container using a different Docker image.

        All the default storages are preserved and the new input is stored under the
        `INPUT-METAMORPH-1` key in the same default key-value store.

        For more information, see the [Actor
        docs](https://docs.apify.com/platform/actors/development/programming-interface/metamorph).
      operationId: actorRun_metamorph_post
      parameters:
        - name: runId
          in: path
          description: Actor run ID.
          required: true
          style: simple
          schema:
            type: string
            example: 3KH8gEpp4d8uQSe8T
        - name: targetActorId
          in: query
          description: ID of a target actor that the run should be transformed into.
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: HDSasDasz78YcAPEB
        - name: build
          in: query
          description: |
            Optional build of the target actor.

            It can be either a build tag or build number. By default, the run uses
            the build specified in the default run configuration for the target
            actor (typically `latest`).
          style: form
          explode: true
          schema:
            type: string
            example: beta
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1actor-runs~1%7BrunId%7D/put/responses/200/content/application~1json/schema'
              example:
                data:
                  id: HG7ML7M8z78YcAPEB
                  actId: janedoe~my-actor
                  userId: PNWZBd7Z9c746JAnF
                  startedAt: '2019-11-30T07:34:24.202Z'
                  finishedAt: null
                  status: RUNNING
                  statusMessage: Actor is running
                  isStatusMessageTerminal: false
                  meta:
                    origin: WEB
                    clientIp: 172.234.12.34
                    userAgent: Mozilla/5.0 (iPad)
                  stats:
                    inputBodyLen: 240
                    restartCount: 0
                    resurrectCount: 1
                    memAvgBytes: 35914228.4
                    memMaxBytes: 38244352
                    memCurrentBytes: 0
                    cpuAvgUsage: 0.00955965
                    cpuMaxUsage: 3.1546
                    cpuCurrentUsage: 0
                    netRxBytes: 2652
                    netTxBytes: 1338
                    durationMillis: 26239
                    runTimeSecs: 26.239
                    metamorph: 0
                    computeUnits: 0.0072886
                  options:
                    build: latest
                    timeoutSecs: 300
                    memoryMbytes: 1024
                    diskMbytes: 2048
                  buildId: HG7ML7M8z78YcAPEB
                  defaultKeyValueStoreId: eJNzqsbPiopwJcgGQ
                  defaultDatasetId: wmKPijuyDnPZAPRMk
                  defaultRequestQueueId: FL35cSF7jrxr3BY39
                  metamorphs:
                    - createdAt: '2019-11-30T07:39:24.202Z'
                      actorId: nspoEjklmnsF2oosD
                      buildId: ME6oKecqy5kXDS4KQ
                      inputKey: INPUT-METAMORPH-1
                  buildNumber: 0.1.10
                  containerUrl: 'https://hfewsyknno9o.runs.apify.com'
                  isContainerServerReady: false
                  gitBranchName: master
                  usage:
                    ACTOR_COMPUTE_UNITS: 3
                    DATASET_READS: 4
                    DATASET_WRITES: 4
                    KEY_VALUE_STORE_READS: 5
                    KEY_VALUE_STORE_WRITES: 3
                    KEY_VALUE_STORE_LISTS: 5
                    REQUEST_QUEUE_READS: 2
                    REQUEST_QUEUE_WRITES: 1
                    DATA_TRANSFER_INTERNAL_GBYTES: 1
                    DATA_TRANSFER_EXTERNAL_GBYTES?: 3
                    PROXY_RESIDENTIAL_TRANSFER_GBYTES: 34
                    PROXY_SERPS: 3
                  usageTotalUsd: 0.2654
                  usageUsd:
                    ACTOR_COMPUTE_UNITS: 0.072
                    DATASET_READS: 0.0004
                    DATASET_WRITES: 0.0002
                    KEY_VALUE_STORE_READS: 0.0006
                    KEY_VALUE_STORE_WRITES: 0.002
                    KEY_VALUE_STORE_LISTS: 0.004
                    REQUEST_QUEUE_READS: 0.005
                    REQUEST_QUEUE_WRITES: 0.02
                    DATA_TRANSFER_INTERNAL_GBYTES: 0.0004
                    DATA_TRANSFER_EXTERNAL_GBYTES?: 0.0002
                    PROXY_RESIDENTIAL_TRANSFER_GBYTES: 0.16
                    PROXY_SERPS: 0.0006
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-runs/metamorph-run/metamorph-run'
      x-js-parent: RunClient
      x-js-name: metamorph
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/RunClient#metamorph'
      x-py-parent: RunClientAsync
      x-py-name: metamorph
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/RunClientAsync#metamorph'
  '/v2/actor-runs/{runId}/reboot':
    post:
      tags:
        - Actor runs/Reboot run
      summary: Reboot run
      description: |
        Reboots an actor run and returns an object that contains all the details
        about the rebooted run.

        Only runs that are running, i.e. runs with status `RUNNING` can be rebooted.

        The run's container will be restarted, so any data not persisted in the
        key-value store, dataset, or request queue will be lost.
      operationId: actorRun_reboot_post
      parameters:
        - name: runId
          in: path
          description: Actor run ID.
          required: true
          style: simple
          schema:
            type: string
            example: 3KH8gEpp4d8uQSe8T
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1actor-runs~1%7BrunId%7D/put/responses/200/content/application~1json/schema'
              example:
                data:
                  id: HG7ML7M8z78YcAPEB
                  actId: HDSasDasz78YcAPEB
                  userId: 7sT5jcggjjA9fNcxF
                  actorTaskId: KJHSKHausidyaJKHs
                  startedAt: '2019-11-30T07:34:24.202Z'
                  finishedAt: '2019-12-12T09:30:12.202Z'
                  status: RUNNING
                  statusMessage: Actor is running
                  isStatusMessageTerminal: false
                  meta:
                    origin: WEB
                    clientIp: 172.234.12.34
                    userAgent: Mozilla/5.0 (iPad)
                  stats:
                    inputBodyLen: 240
                    restartCount: 0
                    resurrectCount: 2
                    memAvgBytes: 267874071.9
                    memMaxBytes: 404713472
                    memCurrentBytes: 0
                    cpuAvgUsage: 33.75321011075384
                    cpuMaxUsage: 169.65073553494125
                    cpuCurrentUsage: 0
                    netRxBytes: 103508042
                    netTxBytes: 4854600
                    durationMillis: 248472
                    runTimeSecs: 248.472
                    metamorph: 0
                    computeUnits: 0.13804
                  options:
                    build: latest
                    timeoutSecs: 300
                    memoryMbytes: 1024
                    diskMbytes: 2048
                  buildId: 7sT5jcggjjA9fNcxF
                  exitCode: 0
                  defaultKeyValueStoreId: eJNzqsbPiopwJcgGQ
                  defaultDatasetId: wmKPijuyDnPZAPRMk
                  defaultRequestQueueId: FL35cSF7jrxr3BY39
                  buildNumber: 0.0.36
                  containerUrl: 'https://g8kd8kbc5ge8.runs.apify.net'
                  isContainerServerReady: true
                  gitBranchName: master
                  usage:
                    ACTOR_COMPUTE_UNITS: 3
                    DATASET_READS: 4
                    DATASET_WRITES: 4
                    KEY_VALUE_STORE_READS: 5
                    KEY_VALUE_STORE_WRITES: 3
                    KEY_VALUE_STORE_LISTS: 5
                    REQUEST_QUEUE_READS: 2
                    REQUEST_QUEUE_WRITES: 1
                    DATA_TRANSFER_INTERNAL_GBYTES: 1
                    DATA_TRANSFER_EXTERNAL_GBYTES?: 3
                    PROXY_RESIDENTIAL_TRANSFER_GBYTES: 34
                    PROXY_SERPS: 3
                  usageTotalUsd: 0.2654
                  usageUsd:
                    ACTOR_COMPUTE_UNITS: 0.072
                    DATASET_READS: 0.0004
                    DATASET_WRITES: 0.0002
                    KEY_VALUE_STORE_READS: 0.0006
                    KEY_VALUE_STORE_WRITES: 0.002
                    KEY_VALUE_STORE_LISTS: 0.004
                    REQUEST_QUEUE_READS: 0.005
                    REQUEST_QUEUE_WRITES: 0.02
                    DATA_TRANSFER_INTERNAL_GBYTES: 0.0004
                    DATA_TRANSFER_EXTERNAL_GBYTES?: 0.0002
                    PROXY_RESIDENTIAL_TRANSFER_GBYTES: 0.16
                    PROXY_SERPS: 0.0006
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-runs/reboot-run/reboot-run'
      x-js-parent: RunClient
      x-js-name: reboot
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/RunClient#reboot'
      x-py-parent: RunClientAsync
      x-py-name: reboot
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/RunClientAsync#reboot'
  '/v2/actor-runs/{runId}/resurrect':
    post:
      tags:
        - Actor runs/Resurrect run
      summary: Resurrect run
      description: |
        Resurrects a finished actor run and returns an object that contains all the details about the resurrected run.
        Only finished runs, i.e. runs with status `FINISHED`, `FAILED`, `ABORTED` and `TIMED-OUT` can be resurrected.
        Run status will be updated to RUNNING and its container will be restarted with the same storages
        (the same behaviour as when the run gets migrated to the new server).

        For more information,
        see the [Actor docs](https://docs.apify.com/platform/actors/running/runs-and-builds#resurrection-of-finished-run).
      operationId: PostResurrectRun
      parameters:
        - name: runId
          in: path
          required: true
          schema:
            type: string
          example: 3KH8gEpp4d8uQSe8T
          description: Run ID.
        - name: build
          in: query
          required: false
          schema:
            type: string
          example: 0.1.234
          description: 'Specifies the actor build to run. It can be either a build tag or build number. By default, the run uses the build specified in the run that is being resurrected (typically `latest`).'
        - name: timeout
          in: query
          required: false
          schema:
            type: number
          example: 60
          description: 'Optional timeout for the run, in seconds. By default, the run uses a timeout specified in the run that is being resurrected.'
        - name: memory
          in: query
          required: false
          schema:
            type: number
          example: 256
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1v2~1actor-runs~1%7BrunId%7D/put/responses/200/content/application~1json/schema'
              example:
                data:
                  id: HG7ML7M8z78YcAPEB
                  actId: HDSasDasz78YcAPEB
                  userId: 7sT5jcggjjA9fNcxF
                  actorTaskId: KJHSKHausidyaJKHs
                  startedAt: '2019-11-30T07:34:24.202Z'
                  finishedAt: '2019-12-12T09:30:12.202Z'
                  status: RUNNING
                  statusMessage: Actor is running
                  isStatusMessageTerminal: false
                  meta:
                    origin: WEB
                    clientIp: 172.234.12.34
                    userAgent: Mozilla/5.0 (iPad)
                  stats:
                    inputBodyLen: 240
                    restartCount: 0
                    resurrectCount: 2
                    memAvgBytes: 267874071.9
                    memMaxBytes: 404713472
                    memCurrentBytes: 0
                    cpuAvgUsage: 33.75321011075384
                    cpuMaxUsage: 169.65073553494125
                    cpuCurrentUsage: 0
                    netRxBytes: 103508042
                    netTxBytes: 4854600
                    durationMillis: 248472
                    runTimeSecs: 248.472
                    metamorph: 0
                    computeUnits: 0.13804
                  options:
                    build: latest
                    timeoutSecs: 300
                    memoryMbytes: 1024
                    diskMbytes: 2048
                  buildId: 7sT5jcggjjA9fNcxF
                  exitCode: 0
                  defaultKeyValueStoreId: eJNzqsbPiopwJcgGQ
                  defaultDatasetId: wmKPijuyDnPZAPRMk
                  defaultRequestQueueId: FL35cSF7jrxr3BY39
                  buildNumber: 0.0.36
                  containerUrl: 'https://g8kd8kbc5ge8.runs.apify.net'
                  isContainerServerReady: true
                  gitBranchName: master
                  usage:
                    ACTOR_COMPUTE_UNITS: 3
                    DATASET_READS: 4
                    DATASET_WRITES: 4
                    KEY_VALUE_STORE_READS: 5
                    KEY_VALUE_STORE_WRITES: 3
                    KEY_VALUE_STORE_LISTS: 5
                    REQUEST_QUEUE_READS: 2
                    REQUEST_QUEUE_WRITES: 1
                    DATA_TRANSFER_INTERNAL_GBYTES: 1
                    DATA_TRANSFER_EXTERNAL_GBYTES?: 3
                    PROXY_RESIDENTIAL_TRANSFER_GBYTES: 34
                    PROXY_SERPS: 3
                  usageTotalUsd: 0.2654
                  usageUsd:
                    ACTOR_COMPUTE_UNITS: 0.072
                    DATASET_READS: 0.0004
                    DATASET_WRITES: 0.0002
                    KEY_VALUE_STORE_READS: 0.0006
                    KEY_VALUE_STORE_WRITES: 0.002
                    KEY_VALUE_STORE_LISTS: 0.004
                    REQUEST_QUEUE_READS: 0.005
                    REQUEST_QUEUE_WRITES: 0.02
                    DATA_TRANSFER_INTERNAL_GBYTES: 0.0004
                    DATA_TRANSFER_EXTERNAL_GBYTES?: 0.0002
                    PROXY_RESIDENTIAL_TRANSFER_GBYTES: 0.16
                    PROXY_SERPS: 0.0006
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-runs/resurrect-run/resurrect-run'
      x-js-parent: RunClient
      x-js-name: resurrect
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/RunClient#resurrect'
      x-py-parent: RunClientAsync
      x-py-name: resurrect
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/RunClientAsync#resurrect'
    delete:
      tags:
        - Actor runs/Delete run
      summary: Delete run
      description: |
        Delete the run. Only finished runs can be deleted. Only the person or
        organization that initiated the run can delete it.
      operationId: Deleterun
      parameters:
        - name: runId
          in: path
          description: Run ID.
          required: true
          style: simple
          schema:
            type: string
            example: 3KH8gEpp4d8uQSe8T
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-runs/delete-run/delete-run'
      x-js-parent: RunClient
      x-js-name: delete
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/RunClient#delete'
  /v2/actor-builds:
    get:
      tags:
        - Actor builds/Build collection
      summary: Get user builds list
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-builds/build-collection/get-user-builds-list'
      description: |
        Gets a list of all builds for a user. The response is a JSON array of
        objects, where each object contains basic information about a single build.

        The endpoint supports pagination using the `limit` and `offset` parameters
        and it will not return more than 1000 records.

        By default, the records are sorted by the `startedAt` field in ascending
        order. Therefore, you can use pagination to incrementally fetch all builds while
        new ones are still being started. To sort the records in descending order, use
        the `desc=1` parameter.
      operationId: actorBuilds_get
      parameters:
        - name: offset
          in: query
          description: |
            Number of records that should be skipped at the start. The default value
            is `0`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 10
        - name: limit
          in: query
          description: |
            Maximum number of records to return. The default value as well as the
            maximum is `1000`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 99
        - name: desc
          in: query
          description: |
            If `true` or `1` then the objects are sorted by the `startedAt` field in
            descending order. By default, they are sorted in ascending order.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: GetBuildListResponse
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - total
                      - offset
                      - limit
                      - desc
                      - count
                      - items
                    properties:
                      total:
                        type: number
                        example: 2
                      offset:
                        type: number
                        example: 0
                      limit:
                        type: number
                        example: 1000
                      desc:
                        type: boolean
                        example: false
                      count:
                        type: number
                        example: 2
                      items:
                        type: array
                        items:
                          title: BuildShort
                          required:
                            - id
                            - status
                            - startedAt
                            - finishedAt
                            - usageTotalUsd
                          type: object
                          properties:
                            id:
                              type: string
                              example: HG7ML7M8z78YcAPEB
                            actId:
                              type: string
                              example: janedoe~my-actor
                            status:
                              type: string
                              example: SUCCEEDED
                            startedAt:
                              type: string
                              example: '2019-11-30T07:34:24.202Z'
                            finishedAt:
                              type: string
                              example: '2019-12-12T09:30:12.202Z'
                            usageTotalUsd:
                              type: number
                              example: 0.02
                            meta:
                              allOf:
                                - $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1builds/post/responses/201/content/application~1json/schema/properties/data/properties/meta'
                                - {}
                        description: ''
      deprecated: false
  '/v2/actor-builds/{buildId}':
    get:
      tags:
        - Actor builds/Build object
      summary: Get build
      description: |
        Gets an object that contains all the details about a specific build of an
        Actor.

        By passing the optional `waitForFinish` parameter the API endpoint will
        synchronously wait for the build to finish. This is useful to avoid periodic
        polling when waiting for an Actor build to finish.

        This endpoint does not require the authentication token. Instead, calls are authenticated using a hard-to-guess ID of the build. However,
        if you access the endpoint without the token, certain attributes, such as `usageUsd` and `usageTotalUsd`, will be hidden.
      operationId: actorBuild_get
      security:
        - apiKeyActorBuilds: []
        - httpBearerActorBuilds: []
      parameters:
        - name: buildId
          in: path
          description: 'ID of the build you want to get, found in the build''s `Info` tab.'
          required: true
          style: simple
          schema:
            type: string
            example: soSkq9ekdmfOslopH
        - name: waitForFinish
          in: query
          description: |
            The maximum number of seconds the server waits for the build to finish.
            By default it is `0`, the maximum value is `60`.

            <!-- MAX_ACTOR_JOB_ASYNC_WAIT_SECS -->

            If the build finishes in time then the returned build object will have a
            terminal status (e.g. `SUCCEEDED`), otherwise it will have a transitional status (e.g. `RUNNING`).
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 60
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1builds~1%7BbuildId%7D/get/responses/200/content/application~1json/schema'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-builds/build-object/get-build'
      x-js-parent: BuildClient
      x-js-name: get
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/BuildClient#get'
      x-py-parent: BuildClientAsync
      x-py-name: get
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/BuildClientAsync#get'
    delete:
      tags:
        - Actor builds/Delete build
      summary: Delete build
      description: |
        Delete the build. The build that is the current default build for the Actor
        cannot be deleted.

        Only users with build permissions for the Actor can delete builds.
      operationId: actorBuild_delete
      parameters:
        - name: buildId
          in: path
          description: 'ID of the build you want to get, found in the build''s `Info` tab.'
          required: true
          style: simple
          schema:
            type: string
            example: soSkq9ekdmfOslopH
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-builds/delete-build/delete-build'
      x-js-parent: BuildClient
      x-js-name: delete
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/BuildClient#delete'
  '/v2/actor-builds/{buildId}/abort':
    post:
      tags:
        - Actor builds/Abort build
      summary: Abort build
      description: |
        Aborts an Actor build and returns an object that contains all the details
        about the build.

        Only builds that are starting or running are aborted. For builds with status
        `FINISHED`, `FAILED`, `ABORTING` and `TIMED-OUT` this call does nothing.
      operationId: actorBuild_abort_post
      parameters:
        - name: buildId
          in: path
          description: Build ID.
          required: true
          style: simple
          schema:
            type: string
            example: 3KH8gEpp4d8uQSe8T
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1v2~1acts~1%7BactorId%7D~1builds~1%7BbuildId%7D~1abort/post/responses/200/content/application~1json/schema'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-builds/abort-build/abort-build'
      x-js-parent: BuildClient
      x-js-name: abort
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/BuildClient#abort'
      x-py-parent: BuildClientAsync
      x-py-name: abort
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/BuildClientAsync#abort'
  '/v2/actor-builds/{buildId}/log':
    get:
      tags:
        - Actor builds/Build log
      summary: Get log
      description: 'Check out [Logs](#/reference/logs) for full reference.'
      operationId: actorBuild_log_get
      parameters:
        - name: buildId
          in: path
          description: ID of the Actor build.
          required: true
          style: simple
          schema:
            type: string
            example: HG7ML7M8z78YcAPEB
        - name: stream
          in: query
          description: |
            If `true` or `1` then the logs will be streamed as long as the run or
            build is running.
          required: true
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: download
          in: query
          description: |
            If `true` or `1` then the web browser will download the log file rather
            than open it in a tab.
          required: true
          style: form
          explode: true
          schema:
            type: boolean
            example: false
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema:
                type: string
                example: |-
                  2017-07-14T06:00:49.733Z Application started.
                  2017-07-14T06:00:49.741Z Input: { test: 123 }
                  2017-07-14T06:00:49.752Z Some useful debug information follows.
              example: |-
                2017-07-14T06:00:49.733Z Application started.
                2017-07-14T06:00:49.741Z Input: { test: 123 }
                2017-07-14T06:00:49.752Z Some useful debug information follows.
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/actor-builds/build-log/get-log'
  /v2/key-value-stores:
    get:
      tags:
        - Key-value stores/Store collection
      summary: Get list of key-value stores
      description: |
        Gets the list of key-value stores owned by the user.

        The response is a list of objects, where each objects contains a basic
        information about a single key-value store.

        The endpoint supports pagination using the `limit` and `offset` parameters
        and it will not return more than 1000 array elements.

        By default, the records are sorted by the `createdAt` field in ascending
        order, therefore you can use pagination to incrementally fetch all key-value stores
        while new ones are still being created. To sort the records in descending order, use
        the `desc=1` parameter.
      operationId: keyValueStores_get
      parameters:
        - name: offset
          in: query
          description: |
            Number of records that should be skipped at the start. The default value
            is `0`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 10
        - name: limit
          in: query
          description: |
            Maximum number of records to return. The default value as well as the
            maximum is `1000`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 99
        - name: desc
          in: query
          description: |
            If `true` or `1` then the objects are sorted by the `startedAt` field in
            descending order. By default, they are sorted in ascending order.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: unnamed
          in: query
          description: |
            If `true` or `1` then all the stores are returned. By default, only
            named key-value stores are returned.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: GetListOfKeyValueStoresResponse
                type: object
                required:
                  - data
                properties:
                  data:
                    allOf:
                      - $ref: '#/paths/~1v2~1actor-tasks/get/responses/200/content/application~1json/schema/properties/data/allOf/0'
                      - type: object
                        required:
                          - items
                        properties:
                          items:
                            type: array
                            items:
                              $ref: '#/paths/~1v2~1key-value-stores/post/responses/201/content/application~1json/schema/properties/data'
                            description: ''
                        example:
                          items:
                            - id: WkzbQMuFYuamGv3YF
                              name: d7b9MDYsbtX5L7XAj
                              userId: BPWDBd7Z9c746JAnF
                              username: janedoe
                              createdAt: '2019-12-12T07:34:14.202Z'
                              modifiedAt: '2019-12-13T08:36:13.202Z'
                              accessedAt: '2019-12-14T08:36:13.202Z'
                              actId: null
                              actRunId: null
                            - id: YiKoxjkaS9gjGTqhF
                              name: eshop-items
                              userId: BPWDBd7Z9c746JAnF
                              username: janedoe
                              createdAt: '2019-12-12T07:34:14.202Z'
                              modifiedAt: '2019-12-13T08:36:13.202Z'
                              accessedAt: '2019-12-14T08:36:13.202Z'
                              actId: null
                              actRunId: null
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/key-value-stores/store-collection/get-list-of-key-value-stores'
      x-js-parent: KeyValueStoreCollectionClient
      x-js-name: list
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/KeyValueStoreCollectionClient#list'
      x-py-parent: KeyValueStoreCollectionClientAsync
      x-py-name: list
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/KeyValueStoreCollectionClientAsync#list'
    post:
      tags:
        - Key-value stores/Store collection
      summary: Create key-value store
      description: |
        Creates a key-value store and returns its object. The response is the same
        object as returned by the [Get store](#/reference/key-value-stores/store-object/get-store)
        endpoint.

        Keep in mind that data stored under unnamed store follows [data retention
        period](https://docs.apify.com/platform/storage#data-retention).

        It creates a store with the given name if the parameter name is used.
        If there is another store with the same name, the endpoint does not create a
        new one and returns the existing object instead.
      operationId: keyValueStores_post
      parameters:
        - name: name
          in: query
          description: Custom unique name to easily identify the store in the future.
          style: form
          explode: true
          schema:
            type: string
            example: eshop-values
      responses:
        '201':
          description: ''
          headers:
            Location:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 'https://api.apify.com/v2/key-value-stores/WkzbQMuFYuamGv3YF'
          content:
            application/json:
              schema:
                title: CreateKeyValueStoreResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    title: KeyValueStore
                    required:
                      - id
                      - name
                      - createdAt
                      - modifiedAt
                      - accessedAt
                    type: object
                    properties:
                      id:
                        type: string
                        example: WkzbQMuFYuamGv3YF
                      name:
                        type: string
                        example: d7b9MDYsbtX5L7XAj
                      userId:
                        type: string
                        nullable: true
                        example: BPWDBd7Z9c746JAnF
                      username:
                        type: string
                        nullable: true
                        example: janedoe
                      createdAt:
                        type: string
                        example: '2019-12-12T07:34:14.202Z'
                      modifiedAt:
                        type: string
                        example: '2019-12-13T08:36:13.202Z'
                      accessedAt:
                        type: string
                        example: '2019-12-14T08:36:13.202Z'
                      actId:
                        type: string
                        nullable: true
                        example: null
                      actRunId:
                        type: string
                        nullable: true
                        example: null
                      stats:
                        title: KeyValueStoreStats
                        required:
                          - readCount
                          - writeCount
                          - deleteCount
                          - listCount
                          - s3StorageBytes
                        type: object
                        properties:
                          readCount:
                            type: number
                            example: 9
                          writeCount:
                            type: number
                            example: 3
                          deleteCount:
                            type: number
                            example: 6
                          listCount:
                            type: number
                            example: 2
                          s3StorageBytes:
                            type: number
                            example: 18
              example:
                data:
                  id: WkzbQMuFYuamGv3YF
                  name: d7b9MDYsbtX5L7XAj
                  userId: wRsJZtadYvn4mBZmm
                  createdAt: '2019-12-12T07:34:14.202Z'
                  modifiedAt: '2019-12-13T08:36:13.202Z'
                  accessedAt: '2019-12-14T08:36:13.202Z'
                  actId: null
                  actRunId: null
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/key-value-stores/store-collection/create-key-value-store'
      x-js-parent: KeyValueStoreCollectionClient
      x-js-name: getOrCreate
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/KeyValueStoreCollectionClient#getOrCreate'
      x-py-parent: KeyValueStoreCollectionClientAsync
      x-py-name: get_or_create
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/KeyValueStoreCollectionClientAsync#get_or_create'
  '/v2/key-value-stores/{storeId}':
    get:
      tags:
        - Key-value stores/Store object
      summary: Get store
      description: |
        Gets an object that contains all the details about a specific key-value
        store.
      operationId: keyValueStore_get
      security:
        - apiKeyStoreId: []
        - httpBearerStoreId: []
      parameters:
        - name: storeId
          in: path
          description: Key-value store ID or `username~store-name`.
          required: true
          style: simple
          schema:
            type: string
            example: WkzbQMuFYuamGv3YF
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: GetStoreResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/paths/~1v2~1key-value-stores/post/responses/201/content/application~1json/schema/properties/data'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/key-value-stores/store-object/get-store'
      x-js-parent: KeyValueStoreClient
      x-js-name: get
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/KeyValueStoreClient#get'
      x-py-parent: KeyValueStoreClientAsync
      x-py-name: get
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/KeyValueStoreClientAsync#get'
    put:
      tags:
        - Key-value stores/Store object
      summary: Update store
      description: |
        Updates a key-value store's name using a value specified by a JSON object
        passed in the PUT payload.

        The response is the updated key-value store object, as returned by the [Get
        store](#/reference/key-value-stores/store-object/get-store) API endpoint.
      operationId: keyValueStore_put
      parameters:
        - name: storeId
          in: path
          description: Key-value store ID or `username~store-name`.
          required: true
          style: simple
          schema:
            type: string
            example: WkzbQMuFYuamGv3YF
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              title: UpdateStoreRequest
              required:
                - name
              type: object
              properties:
                name:
                  type: string
              example:
                name: new-store-name
            example:
              name: new-store-name
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: UpdateStoreResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/paths/~1v2~1key-value-stores/post/responses/201/content/application~1json/schema/properties/data'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/key-value-stores/store-object/update-store'
      x-js-parent: KeyValueStoreClient
      x-js-name: update
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/KeyValueStoreClient#update'
      x-py-parent: KeyValueStoreClientAsync
      x-py-name: update
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/KeyValueStoreClientAsync#update'
    delete:
      tags:
        - Key-value stores/Store object
      summary: Delete store
      description: Deletes a key-value store.
      operationId: keyValueStore_delete
      parameters:
        - name: storeId
          in: path
          description: Key-value store ID or `username~store-name`.
          required: true
          style: simple
          schema:
            type: string
            example: WkzbQMuFYuamGv3YF
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/key-value-stores/store-object/delete-store'
      x-js-parent: KeyValueStoreClient
      x-js-name: delete
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/KeyValueStoreClient#delete'
  '/v2/key-value-stores/{storeId}/keys':
    get:
      tags:
        - Key-value stores/Key collection
      summary: Get list of keys
      description: |
        Returns a list of objects describing keys of a given key-value store, as
        well as some information about the values (e.g. size).

        This endpoint is paginated using `exclusiveStartKey` and `limit` parameters
        - see [Pagination](#/introduction/response-structure) for more details.
      operationId: keyValueStore_keys_get
      security:
        - apiKeyStoreId: []
        - httpBearerStoreId: []
      parameters:
        - name: storeId
          in: path
          description: Key-value store ID or `username~store-name`.
          required: true
          style: simple
          schema:
            type: string
            example: WkzbQMuFYuamGv3YF
        - name: exclusiveStartKey
          in: query
          description: All keys up to this one (including) are skipped from the result.
          style: form
          explode: true
          schema:
            type: string
            example: Ihnsp8YrvJ8102Kj
        - name: limit
          in: query
          description: Number of keys to be returned. Maximum value is `1000`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 100
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: GetListOfKeysResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    title: ListOfKeysResponse
                    required:
                      - items
                      - count
                      - limit
                      - isTruncated
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          type: object
                          title: items
                          required:
                            - key
                            - size
                          properties:
                            key:
                              type: string
                              example: second-key
                            size:
                              type: number
                              example: 36
                        description: ''
                      count:
                        type: number
                        example: 2
                      limit:
                        type: number
                        example: 2
                      exclusiveStartKey:
                        type: string
                        example: some-key
                      isTruncated:
                        type: boolean
                        example: true
                      nextExclusiveStartKey:
                        type: string
                        example: third-key
              example:
                data:
                  items:
                    - key: second-key
                      size: 36
                    - key: third-key
                      size: 128
                  count: 2
                  limit: 2
                  exclusiveStartKey: some-key
                  isTruncated: true
                  nextExclusiveStartKey: third-key
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/key-value-stores/key-collection/get-list-of-keys'
      x-js-parent: KeyValueStoreClient
      x-js-name: listKeys
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/KeyValueStoreClient#listKeys'
      x-py-parent: KeyValueStoreClientAsync
      x-py-name: list_keys
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/KeyValueStoreClientAsync#list_keys'
  '/v2/key-value-stores/{storeId}/records/{recordKey}':
    get:
      tags:
        - Key-value stores/Record
      summary: Get record
      description: |
        Gets a value stored in the key-value store under a specific key.

        The response body has the same `Content-Encoding` header as it was set in
        [Put record](#/reference/key-value-stores/key-collection/put-record).

        If the request does not define the `Accept-Encoding` HTTP header with the
        right encoding, the record will be decompressed.

        Most HTTP clients support decompression by default. After using the HTTP
        client with decompression support, the `Accept-Encoding` header is set by
        the client and body is decompressed automatically.
      operationId: keyValueStore_record_get
      security:
        - apiKeyStoreId: []
        - httpBearerStoreId: []
      parameters:
        - name: storeId
          in: path
          description: Key-value store ID or `username~store-name`.
          required: true
          style: simple
          schema:
            type: string
            example: WkzbQMuFYuamGv3YF
        - name: recordKey
          in: path
          description: Key of the record.
          required: true
          style: simple
          schema:
            type: string
            example: some key
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - title: GetRecordResponse
                    required:
                      - foo
                    type: object
                    properties:
                      foo:
                        type: string
                    example:
                      foo: bar
                  - example:
                      foo: bar
              example:
                foo: bar
        '302':
          description: ''
          headers:
            Location:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 'https://apifier-key-value-store-prod.s3.amazonaws.com/tqx6jeMia43gYY6eE/INPUT?AWSAccessKeyId=NKDOUN&Expires=1502720992&Signature=DKLVPI4lDDKC'
          content: {}
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/key-value-stores/record/get-record'
      x-js-parent: KeyValueStoreClient
      x-js-name: recordExists
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/KeyValueStoreClient#recordExists'
      x-py-parent: KeyValueStoreClientAsync
      x-py-name: stream_record
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/KeyValueStoreClientAsync#stream_record'
    put:
      tags:
        - Key-value stores/Record
      summary: Put record
      description: |
        Stores a value under a specific key to the key-value store.

        The value is passed as the PUT payload and it is stored with a MIME content
        type defined by the `Content-Type` header and with encoding defined by the
        `Content-Encoding` header.

        To save bandwidth, storage, and speed up your upload, send the request
        payload compressed with Gzip compression and add the `Content-Encoding: gzip`
        header. It is possible to set up another compression type with `Content-Encoding`
        request header.

        Below is a list of supported `Content-Encoding` types.

        * Gzip compression: `Content-Encoding: gzip`
        * Deflate compression: `Content-Encoding: deflate`
        * Brotli compression: `Content-Encoding: br`
      operationId: keyValueStore_record_put
      parameters:
        - name: storeId
          in: path
          description: Key-value store ID or `username~store-name`.
          required: true
          style: simple
          schema:
            type: string
            example: WkzbQMuFYuamGv3YF
        - name: recordKey
          in: path
          description: Key of the record.
          required: true
          style: simple
          schema:
            type: string
            example: some key
        - name: Content-Encoding
          in: header
          description: ''
          required: true
          style: simple
          schema:
            enum:
              - gzip
            type: string
            example: gzip
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              title: PutRecordRequest
              type: object
              properties:
                foo:
                  type: string
                  example: bar
            example:
              foo: bar
        required: true
      responses:
        '201':
          description: ''
          headers:
            Location:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 'https://api.apify.com/v2/key-value-stores/WkzbQMuFYuamGv3YF/records/some-key'
          content:
            application/json:
              schema:
                type: object
              example: {}
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/key-value-stores/record/put-record'
      x-js-parent: KeyValueStoreClient
      x-js-name: setRecord
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/KeyValueStoreClient#setRecord'
      x-py-parent: KeyValueStoreClientAsync
      x-py-name: set_record
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/KeyValueStoreClientAsync#set_record'
    delete:
      tags:
        - Key-value stores/Record
      summary: Delete record
      description: Removes a record specified by a key from the key-value store.
      operationId: keyValueStore_record_delete
      parameters:
        - name: storeId
          in: path
          description: Key-value store ID or `username~store-name`.
          required: true
          style: simple
          schema:
            type: string
            example: WkzbQMuFYuamGv3YF
        - name: recordKey
          in: path
          description: Key of the record.
          required: true
          style: simple
          schema:
            type: string
            example: some key
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/key-value-stores/record/delete-record'
      x-js-parent: KeyValueStoreClient
      x-js-name: deleteRecord
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/KeyValueStoreClient#deleteRecord'
      x-py-parent: KeyValueStoreClientAsync
      x-py-name: delete_record
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/KeyValueStoreClientAsync#delete_record'
  /v2/datasets:
    get:
      tags:
        - Datasets/Dataset collection
      summary: Get list of datasets
      description: |
        Lists all of a user's datasets. The response is a JSON array of objects,
        where each object contains basic information about one dataset.
        By default, the objects are sorted by the `createdAt` field in ascending
        order, therefore you can use pagination to incrementally fetch all datasets while new
        ones are still being created. To sort them in descending order, use `desc=1`
        parameter. The endpoint supports pagination using `limit` and `offset`
        parameters and it will not return more than 1000 array elements.
      operationId: datasets_get
      parameters:
        - name: offset
          in: query
          description: |
            Number of array elements that should be skipped at the start. The default value is `0`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 10
        - name: limit
          in: query
          description: |
            Maximum number of array elements to return. The default value as well as the maximum is `1000`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 99
        - name: desc
          in: query
          description: |
            If `true` or `1` then the objects are sorted by the `startedAt` field in
            descending order. By default, they are sorted in ascending order.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: unnamed
          in: query
          description: |
            If `true` or `1` then all the datasets are returned. By default only named datasets are returned.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: GetListOfDatasetsResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    allOf:
                      - $ref: '#/paths/~1v2~1actor-tasks/get/responses/200/content/application~1json/schema/properties/data/allOf/0'
                      - type: object
                        required:
                          - items
                        properties:
                          items:
                            type: array
                            items:
                              title: DatasetListItem
                              required:
                                - id
                                - name
                                - userId
                                - createdAt
                                - modifiedAt
                                - accessedAt
                                - itemCount
                                - cleanItemCount
                              type: object
                              properties:
                                id:
                                  type: string
                                  example: WkzbQMuFYuamGv3YF
                                name:
                                  type: string
                                  example: d7b9MDYsbtX5L7XAj
                                userId:
                                  type: string
                                  example: tbXmWu7GCxnyYtSiL
                                createdAt:
                                  type: string
                                  example: '2019-12-12T07:34:14.202Z'
                                modifiedAt:
                                  type: string
                                  example: '2019-12-13T08:36:13.202Z'
                                accessedAt:
                                  type: string
                                  example: '2019-12-14T08:36:13.202Z'
                                itemCount:
                                  type: number
                                  example: 7
                                cleanItemCount:
                                  type: number
                                  example: 5
                                actId:
                                  type: string
                                  nullable: true
                                actRunId:
                                  type: string
                                  nullable: true
                            description: ''
              example:
                data:
                  total: 2
                  offset: 0
                  limit: 1000
                  desc: false
                  count: 2
                  items:
                    - id: wkzbqmufyuamgv3yf
                      name: d7b9mdysbtx5l7xaj
                      userId: tbXmWu7GCxnyYtSiL
                      createdAt: '2019-12-12T07:34:14.202Z'
                      modifiedAt: '2019-12-13T08:36:13.202Z'
                      accessedAt: '2019-12-14T08:36:13.202Z'
                      itemCount: 7
                      cleanItemCount: 5
                      actId: null
                      actRunId: null
                    - id: YiKoxjkaS9gjGTqhF
                      name: eshop-items
                      userId: tbXmWu7GCxnyYtSiL
                      createdAt: '2019-12-12T07:34:14.202Z'
                      modifiedAt: '2019-12-13T08:36:13.202Z'
                      accessedAt: '2019-12-14T08:36:13.202Z'
                      itemCount: 2
                      cleanItemCount: 2
                      actId: null
                      actRunId: null
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/datasets/dataset-collection/get-list-of-datasets'
      x-js-parent: DatasetCollectionClient
      x-js-name: list
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/DatasetCollectionClient#list'
      x-py-parent: DatasetCollectionClientAsync
      x-py-name: list
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/DatasetCollectionClientAsync#list'
    post:
      tags:
        - Datasets/Dataset collection
      summary: Create dataset
      description: |
        Creates a dataset and returns its object.
        Keep in mind that data stored under unnamed dataset follows [data retention period](https://docs.apify.com/platform/storage#data-retention).
        It creates a dataset with the given name if the parameter name is used.
        If a dataset with the given name already exists then returns its object.
      operationId: datasets_post
      parameters:
        - name: name
          in: query
          description: Custom unique name to easily identify the dataset in the future.
          style: form
          explode: true
          schema:
            type: string
            example: eshop-items
      responses:
        '201':
          description: ''
          headers:
            Location:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 'https://api.apify.com/v2/datasets/WkzbQMuFYuamGv3YF'
          content:
            application/json:
              schema:
                title: DatasetResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    title: Dataset
                    required:
                      - id
                      - name
                      - userId
                      - createdAt
                      - modifiedAt
                      - accessedAt
                      - itemCount
                      - cleanItemCount
                    type: object
                    properties:
                      id:
                        type: string
                        example: WkzbQMuFYuamGv3YF
                      name:
                        type: string
                        example: d7b9MDYsbtX5L7XAj
                      userId:
                        type: string
                        example: wRsJZtadYvn4mBZmm
                      createdAt:
                        type: string
                        example: '2019-12-12T07:34:14.202Z'
                      modifiedAt:
                        type: string
                        example: '2019-12-13T08:36:13.202Z'
                      accessedAt:
                        type: string
                        example: '2019-12-14T08:36:13.202Z'
                      itemCount:
                        type: number
                        example: 7
                      cleanItemCount:
                        type: number
                        example: 5
                      actId:
                        type: string
                        nullable: true
                      actRunId:
                        type: string
                        nullable: true
                      fields:
                        type: array
                        items:
                          type: string
                        description: ''
                        nullable: true
              example:
                data:
                  id: WkzbQMuFYuamGv3YF
                  name: d7b9MDYsbtX5L7XAj
                  userId: wRsJZtadYvn4mBZmm
                  createdAt: '2019-12-12T07:34:14.202Z'
                  modifiedAt: '2019-12-13T08:36:13.202Z'
                  accessedAt: '2019-12-14T08:36:13.202Z'
                  itemCount: 7
                  cleanItemCount: 5
                  actId: null
                  actRunId: null
                  fields: []
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/datasets/dataset-collection/create-dataset'
      x-js-parent: DatasetCollectionClient
      x-js-name: getOrCreate
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/DatasetCollectionClient#getOrCreate'
      x-py-parent: DatasetCollectionClientAsync
      x-py-name: get_or_create
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/DatasetCollectionClientAsync#get_or_create'
  '/v2/datasets/{datasetId}':
    get:
      tags:
        - Datasets/Dataset
      summary: Get dataset
      description: |
        Returns dataset object for given dataset ID.


        **NOTE:** Keep in mind that attributes `itemCount` and `cleanItemCount` are not propagated right away after data are pushed into a dataset.
        There is a short period (up to 5 seconds) during which these counters may not match with exact counts in dataset items.
      operationId: dataset_get
      parameters:
        - name: datasetId
          in: path
          description: Dataset ID or `username~dataset-name`.
          required: true
          style: simple
          schema:
            type: string
            example: WkzbQMuFYuamGv3YF
        - name: token
          in: query
          description: |
            API authentication token. It is required only when using the `username~dataset-name` format for `datasetId`.
          style: form
          explode: true
          schema:
            type: string
            example: soSkq9ekdmfOslopH
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1datasets/post/responses/201/content/application~1json/schema'
              example:
                data:
                  id: WkzbQMuFYuamGv3YF
                  name: d7b9MDYsbtX5L7XAj
                  userId: wRsJZtadYvn4mBZmm
                  createdAt: '2019-12-12T07:34:14.202Z'
                  modifiedAt: '2019-12-13T08:36:13.202Z'
                  accessedAt: '2019-12-14T08:36:13.202Z'
                  itemCount: 7
                  cleanItemCount: 5
                  actId: null
                  actRunId: null
                  fields: []
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/datasets/dataset/get-dataset'
      x-js-parent: DatasetClient
      x-js-name: get
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/DatasetClient#get'
      x-py-parent: DatasetClientAsync
      x-py-name: get
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/DatasetClientAsync#get'
    put:
      tags:
        - Datasets/Dataset
      summary: Update dataset
      description: |
        Updates a dataset's name using a value specified by a JSON object passed in the PUT payload.
        The response is the updated dataset object, as returned by the [Get dataset](#/reference/datasets/dataset-collection/get-dataset) API endpoint.
      operationId: dataset_put
      parameters:
        - name: datasetId
          in: path
          description: Dataset ID or `username~dataset-name`.
          required: true
          style: simple
          schema:
            type: string
            example: WkzbQMuFYuamGv3YF
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              title: UpdateDatasetRequest
              required:
                - name
              type: object
              properties:
                name:
                  type: string
              example:
                name: new-dataset-name
            example:
              name: new-dataset-name
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1datasets/post/responses/201/content/application~1json/schema'
              example:
                data:
                  id: WkzbQMuFYuamGv3YF
                  name: d7b9MDYsbtX5L7XAj
                  userId: wRsJZtadYvn4mBZmm
                  createdAt: '2019-12-12T07:34:14.202Z'
                  modifiedAt: '2019-12-13T08:36:13.202Z'
                  accessedAt: '2019-12-14T08:36:13.202Z'
                  itemCount: 7
                  cleanItemCount: 5
                  actId: null
                  actRunId: null
                  fields: []
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/datasets/dataset/update-dataset'
      x-js-parent: DatasetClient
      x-js-name: update
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/DatasetClient#update'
      x-py-parent: DatasetClientAsync
      x-py-name: update
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/DatasetClientAsync#update'
    delete:
      tags:
        - Datasets/Dataset
      summary: Delete dataset
      description: Deletes a specific dataset.
      operationId: dataset_delete
      parameters:
        - name: datasetId
          in: path
          description: Dataset ID or `username~dataset-name`.
          required: true
          style: simple
          schema:
            type: string
            example: WkzbQMuFYuamGv3YF
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/datasets/dataset/delete-dataset'
      x-js-parent: DatasetClient
      x-js-name: delete
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/DatasetClient#delete'
  '/v2/datasets/{datasetId}/items':
    get:
      tags:
        - Datasets/Item collection
      summary: Get items
      description: |
        Returns data stored in the dataset in a desired format.


        ### Response format


        The format of the response depends on <code>format</code> query parameter.


        The <code>format</code> parameter can have one of the following values:

        <code>json</code>, <code>jsonl</code>, <code>xml</code>, <code>html</code>,
        <code>csv</code>, <code>xlsx</code> and <code>rss</code>.


        The following table describes how each format is treated.


        <table>
          <tr>
            <th>Format</th>
            <th>Items</th>
          </tr>
          <tr>
            <td><code>json</code></td>
            <td rowspan="3">The response is a JSON, JSONL or XML array of raw item objects.</td>
          </tr>
          <tr>
            <td><code>jsonl</code></td>
          </tr>
          <tr>
            <td><code>xml</code></td>
          </tr>
          <tr>
            <td><code>html</code></td>
            <td rowspan="3">The response is a HTML, CSV or XLSX table, where columns correspond to the
            properties of the item and rows correspond to each dataset item.</td>
          </tr>
          <tr>
            <td><code>csv</code></td>
          </tr>
          <tr>
            <td><code>xlsx</code></td>
          </tr>
          <tr>
            <td><code>rss</code></td>
            <td colspan="2">The response is a RSS file. Each item is displayed as child elements of one
            <code>&lt;item&gt;</code>.</td>
          </tr>
        </table>

        Note that CSV, XLSX and HTML tables are limited to 500 columns and the column names cannot be longer than 200 characters.
        JSON, XML and RSS formats do not have such restrictions.


        ### Hidden fields


        The top-level fields starting with the `#` character are considered hidden.
        These are useful to store debugging information and can be omitted from the output by providing the `skipHidden=1` or `clean=1` query parameters.
        For example, if you store the following object to the dataset:


        ```

        {
            productName: "iPhone Xs",
            description: "Welcome to the big screens."
            #debug: {
                url: "https://www.apple.com/lae/iphone-xs/",
                crawledAt: "2019-01-21T16:06:03.683Z"
            }
        }

        ```


        The `#debug` field will be considered as hidden and can be omitted from the
        results. This is useful to

        provide nice cleaned data to end users, while keeping debugging info
        available if needed. The Dataset object

        returned by the API contains the number of such clean items in the`dataset.cleanItemCount` property.


        ### XML format extension


        When exporting results to XML or RSS formats, the names of object properties become XML tags and the corresponding values become tag's children. For example, the following JavaScript object:

        ```

        {
            name: "Paul Newman",
            address: [
                { type: "home", street: "21st", city: "Chicago" },
                { type: "office", street: null, city: null }
            ]
        }

        ```


        will be transformed to the following XML snippet:


        ```

        <name>Paul Newman</name>

        <address>
          <type>home</type>
          <street>21st</street>
          <city>Chicago</city>
        </address>
        <address>
          <type>office</type>
          <street/>
          <city/>
        </address>

        ```

        If the JavaScript object contains a property named `@` then its sub-properties are exported as attributes of the parent XML
        element.
        If the parent XML element does not have any child elements then its value is taken from a JavaScript object property named `#`.

        For example, the following JavaScript object:


        ```

        {
          "address": [{
            "@": {
              "type": "home"
            },
            "street": "21st",
            "city": "Chicago"
          },
          {
            "@": {
              "type": "office"
            },
            "#": 'unknown'
          }]
        }

        ```


        will be transformed to the following XML snippet:


        ```

        <address type="home">
          <street>21st</street>
          <city>Chicago</city>
        </address>

        <address type="office">unknown</address>

        ```


        This feature is also useful to customize your RSS feeds generated for various websites.


        By default the whole result is wrapped in a `<items>` element and each page object is wrapped in a `<item>` element.

        You can change this using <code>xmlRoot</code> and <code>xmlRow</code> url parameters.


        ### Pagination


        The generated response supports [pagination](#/introduction/pagination).
        The pagination is always performed with the granularity of a single item, regardless whether <code>unwind</code> parameter was provided.
        By default, the **Items** in the response are sorted by the time they were stored to the database, therefore you can use pagination to incrementally fetch the items as they are being added.

        The maximum number of items that will be returned in a single API call is limited to 250,000.

        <!-- GET_ITEMS_LIMIT -->

        If you specify `desc=1` query parameter, the results are returned in the reverse order than they were stored (i.e. from newest to oldest items).
        Note that only the order of **Items** is reversed, but not the order of the `unwind` array elements.
      operationId: dataset_items_get
      security:
        - apiKeyStoreId: []
        - httpBearerStoreId: []
      parameters:
        - name: datasetId
          in: path
          description: Dataset ID or `username~dataset-name`.
          required: true
          style: simple
          schema:
            type: string
            example: WkzbQMuFYuamGv3YF
        - name: format
          in: query
          description: |
            Format of the results, possible values are: `json`, `jsonl`, `csv`, `html`, `xlsx`, `xml` and `rss`. The default value is `json`.
          style: form
          explode: true
          schema:
            type: string
            example: json
        - name: clean
          in: query
          description: |
            If `true` or `1` then the API endpoint returns only non-empty items and skips hidden fields (i.e. fields starting with the # character).
            The `clean` parameter is just a shortcut for `skipHidden=true` and `skipEmpty=true` parameters.
            Note that since some objects might be skipped from the output, that the result might contain less items than the `limit` value.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: offset
          in: query
          description: |
            Number of items that should be skipped at the start. The default value is `0`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 0
        - name: limit
          in: query
          description: Maximum number of items to return. By default there is no limit.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 99
        - name: fields
          in: query
          description: |
            A comma-separated list of fields which should be picked from the items, only these fields will remain in the resulting record objects.
            Note that the fields in the outputted items are sorted the same way as they are specified in the `fields` query parameter.
            You can use this feature to effectively fix the output format.
          style: form
          explode: true
          schema:
            type: string
            example: 'myValue,myOtherValue'
        - name: omit
          in: query
          description: A comma-separated list of fields which should be omitted from the items.
          style: form
          explode: true
          schema:
            type: string
            example: 'myValue,myOtherValue'
        - name: unwind
          in: query
          description: |
            A comma-separated list of fields which should be unwound, in order which they should be processed. Each field should be either an array or an object.
            If the field is an array then every element of the array will become a separate record and merged with parent object.
            If the unwound field is an object then it is merged with the parent object.
            If the unwound field is missing or its value is neither an array nor an object and therefore cannot be merged with a parent object then the item gets preserved as it is.
            Note that the unwound items ignore the `desc` parameter.
          style: form
          explode: true
          schema:
            type: string
            example: 'myValue,myOtherValue'
        - name: flatten
          in: query
          description: |
            A comma-separated list of fields which should transform nested objects into flat structures.

            For example, with `flatten="foo"` the object `{"foo":{"bar": "hello"}}` is turned into `{"foo.bar": "hello"}`.

            The original object with properties is replaced with the flattened object.
          style: form
          explode: true
          schema:
            type: string
            example: myValue
        - name: desc
          in: query
          description: |
            By default, results are returned in the same order as they were stored.
            To reverse the order, set this parameter to `true` or `1`.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: attachment
          in: query
          description: |
            If `true` or `1` then the response will define the `Content-Disposition:
            attachment` header, forcing a web browser to download the file rather
            than to display it. By default this header is not present.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: delimiter
          in: query
          description: |
            A delimiter character for CSV files, only used if `format=csv`. You
            might need to URL-encode the character (e.g. use `%09` for tab or `%3B`
            for semicolon). The default delimiter is a simple comma (`,`).
          style: form
          explode: true
          schema:
            type: string
            example: ;
        - name: bom
          in: query
          description: |
            All text responses are encoded in UTF-8 encoding. By default, the
            `format=csv` files are prefixed with the UTF-8 Byte Order Mark (BOM), while `json`, `jsonl`, `xml`, `html` and `rss` files are not.

            If you want to override this default behavior, specify `bom=1` query parameter to include the BOM or `bom=0` to skip it.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: xmlRoot
          in: query
          description: |
            Overrides default root element name of `xml` output. By default the root element is `items`.
          style: form
          explode: true
          schema:
            type: string
            example: items
        - name: xmlRow
          in: query
          description: |
            Overrides default element name that wraps each page or page function result object in `xml` output. By default the element name is `item`.
          style: form
          explode: true
          schema:
            type: string
            example: item
        - name: skipHeaderRow
          in: query
          description: If `true` or `1` then header row in the `csv` format is skipped.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: skipHidden
          in: query
          description: 'If `true` or `1` then hidden fields are skipped from the output, i.e. fields starting with the `#` character.'
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: skipEmpty
          in: query
          description: |
            If `true` or `1` then empty items are skipped from the output.

            Note that if used, the results might contain less items than the limit value.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: simplified
          in: query
          description: |
            If `true` or `1` then, the endpoint applies the `fields=url,pageFunctionResult,errorInfo`
            and `unwind=pageFunctionResult` query parameters. This feature is used to emulate simplified results provided by the
            legacy Apify Crawler product and it's not recommended to use it in new integrations.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: skipFailedPages
          in: query
          description: |
            If `true` or `1` then, the all the items with errorInfo property will be skipped from the output.

            This feature is here to emulate functionality of API version 1 used for the legacy Apify Crawler product and it's not recommended to use it in new integrations.
          style: form
          explode: true
          schema:
            type: boolean
            example: false
      responses:
        '200':
          description: ''
          headers:
            X-Apify-Pagination-Offset:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '0'
            X-Apify-Pagination-Limit:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '100'
            X-Apify-Pagination-Count:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '100'
            X-Apify-Pagination-Total:
              content:
                text/plain:
                  schema:
                    type: string
                  example: '10204'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  - foo: bar
                  - foo2: bar2
            application/jsonl:
              schema:
                type: string
              example: '{"foo":"bar"}\n{"foo2":"bar2"}\n'
            text/csv:
              schema:
                type: string
              example: 'foo,bar\nfoo2,bar2\n'
            text/html:
              schema:
                type: string
              example: <table><tr><th>foo</th><th>bar</th></tr><tr><td>foo</td><td>bar</td></tr><tr><td>foo2</td><td>bar2</td></tr></table>
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
            application/rss+xml:
              schema:
                type: string
              example: <rss><channel><item><foo>bar</foo></item><item><foo2>bar2</foo2></item></channel></rss>
            application/xml:
              schema:
                type: string
              example: <items><item><foo>bar</foo></item><item><foo2>bar2</foo2></item></items>
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/datasets/item-collection/get-items'
      x-js-parent: DatasetClient
      x-js-name: listItems
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/DatasetClient#listItems'
      x-py-parent: DatasetClientAsync
      x-py-name: stream_items
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/DatasetClientAsync#stream_items'
    post:
      tags:
        - Datasets/Item collection
      summary: Put items
      description: |
        Appends an item or an array of items to the end of the dataset.

        The POST payload is a JSON object or a JSON array of objects to save into the dataset.


        **IMPORTANT:** The limit of request payload size for the dataset is 5 MB. If the array exceeds the size, you'll need to split it into a number of smaller arrays.
      operationId: dataset_items_post
      parameters:
        - name: datasetId
          in: path
          description: Dataset ID or `username~dataset-name`.
          required: true
          style: simple
          schema:
            type: string
            example: WkzbQMuFYuamGv3YF
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: array
              items:
                title: PutItemsRequest
                required:
                  - foo
                type: object
                properties:
                  foo:
                    type: string
                example:
                  foo: bar
              description: ''
              example:
                - foo: bar
                - foo: hotel
                - foo: restaurant
            example:
              - foo: bar
              - foo: hotel
              - foo: restaurant
        required: true
      responses:
        '201':
          description: ''
          headers:
            Location:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 'https://api.apify.com/v2/datasets/WkzbQMuFYuamGv3YF/items'
          content:
            application/json:
              schema:
                type: object
                example: {}
              example: {}
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/datasets/item-collection/put-items'
      x-js-parent: DatasetClient
      x-js-name: pushItems
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/DatasetClient#pushItems'
      x-py-parent: DatasetClientAsync
      x-py-name: push_items
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/DatasetClientAsync#push_items'
  /v2/request-queues:
    get:
      tags:
        - Request queues/Queue collection
      summary: Get list of request queues
      description: |
        Lists all of a user's request queues. The response is a JSON array of
        objects, where each object

        contains basic information about one queue.


        By default, the objects are sorted by the `createdAt` field in ascending
        order,

        therefore you can use pagination to incrementally fetch all queues while new

        ones are still being created. To sort them in descending order, use `desc=1`

        parameter. The endpoint supports pagination using `limit` and `offset`
        parameters and it will not return more than 1000

        array elements.
      operationId: requestQueues_get
      parameters:
        - name: offset
          in: query
          description: |
            Number of array elements that should be skipped at the start. The
            default value is `0`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 10
        - name: limit
          in: query
          description: |
            Maximum number of array elements to return. The default value as well as
            the maximum is `1000`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 99
        - name: desc
          in: query
          description: |
            If `true` or `1` then the objects are sorted by the `startedAt` field in
            descending order. By default, they are sorted in ascending order.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
        - name: unnamed
          in: query
          description: |
            If `true` or `1` then all the queues are returned. By default only named
            queues are returned.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: GetListOfRequestQueuesResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    required:
                      - total
                      - offset
                      - limit
                      - desc
                      - count
                      - items
                    type: object
                    properties:
                      total:
                        type: number
                        example: 2
                      offset:
                        type: number
                        example: 0
                      limit:
                        type: number
                        example: 1000
                      desc:
                        type: boolean
                        example: false
                      count:
                        type: number
                        example: 2
                      items:
                        type: array
                        items:
                          title: RequestQueueShort
                          required:
                            - id
                            - name
                            - userId
                            - username
                            - createdAt
                            - modifiedAt
                            - accessedAt
                            - expireAt
                            - totalRequestCount
                            - handledRequestCount
                            - pendingRequestCount
                            - hadMultipleClients
                          type: object
                          properties:
                            id:
                              type: string
                              example: WkzbQMuFYuamGv3YF
                            name:
                              type: string
                              example: some-name
                            userId:
                              type: string
                              example: wRsJZtadYvn4mBZmm
                            username:
                              type: string
                              example: janedoe
                            createdAt:
                              type: string
                              example: '2019-12-12T07:34:14.202Z'
                            modifiedAt:
                              type: string
                              example: '2019-12-13T08:36:13.202Z'
                            accessedAt:
                              type: string
                              example: '2019-12-14T08:36:13.202Z'
                            expireAt:
                              type: string
                              example: '2019-06-02T17:15:06.751Z'
                            totalRequestCount:
                              type: number
                              example: 100
                            handledRequestCount:
                              type: number
                              example: 50
                            pendingRequestCount:
                              type: number
                              example: 50
                            actId:
                              type: string
                              nullable: true
                            actRunId:
                              type: string
                              nullable: true
                            hadMultipleClients:
                              type: boolean
                              example: true
                        description: ''
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/request-queues/queue-collection/get-list-of-request-queues'
      x-js-parent: RequestQueueCollectionClient
      x-js-name: list
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/RequestQueueCollectionClient#list'
      x-py-parent: RequestQueueCollectionClientAsync
      x-py-name: list
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/RequestQueueCollectionClientAsync#list'
    post:
      tags:
        - Request queues/Queue collection
      summary: Create request queue
      description: |
        Creates a request queue and returns its object.

        Keep in mind that requests stored under unnamed queue follows [data
        retention period](https://docs.apify.com/platform/storage#data-retention).


        It creates a queue of given name if the parameter name is used. If a queue
        with the given name already exists then the endpoint returns

        its object.
      operationId: requestQueues_post
      parameters:
        - name: name
          in: query
          description: Custom unique name to easily identify the queue in the future.
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: example-com
      responses:
        '201':
          description: ''
          headers:
            Location:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 'https://api.apify.com/v2/request-queues/WkzbQMuFYuamGv3YF'
          content:
            application/json:
              schema:
                allOf:
                  - title: CreateRequestQueueResponse
                    required:
                      - data
                    type: object
                    properties:
                      data:
                        title: RequestQueue
                        required:
                          - id
                          - name
                          - userId
                          - createdAt
                          - modifiedAt
                          - accessedAt
                          - totalRequestCount
                          - handledRequestCount
                          - pendingRequestCount
                          - hadMultipleClients
                        type: object
                        properties:
                          id:
                            type: string
                            example: WkzbQMuFYuamGv3YF
                          name:
                            type: string
                            example: some-name
                          userId:
                            type: string
                            example: wRsJZtadYvn4mBZmm
                          createdAt:
                            type: string
                            example: '2019-12-12T07:34:14.202Z'
                          modifiedAt:
                            type: string
                            example: '2019-12-13T08:36:13.202Z'
                          accessedAt:
                            type: string
                            example: '2019-12-14T08:36:13.202Z'
                          totalRequestCount:
                            type: number
                            example: 870
                          handledRequestCount:
                            type: number
                            example: 100
                          pendingRequestCount:
                            type: number
                            example: 670
                          hadMultipleClients:
                            type: boolean
                            example: true
                  - example:
                      data:
                        id: WkzbQMuFYuamGv3YF
                        name: some-name
                        userId: wRsJZtadYvn4mBZmm
                        createdAt: '2019-12-12T07:34:14.202Z'
                        modifiedAt: '2019-12-13T08:36:13.202Z'
                        accessedAt: '2019-12-14T08:36:13.202Z'
                        totalRequestCount: 870
                        handledRequestCount: 100
                        pendingRequestCount: 670
                        hadMultipleClients: true
              example:
                data:
                  id: WkzbQMuFYuamGv3YF
                  name: some-name
                  userId: wRsJZtadYvn4mBZmm
                  createdAt: '2019-12-12T07:34:14.202Z'
                  modifiedAt: '2019-12-13T08:36:13.202Z'
                  accessedAt: '2019-12-14T08:36:13.202Z'
                  totalRequestCount: 870
                  handledRequestCount: 100
                  pendingRequestCount: 670
                  hadMultipleClients: true
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/request-queues/queue-collection/create-request-queue'
      x-js-parent: RequestQueueCollectionClient
      x-js-name: getOrCreate
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/RequestQueueCollectionClient#getOrCreate'
      x-py-parent: RequestQueueCollectionClientAsync
      x-py-name: get_or_create
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/RequestQueueCollectionClientAsync#get_or_create'
  '/v2/request-queues/{queueId}':
    get:
      tags:
        - Request queues/Queue
      summary: Get request queue
      description: Returns queue object for given queue ID.
      operationId: requestQueue_get
      security:
        - apiKeyQueueId: []
        - httpBearerQueueId: []
      parameters:
        - name: queueId
          in: path
          description: Queue ID or `username~queue-name`.
          required: true
          style: simple
          schema:
            type: string
            example: WkzbQMuFYuamGv3YF
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - title: GetRequestQueueResponse
                    required:
                      - data
                    type: object
                    properties:
                      data:
                        allOf:
                          - $ref: '#/paths/~1v2~1request-queues/post/responses/201/content/application~1json/schema/allOf/0/properties/data'
                          - {}
                  - example:
                      data:
                        id: WkzbQMuFYuamGv3YF
                        name: some-name
                        userId: wRsJZtadYvn4mBZmm
                        createdAt: '2019-12-12T07:34:14.202Z'
                        modifiedAt: '2019-12-13T08:36:13.202Z'
                        accessedAt: '2019-12-14T08:36:13.202Z'
                        totalRequestCount: 870
                        handledRequestCount: 100
                        pendingRequestCount: 670
                        hadMultipleClients: true
              example:
                data:
                  id: WkzbQMuFYuamGv3YF
                  name: some-name
                  userId: wRsJZtadYvn4mBZmm
                  createdAt: '2019-12-12T07:34:14.202Z'
                  modifiedAt: '2019-12-13T08:36:13.202Z'
                  accessedAt: '2019-12-14T08:36:13.202Z'
                  totalRequestCount: 870
                  handledRequestCount: 100
                  pendingRequestCount: 670
                  hadMultipleClients: true
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/request-queues/queue/get-request-queue'
      x-js-parent: RequestQueueClient
      x-js-name: get
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/RequestQueueClient#get'
      x-py-parent: RequestQueueClientAsync
      x-py-name: get
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/RequestQueueClientAsync#get'
    put:
      tags:
        - Request queues/Queue
      summary: Update request queue
      description: |
        Updates a request queue's name using a value specified by a JSON object
        passed in the PUT payload.


        The response is the updated request queue object, as returned by the

        [Get request
        queue](#/reference/request-queues/queue-collection/get-request-queue) API
        endpoint.
      operationId: requestQueue_put
      parameters:
        - name: queueId
          in: path
          description: Queue ID or `username~queue-name`.
          required: true
          style: simple
          schema:
            type: string
            example: WkzbQMuFYuamGv3YF
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - title: UpdateRequestQueueRequest
                  required:
                    - name
                  type: object
                  properties:
                    name:
                      type: string
                  example:
                    name: new-request-queue-name
                - example:
                    name: new-request-queue-name
            example:
              name: new-request-queue-name
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - title: UpdateRequestQueueResponse
                    required:
                      - data
                    type: object
                    properties:
                      data:
                        allOf:
                          - $ref: '#/paths/~1v2~1request-queues/post/responses/201/content/application~1json/schema/allOf/0/properties/data'
                          - {}
                  - example:
                      data:
                        id: WkzbQMuFYuamGv3YF
                        name: some-name
                        userId: wRsJZtadYvn4mBZmm
                        createdAt: '2019-12-12T07:34:14.202Z'
                        modifiedAt: '2019-12-13T08:36:13.202Z'
                        accessedAt: '2019-12-14T08:36:13.202Z'
                        totalRequestCount: 870
                        handledRequestCount: 100
                        pendingRequestCount: 670
                        hadMultipleClients: true
              example:
                data:
                  id: WkzbQMuFYuamGv3YF
                  name: some-name
                  userId: wRsJZtadYvn4mBZmm
                  createdAt: '2019-12-12T07:34:14.202Z'
                  modifiedAt: '2019-12-13T08:36:13.202Z'
                  accessedAt: '2019-12-14T08:36:13.202Z'
                  totalRequestCount: 870
                  handledRequestCount: 100
                  pendingRequestCount: 670
                  hadMultipleClients: true
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/request-queues/queue/update-request-queue'
      x-js-parent: RequestQueueClient
      x-js-name: update
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/RequestQueueClient#update'
      x-py-parent: RequestQueueClientAsync
      x-py-name: update
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/RequestQueueClientAsync#update'
    delete:
      tags:
        - Request queues/Queue
      summary: Delete request queue
      description: Deletes given queue.
      operationId: requestQueue_delete
      parameters:
        - name: queueId
          in: path
          description: Queue ID or `username~queue-name`.
          required: true
          style: simple
          schema:
            type: string
            example: WkzbQMuFYuamGv3YF
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/request-queues/queue/delete-request-queue'
      x-js-parent: RequestQueueClient
      x-js-name: delete
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/RequestQueueClient#delete'
  '/v2/request-queues/{queueId}/requests':
    get:
      tags:
        - Request queues/Request collection
      summary: List requests
      description: |
        Returns a list of requests. This endpoint is paginated using
        exclusiveStartId and limit parameters.
      operationId: requestQueue_requests_get
      parameters:
        - name: queueId
          in: path
          description: Queue ID or `username~queue-name`.
          required: true
          style: simple
          schema:
            type: string
            example: WkzbQMuFYuamGv3YF
        - name: clientKey
          in: query
          description: |
            A unique identifier of the client accessing the request queue. It must
            be a string between 1 and 32 characters long. This identifier is used to
            determine whether the queue was accessed by multiple clients. If
            `clientKey` is not provided,

            the system considers this API call to come from a new client. For
            details, see the `hadMultipleClients` field returned by the [Get
            head](#/reference/request-queues/queue-head) operation.
          style: form
          explode: true
          schema:
            type: string
            example: client-abc
        - name: exclusiveStartId
          in: query
          description: All requests up to this one (including) are skipped from the result.
          style: form
          explode: true
          schema:
            type: string
            example: Ihnsp8YrvJ8102Kj
        - name: limit
          in: query
          description: Number of keys to be returned. Maximum value is `10000`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 100
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - title: ListRequestsResponse
                    required:
                      - data
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          items:
                            type: array
                            items:
                              $ref: '#/paths/~1v2~1request-queues~1%7BqueueId%7D~1requests~1%7BrequestId%7D/put/requestBody/content/application~1json/schema/allOf/0'
                            description: ''
                          count:
                            type: number
                            example: 2
                          limit:
                            type: number
                            example: 2
                          exclusiveStartId:
                            type: string
                            example: Ihnsp8YrvJ8102Kj
                        required:
                          - items
                          - count
                          - limit
                  - example:
                      data:
                        items:
                          - id: dnjkDMKLmdlkmlkmld
                            retryCount: 0
                            uniqueKey: 'http://example.com'
                            url: 'http://example.com'
                            method: GET
                            loadedUrl: 'http://example.com/example-1'
                            payload: null
                            noRetry: false
                            errorMessages: null
                            headers: null
                            userData:
                              label: DETAIL
                              image: 'https://picserver1.eu'
                            handledAt: '2019-06-16T10:23:31.607Z'
                          - id: dnjkDMKLmdlkmlkmld
                            retryCount: 0
                            uniqueKey: 'http://example.com'
                            url: 'http://example.com'
                            method: GET
                            loadedUrl: 'http://example.com/example-1'
                            payload: null
                            noRetry: false
                            errorMessages: null
                            headers: null
                            userData:
                              label: DETAIL
                              image: 'https://picserver1.eu'
                            handledAt: '2019-06-16T10:23:31.607Z'
                        count: 2
                        limit: 2
                        exclusiveStartId: Ihnsp8YrvJ8102Kj
              example:
                data:
                  items:
                    - id: dnjkDMKLmdlkmlkmld
                      retryCount: 0
                      uniqueKey: 'http://example.com'
                      url: 'http://example.com'
                      method: GET
                      loadedUrl: 'http://example.com/example-1'
                      payload: null
                      noRetry: false
                      errorMessages: null
                      headers: null
                      userData:
                        label: DETAIL
                        image: 'https://picserver1.eu'
                      handledAt: '2019-06-16T10:23:31.607Z'
                    - id: dnjkDMKLmdlkmlkmld
                      retryCount: 0
                      uniqueKey: 'http://example.com'
                      url: 'http://example.com'
                      method: GET
                      loadedUrl: 'http://example.com/example-1'
                      payload: null
                      noRetry: false
                      errorMessages: null
                      headers: null
                      userData:
                        label: DETAIL
                        image: 'https://picserver1.eu'
                      handledAt: '2019-06-16T10:23:31.607Z'
                  count: 2
                  limit: 2
                  exclusiveStartId: Ihnsp8YrvJ8102Kj
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/request-queues/request-collection/list-requests'
      x-js-parent: RequestQueueClient
      x-js-name: paginateRequests
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/RequestQueueClient#paginateRequests'
      x-py-parent: RequestQueueClientAsync
      x-py-name: list_requests
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/RequestQueueClientAsync#list_requests'
    post:
      tags:
        - Request queues/Request collection
      summary: Add request
      description: |
        Adds request to the queue. Response contains ID of the request and info if
        request was already present in the queue or handled.


        If request with same `uniqueKey` was already present in the queue then
        returns an ID of existing request.
      operationId: requestQueue_requests_post
      parameters:
        - name: queueId
          in: path
          description: Queue ID or `username~queue-name`.
          required: true
          style: simple
          schema:
            type: string
            example: WkzbQMuFYuamGv3YF
        - name: clientKey
          in: query
          description: |
            A unique identifier of the client accessing the request queue. It must
            be a string between 1 and 32 characters long. This identifier is used to
            determine whether the queue was accessed by multiple clients. If
            `clientKey` is not provided,

            the system considers this API call to come from a new client. For
            details, see the `hadMultipleClients` field returned by the [Get
            head](#/reference/request-queues/queue-head) operation.
          style: form
          explode: true
          schema:
            type: string
            example: client-abc
        - name: forefront
          in: query
          description: |
            Determines if request should be added to the head of the queue or to the
            end. Default value is `false` (end of queue).
          style: form
          explode: true
          schema:
            type: string
            example: 'false'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/paths/~1v2~1request-queues~1%7BqueueId%7D~1requests~1batch/post/requestBody/content/application~1json/schema/items'
                - example:
                    uniqueKey: 'http://example.com'
                    url: 'http://example.com'
                    method: GET
            example:
              uniqueKey: 'http://example.com'
              url: 'http://example.com'
              method: GET
        required: true
      responses:
        '201':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - title: AddRequestResponse
                    required:
                      - data
                    type: object
                    properties:
                      data:
                        allOf:
                          - title: RequestOperationInfo
                            required:
                              - requestId
                              - wasAlreadyPresent
                              - wasAlreadyHandled
                            type: object
                            properties:
                              requestId:
                                type: string
                                example: YiKoxjkaS9gjGTqhF
                              wasAlreadyPresent:
                                type: boolean
                                example: true
                              wasAlreadyHandled:
                                type: boolean
                                example: false
                          - {}
                  - example:
                      data:
                        requestId: YiKoxjkaS9gjGTqhF
                        wasAlreadyPresent: true
                        wasAlreadyHandled: false
              example:
                data:
                  requestId: YiKoxjkaS9gjGTqhF
                  wasAlreadyPresent: true
                  wasAlreadyHandled: false
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/request-queues/request-collection/add-request'
      x-js-parent: RequestQueueClient
      x-js-name: addRequest
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/RequestQueueClient#addRequest'
      x-py-parent: RequestQueueClientAsync
      x-py-name: add_request
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/RequestQueueClientAsync#add_request'
  '/v2/request-queues/{queueId}/requests/{requestId}':
    get:
      tags:
        - Request queues/Queue
      summary: Get request
      description: Returns request from queue.
      operationId: requestQueue_request_get
      security:
        - apiKeyQueueId: []
        - httpBearerQueueId: []
      parameters:
        - name: queueId
          in: path
          description: Queue ID or `username~queue-name`.
          required: true
          style: simple
          schema:
            type: string
            example: WkzbQMuFYuamGv3YF
        - name: requestId
          in: path
          description: Request ID.
          required: true
          style: simple
          schema:
            type: string
            example: xpsmkDlspokDSmklS
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - title: GetRequestResponse
                    required:
                      - data
                    type: object
                    properties:
                      data:
                        allOf:
                          - $ref: '#/paths/~1v2~1request-queues~1%7BqueueId%7D~1requests~1%7BrequestId%7D/put/requestBody/content/application~1json/schema/allOf/0'
                          - {}
                  - example:
                      data:
                        id: dnjkDMKLmdlkmlkmld
                        retryCount: 0
                        uniqueKey: 'http://example.com'
                        url: 'http://example.com'
                        method: GET
                        loadedUrl: 'http://example.com/example-1'
                        payload: null
                        noRetry: false
                        errorMessages: null
                        headers: null
                        userData:
                          label: DETAIL
                          image: 'https://picserver1.eu'
                        handledAt: '2019-06-16T10:23:31.607Z'
              example:
                data:
                  id: dnjkDMKLmdlkmlkmld
                  retryCount: 0
                  uniqueKey: 'http://example.com'
                  url: 'http://example.com'
                  method: GET
                  loadedUrl: 'http://example.com/example-1'
                  payload: null
                  noRetry: false
                  errorMessages: null
                  headers: null
                  userData:
                    label: DETAIL
                    image: 'https://picserver1.eu'
                  handledAt: '2019-06-16T10:23:31.607Z'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/request-queues/queue/get-request'
      x-js-parent: RequestQueueClient
      x-js-name: get
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/RequestQueueClient#get'
      x-py-parent: RequestQueueClientAsync
      x-py-name: get
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/RequestQueueClientAsync#get'
    put:
      tags:
        - Request queues/Queue
      summary: Update request
      description: |
        Updates a request in a queue. Mark request as handled by setting
        `request.handledAt = new Date()`.


        If `handledAt` is set, the request will be removed from head of the queue.
      operationId: requestQueue_request_put
      parameters:
        - name: queueId
          in: path
          description: Queue ID or `username~queue-name`.
          required: true
          style: simple
          schema:
            type: string
            example: WkzbQMuFYuamGv3YF
        - name: requestId
          in: path
          description: Request ID.
          required: true
          style: simple
          schema:
            type: string
            example: xpsmkDlspokDSmklS
        - name: forefront
          in: query
          description: |
            Determines if request should be added to the head of the queue or to the
            end. Default value is `false` (end of queue).
          style: form
          explode: true
          schema:
            type: string
            example: 'false'
        - name: clientKey
          in: query
          description: |
            A unique identifier of the client accessing the request queue. It must
            be a string between 1 and 32 characters long. This identifier is used to
            determine whether the queue was accessed by multiple clients. If
            `clientKey` is not provided,

            the system considers this API call to come from a new client. For
            details, see the `hadMultipleClients` field returned by the [Get
            head](#/reference/request-queues/queue-head) operation.
          style: form
          explode: true
          schema:
            type: string
            example: client-abc
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - title: RequestQueueItems
                  required:
                    - id
                    - retryCount
                    - uniqueKey
                    - url
                    - method
                  type: object
                  properties:
                    id:
                      type: string
                      example: dnjkDMKLmdlkmlkmld
                    retryCount:
                      type: number
                      example: 0
                    uniqueKey:
                      type: string
                      example: 'http://example.com'
                    url:
                      type: string
                      example: 'http://example.com'
                    method:
                      type: string
                      example: GET
                    loadedUrl:
                      type: string
                      nullable: true
                      example: 'http://example.com/example-1'
                    payload:
                      type: object
                      nullable: true
                    noRetry:
                      type: boolean
                      nullable: true
                      example: false
                    errorMessages:
                      type: array
                      items:
                        type: string
                      description: ''
                      nullable: true
                    headers:
                      type: object
                      nullable: true
                    userData:
                      allOf:
                        - title: UserData
                          type: object
                          properties:
                            label:
                              type: string
                              nullable: true
                              example: DETAIL
                            image:
                              type: string
                              nullable: true
                              example: 'https://picserver1.eu'
                        - {}
                    handledAt:
                      type: string
                      nullable: true
                      example: '2019-06-16T10:23:31.607Z'
                - example:
                    id: dnjkDMKLmdlkmlkmld
                    retryCount: 0
                    uniqueKey: 'http://example.com'
                    url: 'http://example.com'
                    method: GET
                    loadedUrl: 'http://example.com/example-1'
                    payload: null
                    noRetry: false
                    errorMessages: null
                    headers: null
                    userData:
                      label: DETAIL
                      image: 'https://picserver1.eu'
                    handledAt: '2019-06-16T10:23:31.607Z'
            example:
              id: dnjkDMKLmdlkmlkmld
              retryCount: 0
              uniqueKey: 'http://example.com'
              url: 'http://example.com'
              method: GET
              loadedUrl: 'http://example.com/example-1'
              payload: null
              noRetry: false
              errorMessages: null
              headers: null
              userData:
                label: DETAIL
                image: 'https://picserver1.eu'
              handledAt: '2019-06-16T10:23:31.607Z'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - title: UpdateRequestResponse
                    required:
                      - data
                    type: object
                    properties:
                      data:
                        allOf:
                          - $ref: '#/paths/~1v2~1request-queues~1%7BqueueId%7D~1requests/post/responses/201/content/application~1json/schema/allOf/0/properties/data/allOf/0'
                          - {}
                  - example:
                      data:
                        requestId: YiKoxjkaS9gjGTqhF
                        wasAlreadyPresent: true
                        wasAlreadyHandled: false
              example:
                data:
                  requestId: YiKoxjkaS9gjGTqhF
                  wasAlreadyPresent: true
                  wasAlreadyHandled: false
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/request-queues/queue/update-request'
      x-js-parent: RequestQueueClient
      x-js-name: update
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/RequestQueueClient#update'
      x-py-parent: RequestQueueClientAsync
      x-py-name: update
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/RequestQueueClientAsync#update'
    delete:
      tags:
        - Request queues/Queue
      summary: Delete request
      description: Deletes given request from queue.
      operationId: requestQueue_request_delete
      parameters:
        - name: queueId
          in: path
          description: Queue ID or `username~queue-name`.
          required: true
          style: simple
          schema:
            type: string
            example: WkzbQMuFYuamGv3YF
        - name: requestId
          in: path
          description: Request ID.
          required: true
          style: simple
          schema:
            type: string
            example: xpsmkDlspokDSmklS
        - name: clientKey
          in: query
          description: |
            A unique identifier of the client accessing the request queue. It must
            be a string between 1 and 32 characters long. This identifier is used to
            determine whether the queue was accessed by multiple clients. If
            `clientKey` is not provided,

            the system considers this API call to come from a new client. For
            details, see the `hadMultipleClients` field returned by the [Get
            head](#/reference/request-queues/queue-head) operation.
          style: form
          explode: true
          schema:
            type: string
            example: client-abc
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/request-queues/queue/delete-request'
      x-js-parent: RequestQueueClient
      x-js-name: delete
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/RequestQueueClient#delete'
  '/v2/request-queues/{queueId}/requests/{requestId}/lock':
    put:
      tags:
        - Request queues/Request lock
      summary: Prolong request lock
      description: |
        Prolongs request lock. The request lock can be prolonged only by the client
        that has locked it using [Get and lock head
        operation](#/reference/request-queues/queue-head-with-locks).
      operationId: requestQueue_request_lock_put
      parameters:
        - name: queueId
          in: path
          description: Queue ID or `username~queue-name`.
          required: true
          style: simple
          schema:
            type: string
            example: WkzbQMuFYuamGv3YF
        - name: requestId
          in: path
          description: Request ID.
          required: true
          style: simple
          schema:
            type: string
            example: xpsmkDlspokDSmklS
        - name: lockSecs
          in: query
          description: For how long second request will be locked.
          required: true
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 60
        - name: clientKey
          in: query
          description: |
            A unique identifier of the client accessing the request queue. It must
            be a string between 1 and 32 characters long. This identifier is used to
            ensure one client is not to able delete or prolong

            a request from another client.
          style: form
          explode: true
          schema:
            type: string
            example: client-abc
        - name: forefront
          in: query
          description: |
            Determines if request should be added to the head of the queue or to the
            end after lock expires.
          style: form
          explode: true
          schema:
            type: string
            example: 'false'
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - title: ProlongRequestLockResponse
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          lockExpiresAt:
                            type: string
                            description: Date when lock expires.
                            example: '2022-01-01T00:00:00.000Z'
                        required:
                          - lockExpiresAt
                  - example:
                      data:
                        lockExpiresAt: '2022-01-01T00:00:00.000Z'
              example:
                data:
                  lockExpiresAt: '2022-01-01T00:00:00.000Z'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/request-queues/request-lock/prolong-request-lock'
      x-js-parent: RequestQueueClient
      x-js-name: prolongRequestLock
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/RequestQueueClient#prolongRequestLock'
      x-py-parent: RequestQueueClientAsync
      x-py-name: prolong_request_lock
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/RequestQueueClientAsync#prolong_request_lock'
    delete:
      tags:
        - Request queues/Request lock
      summary: Delete request lock
      description: |
        Deletes a request lock. The request lock can be deleted only by the client
        that has locked it using [Get and lock head
        operation](#/reference/request-queues/queue-head-with-locks).
      operationId: requestQueue_request_lock_delete
      parameters:
        - name: queueId
          in: path
          description: Queue ID or `username~queue-name`.
          required: true
          style: simple
          schema:
            type: string
            example: WkzbQMuFYuamGv3YF
        - name: requestId
          in: path
          description: Request ID.
          required: true
          style: simple
          schema:
            type: string
            example: xpsmkDlspokDSmklS
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            enum:
              - application/json
            type: string
            example: application/json
        - name: clientKey
          in: query
          description: |
            A unique identifier of the client accessing the request queue. It must
            be a string between 1 and 32 characters long. This identifier is used to
            ensure one client is not to able delete or prolong

            a request from another client.
          style: form
          explode: true
          schema:
            type: string
            example: client-abc
        - name: forefront
          in: query
          description: |
            Determines if request should be added to the head of the queue or to the
            end after lock was removed.
          style: form
          explode: true
          schema:
            type: string
            example: 'false'
      responses:
        '204':
          description: ''
          headers: {}
          content: {}
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/request-queues/request-lock/delete-request-lock'
      x-js-parent: RequestQueueClient
      x-js-name: deleteRequestLock
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/RequestQueueClient#deleteRequestLock'
      x-py-parent: RequestQueueClientAsync
      x-py-name: delete_request_lock
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/RequestQueueClientAsync#delete_request_lock'
  '/v2/request-queues/{queueId}/head':
    get:
      tags:
        - Request queues/Queue head
      summary: Get head
      description: |
        Returns given number of first requests from the queue.


        The response contains the `hadMultipleClients` boolean field which indicates
        that the queue was accessed by more than one client (with unique or empty
        `clientKey`).

        This field is used by [Apify SDK](https://sdk.apify.com) to determine
        whether the local cache is consistent with the request queue, and thus
        optimize performance of certain operations.
      operationId: requestQueue_head_get
      parameters:
        - name: queueId
          in: path
          description: Queue ID or `username~queue-name`.
          required: true
          style: simple
          schema:
            type: string
            example: WkzbQMuFYuamGv3YF
        - name: limit
          in: query
          description: How many items from queue should be returned.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 100
        - name: clientKey
          in: query
          description: |
            A unique identifier of the client accessing the request queue. It must
            be a string between 1 and 32 characters long. This identifier is used to
            determine whether the queue was accessed by multiple clients. If
            `clientKey` is not provided,

            the system considers this API call to come from a new client. For
            details, see the `hadMultipleClients` field returned by the [Get
            head](#/reference/request-queues/queue-head) operation.
          style: form
          explode: true
          schema:
            type: string
            example: client-abc
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - title: GetHeadResponse
                    required:
                      - data
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          limit:
                            type: number
                            example: 1000
                          queueModifiedAt:
                            type: string
                            example: '2018-03-14T23:00:00.000Z'
                          hadMultipleClients:
                            type: boolean
                            example: false
                          items:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                  example: 8OamqXBCpPHxyH9
                                retryCount:
                                  type: number
                                  example: 0
                                uniqueKey:
                                  type: string
                                  example: 'http://example.com'
                                url:
                                  type: string
                                  example: 'http://example.com'
                                method:
                                  type: string
                                  example: GET
                              required:
                                - id
                                - retryCount
                                - uniqueKey
                                - url
                                - method
                            description: ''
                        required:
                          - limit
                          - queueModifiedAt
                          - hadMultipleClients
                          - items
                  - example:
                      data:
                        limit: 1000
                        queueModifiedAt: '2018-03-14T23:00:00.000Z'
                        hadMultipleClients: false
                        items:
                          - id: 8OamqXBCpPHxyH9
                            retryCount: 0
                            uniqueKey: 'http://example.com'
                            url: 'http://example.com'
                            method: GET
                          - id: ZJAoqlRijenMQIn
                            retryCount: 0
                            uniqueKey: 'http://example.com/a/b'
                            url: 'http://example.com/a/b'
                            method: GET
                          - id: hAhkwyk5oOBHKQC
                            retryCount: 1
                            uniqueKey: 'http://example.com/c/d'
                            url: 'http://example.com/c/d'
                            method: GET
              example:
                data:
                  limit: 1000
                  queueModifiedAt: '2018-03-14T23:00:00.000Z'
                  hadMultipleClients: false
                  items:
                    - id: 8OamqXBCpPHxyH9
                      retryCount: 0
                      uniqueKey: 'http://example.com'
                      url: 'http://example.com'
                      method: GET
                    - id: ZJAoqlRijenMQIn
                      retryCount: 0
                      uniqueKey: 'http://example.com/a/b'
                      url: 'http://example.com/a/b'
                      method: GET
                    - id: hAhkwyk5oOBHKQC
                      retryCount: 1
                      uniqueKey: 'http://example.com/c/d'
                      url: 'http://example.com/c/d'
                      method: GET
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/request-queues/queue-head/get-head'
      x-js-parent: RequestQueueClient
      x-js-name: listHead
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/RequestQueueClient#listHead'
      x-py-parent: RequestQueueClientAsync
      x-py-name: list_head
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/RequestQueueClientAsync#list_head'
  '/v2/request-queues/{queueId}/head/lock':
    post:
      tags:
        - Request queues/Queue head with locks
      summary: Get head and lock
      description: |
        Returns the given number of first requests from the queue and locks them for
        the given time.

        If this endpoint locks the request, no other client will be able to get and
        lock these requests.


        The response contains the `hadMultipleClients` boolean field which indicates
        that the queue was accessed by more than one client (with unique or empty
        `clientKey`).
      operationId: requestQueue_head_lock_post
      parameters:
        - name: queueId
          in: path
          description: Queue ID or `username~queue-name`.
          required: true
          style: simple
          schema:
            type: string
            example: WkzbQMuFYuamGv3YF
        - name: lockSecs
          in: query
          description: How long the second request will be locked for.
          required: true
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 60
        - name: limit
          in: query
          description: How many items from the queue should be returned.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 100
        - name: clientKey
          in: query
          description: |
            A unique identifier of the client accessing the request queue. It must
            be a string between 1 and 32 characters long.
          style: form
          explode: true
          schema:
            type: string
            example: client-abc
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - title: GetHeadAndLockResponse
                    required:
                      - data
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          limit:
                            type: number
                            example: 1000
                          queueModifiedAt:
                            type: string
                            example: '2018-03-14T23:00:00.000Z'
                          hadMultipleClients:
                            type: boolean
                            example: true
                          lockSecs:
                            type: number
                            example: 60
                          items:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: string
                                  example: 8OamqXBCpPHxyj9
                                retryCount:
                                  type: number
                                  example: 0
                                uniqueKey:
                                  type: string
                                  example: 'http://example.com'
                                url:
                                  type: string
                                  example: 'http://example.com'
                                method:
                                  type: string
                                  example: GET
                                lockExpiresAt:
                                  type: string
                                  example: '2022-06-14T23:00:00.000Z'
                              required:
                                - id
                                - retryCount
                                - uniqueKey
                                - url
                                - method
                                - lockExpiresAt
                            description: ''
                        required:
                          - limit
                          - queueModifiedAt
                          - hadMultipleClients
                          - lockSecs
                          - items
                  - example:
                      data:
                        limit: 1000
                        queueModifiedAt: '2018-03-14T23:00:00.000Z'
                        hadMultipleClients: true
                        lockSecs: 60
                        items:
                          - id: 8OamqXBCpPHxyj9
                            retryCount: 0
                            uniqueKey: 'http://example.com'
                            url: 'http://example.com'
                            method: GET
                            lockExpiresAt: '2022-06-14T23:00:00.000Z'
                          - id: 8OamqXBCpPHxyx9
                            retryCount: 0
                            uniqueKey: 'http://example.com/a'
                            url: 'http://example.com/a'
                            method: GET
                            lockExpiresAt: '2022-06-14T23:00:00.000Z'
                          - id: 8OamqXBCpPHxy08
                            retryCount: 0
                            uniqueKey: 'http://example.com/a/b'
                            url: 'http://example.com/a/b'
                            method: GET
                            lockExpiresAt: '2022-06-14T23:00:00.000Z'
              example:
                data:
                  limit: 1000
                  queueModifiedAt: '2018-03-14T23:00:00.000Z'
                  hadMultipleClients: true
                  lockSecs: 60
                  items:
                    - id: 8OamqXBCpPHxyj9
                      retryCount: 0
                      uniqueKey: 'http://example.com'
                      url: 'http://example.com'
                      method: GET
                      lockExpiresAt: '2022-06-14T23:00:00.000Z'
                    - id: 8OamqXBCpPHxyx9
                      retryCount: 0
                      uniqueKey: 'http://example.com/a'
                      url: 'http://example.com/a'
                      method: GET
                      lockExpiresAt: '2022-06-14T23:00:00.000Z'
                    - id: 8OamqXBCpPHxy08
                      retryCount: 0
                      uniqueKey: 'http://example.com/a/b'
                      url: 'http://example.com/a/b'
                      method: GET
                      lockExpiresAt: '2022-06-14T23:00:00.000Z'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/request-queues/queue-head-with-locks/get-head-and-lock'
      x-js-parent: RequestQueueClient
      x-js-name: listAndLockHead
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/RequestQueueClient#listAndLockHead'
      x-py-parent: RequestQueueClientAsync
      x-py-name: list_and_lock_head
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/RequestQueueClientAsync#list_and_lock_head'
  '/v2/request-queues/{queueId}/requests/batch':
    post:
      tags:
        - Request queues/Batch request operations
      summary: Add requests
      description: |
        Adds requests to the queue in batch. The maximum requests in batch is limit
        to 25. The response contains an array of unprocessed and processed requests.

        If any add operation fails because the request queue rate limit is exceeded
        or an internal failure occurs,

        the failed request is returned in the unprocessedRequests response
        parameter.

        You can resend these requests to add. It is recommended to use exponential
        backoff algorithm for these retries.

        If a request with the same `uniqueKey` was already present in the queue,
        then it returns an ID of the existing request.
      operationId: requestQueue_requests_batch_post
      parameters:
        - name: queueId
          in: path
          description: Queue ID or `username~queue-name`.
          required: true
          style: simple
          schema:
            type: string
            example: WkzbQMuFYuamGv3YF
        - name: clientKey
          in: query
          description: |
            A unique identifier of the client accessing the request queue. It must
            be a string between 1 and 32 characters long
          style: form
          explode: true
          schema:
            type: string
            example: client-abc
        - name: forefront
          in: query
          description: |
            Determines if request should be added to the head of the queue or to the
            end. Default value is `false` (end of queue).
          style: form
          explode: true
          schema:
            type: string
            example: 'false'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: array
              items:
                title: RequestWithoutId
                required:
                  - uniqueKey
                  - url
                  - method
                type: object
                properties:
                  uniqueKey:
                    type: string
                    example: 'http://example.com'
                  url:
                    type: string
                    example: 'http://example.com'
                  method:
                    type: string
                    example: GET
              description: ''
              example:
                - uniqueKey: 'http://example.com'
                  url: 'http://example.com'
                  method: GET
                - uniqueKey: 'http://example.com/2'
                  url: 'http://example.com/2'
                  method: GET
            example:
              - uniqueKey: 'http://example.com'
                url: 'http://example.com'
                method: GET
              - uniqueKey: 'http://example.com/2'
                url: 'http://example.com/2'
                method: GET
        required: true
      responses:
        '201':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - title: BatchOperationResponse
                    required:
                      - data
                    type: object
                    properties:
                      data:
                        type: object
                        required:
                          - processedRequests
                          - unprocessedRequests
                        properties:
                          processedRequests:
                            type: array
                            items:
                              title: ProcessedRequest
                              required:
                                - requestId
                                - uniqueKey
                                - wasAlreadyHandled
                                - wasAlreadyPresent
                              type: object
                              properties:
                                requestId:
                                  type: string
                                  example: sbJ7klsdf7ujN9l
                                uniqueKey:
                                  type: string
                                  example: 'http://example.com'
                                wasAlreadyPresent:
                                  type: boolean
                                  example: false
                                wasAlreadyHandled:
                                  type: boolean
                                  example: false
                          unprocessedRequests:
                            type: array
                            items:
                              title: UnprocessedRequest
                              required:
                                - uniqueKey
                                - url
                                - method
                              type: object
                              properties:
                                uniqueKey:
                                  type: string
                                  example: 'http://example.com'
                                url:
                                  type: string
                                  example: 'http://example.com'
                                method:
                                  type: string
                                  example: GET
                  - example:
                      data:
                        processedRequests:
                          - requestId: YiKoxjkaS9gjGTqhF
                            uniqueKey: 'http://example.com/2'
                            wasAlreadyPresent: true
                            wasAlreadyHandled: false
                        unprocessedRequests:
                          - uniqueKey: 'http://example.com/2'
                            url: 'http://example.com/2'
                            method: GET
              example:
                data:
                  processedRequests:
                    - requestId: YiKoxjkaS9gjGTqhF
                      wasAlreadyPresent: true
                      wasAlreadyHandled: false
                  unprocessedRequests:
                    - uniqueKey: 'http://example.com/2'
                      url: 'http://example.com/2'
                      method: GET
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/request-queues/batch-request-operations/add-requests'
      x-js-parent: RequestQueueClient
      x-js-name: batchAddRequests
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/RequestQueueClient#batchAddRequests'
      x-py-parent: RequestQueueClientAsync
      x-py-name: batch_add_requests
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/RequestQueueClientAsync#batch_add_requests'
    delete:
      tags:
        - Request queues/Batch request operations
      summary: Delete requests
      description: |
        Batch-deletes given requests from the queue. The number of requests in a
        batch is limited to 25. The response contains an array of unprocessed and
        processed requests.

        If any delete operation fails because the request queue rate limit is
        exceeded or an internal failure occurs,

        the failed request is returned in the `unprocessedRequests` response
        parameter.

        You can re-send these delete requests. It is recommended to use an
        exponential backoff algorithm for these retries.

        Each request is identified by its ID or uniqueKey parameter. You can use
        either of them to identify the request.
      operationId: requestQueue_requests_batch_delete
      parameters:
        - name: queueId
          in: path
          description: Queue ID or `username~queue-name`.
          required: true
          style: simple
          schema:
            type: string
            example: WkzbQMuFYuamGv3YF
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            enum:
              - application/json
            type: string
            example: application/json
        - name: clientKey
          in: query
          description: |
            A unique identifier of the client accessing the request queue. It must
            be a string between 1 and 32 characters long
          style: form
          explode: true
          schema:
            type: string
            example: client-abc
      responses:
        '204':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/paths/~1v2~1request-queues~1%7BqueueId%7D~1requests~1batch/post/responses/201/content/application~1json/schema/allOf/0'
                  - example:
                      data:
                        processedRequests:
                          - requestId: YiKoxjkaS9gjGTqhF
                            uniqueKey: 'http://example.com/2'
                            wasAlreadyPresent: true
                            wasAlreadyHandled: false
                        unprocessedRequests:
                          - uniqueKey: 'http://example.com/2'
                            url: 'http://example.com/2'
                            method: GET
              example:
                data:
                  processedRequests:
                    - uniqueKey: 'http://example.com'
                  unprocessedRequests:
                    - id: sbJ7klsdf7ujN9l
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/request-queues/batch-request-operations/delete-requests'
      x-js-parent: RequestQueueClient
      x-js-name: batchDeleteRequests
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/RequestQueueClient#batchDeleteRequests'
      x-py-parent: RequestQueueClientAsync
      x-py-name: batch_delete_requests
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/RequestQueueClientAsync#batch_delete_requests'
  /v2/webhooks:
    get:
      tags:
        - Webhooks/Webhook collection
      summary: Get list of webhooks
      description: |
        Gets the list of webhooks that the user created.


        The endpoint supports pagination using the `limit` and `offset` parameters
        and it will not return more than 1000 records.

        By default, the records are sorted by the `createdAt` field in ascending
        order. To sort the records in descending order, use the `desc=1`

        parameter.
      operationId: webhooks_get
      parameters:
        - name: offset
          in: query
          description: |
            Number of records that should be skipped at the start. The default value
            is `0`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 10
        - name: limit
          in: query
          description: |
            Maximum number of records to return. The default value as well as the
            maximum is `1000`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 99
        - name: desc
          in: query
          description: |
            If `true` or `1` then the objects are sorted by the `createdAt` field in
            descending order. By default, they are sorted in ascending order.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: GetListOfWebhooksResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    allOf:
                      - $ref: '#/paths/~1v2~1actor-tasks/get/responses/200/content/application~1json/schema/properties/data/allOf/0'
                      - properties:
                          items:
                            type: array
                            items:
                              title: WebhookShort
                              required:
                                - id
                                - createdAt
                                - modifiedAt
                                - userId
                                - eventTypes
                                - condition
                                - ignoreSslErrors
                                - doNotRetry
                                - requestUrl
                              type: object
                              properties:
                                id:
                                  type: string
                                  example: YiKoxjkaS9gjGTqhF
                                createdAt:
                                  type: string
                                  example: '2019-12-12T07:34:14.202Z'
                                modifiedAt:
                                  type: string
                                  example: '2019-12-13T08:36:13.202Z'
                                userId:
                                  type: string
                                  example: wRsJZtadYvn4mBZmm
                                isAdHoc:
                                  type: boolean
                                  nullable: true
                                  example: false
                                shouldInterpolateStrings:
                                  type: boolean
                                  nullable: true
                                  example: false
                                eventTypes:
                                  type: array
                                  items:
                                    type: string
                                  example:
                                    - ACTOR.RUN.SUCCEEDED
                                condition:
                                  $ref: '#/paths/~1v2~1webhooks/post/requestBody/content/application~1json/schema/properties/condition'
                                ignoreSslErrors:
                                  type: boolean
                                  example: false
                                doNotRetry:
                                  type: boolean
                                  example: false
                                requestUrl:
                                  type: string
                                  example: 'http://example.com/'
                                lastDispatch:
                                  nullable: true
                                  allOf:
                                    - $ref: '#/paths/~1v2~1actor-tasks~1%7BactorTaskId%7D~1webhooks/get/responses/200/content/application~1json/schema/properties/data/allOf/1/properties/items/items/properties/lastDispatch/allOf/0'
                                stats:
                                  nullable: true
                                  allOf:
                                    - $ref: '#/paths/~1v2~1actor-tasks~1%7BactorTaskId%7D~1webhooks/get/responses/200/content/application~1json/schema/properties/data/allOf/1/properties/items/items/properties/stats/allOf/0'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/webhooks/webhook-collection/get-list-of-webhooks'
      x-js-parent: WebhookCollectionClient
      x-js-name: list
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/WebhookCollectionClient#list'
      x-py-parent: WebhookCollectionClientAsync
      x-py-name: list
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/WebhookCollectionClientAsync#list'
    post:
      tags:
        - Webhooks/Webhook collection
      summary: Create webhook
      description: |
        Creates a new webhook with settings provided by the webhook object passed as
        JSON in the payload.

        The response is the created webhook object.


        To avoid duplicating a webhook, use the `idempotencyKey` parameter in the
        request body.

        Multiple calls to create a webhook with the same `idempotencyKey` will only
        create the webhook with the first call and return the existing webhook on
        subsequent calls.

        Idempotency keys must be unique, so use a UUID or another random string with
        enough entropy.


        To assign the new webhook to an actor or task, the request body must contain
        `requestUrl`, `eventTypes`, and `condition` properties.


        * `requestUrl` is the webhook's target URL, to which data is sent as a POST
        request with a JSON payload.


        * `eventTypes` is a list of events that will trigger the webhook, e.g. when
        the actor run succeeds.


        * `condition` should be an object containing the ID of the actor or task to
        which the webhook will be assigned.


        * `payloadTemplate` is a JSON-like string, whose syntax is extended with the
        use of variables.


        * `headersTemplate` is a JSON-like string, whose syntax is extended with the
        use of variables. Following values will be re-written to defaults: "host",
        "Content-Type", "X-Apify-Webhook", "X-Apify-Webhook-Dispatch-Id",
        "X-Apify-Request-Origin"


        * `description` is an optional string.


        * `shouldInterpolateStrings` is a boolean indicating whether to interpolate
        variables contained inside strings in the `payloadTemplate`


        ```
            "isAdHoc" : false,
            "requestUrl" : "https://example.com",
            "eventTypes" : [
                "ACTOR.RUN.SUCCEEDED",
                "ACTOR.RUN.ABORTED"
            ],
            "condition" : {
                "actorId": "janedoe~my-actor",
                "actorTaskId" : "W9bs9JE9v7wprjAnJ"
            },
            "payloadTemplate": "",
            "headersTemplate": "",
            "description": "my awesome webhook",
            "shouldInterpolateStrings": false,
        ```


        **Important**: The request must specify the `Content-Type: application/json`
        HTTP header.
      operationId: webhooks_post
      parameters:
        - name: limit
          in: query
          description: ''
          style: form
          explode: true
          schema:
            type: string
        - name: offset
          in: query
          description: ''
          style: form
          explode: true
          schema:
            type: string
        - name: desc
          in: query
          description: ''
          style: form
          explode: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              title: WebhookCreate
              required:
                - eventTypes
                - condition
                - requestUrl
              type: object
              properties:
                isAdHoc:
                  type: boolean
                  nullable: true
                  example: false
                eventTypes:
                  type: array
                  items:
                    type: string
                  example:
                    - ACTOR.RUN.SUCCEEDED
                condition:
                  title: WebhookCondition
                  type: object
                  properties:
                    actorId:
                      type: string
                      nullable: true
                      example: hksJZtadYvn4mBuin
                    actorTaskId:
                      type: string
                      nullable: true
                      example: asdLZtadYvn4mBZmm
                    actorRunId:
                      type: string
                      nullable: true
                      example: hgdKZtadYvn4mBpoi
                idempotencyKey:
                  type: string
                  nullable: true
                  example: fdSJmdP3nfs7sfk3y
                ignoreSslErrors:
                  type: boolean
                  nullable: true
                  example: false
                doNotRetry:
                  type: boolean
                  nullable: true
                  example: false
                requestUrl:
                  type: string
                  example: 'http://example.com/'
                payloadTemplate:
                  type: string
                  nullable: true
                  example: '{\n \"userId\": {{userId}}...'
                headersTemplate:
                  type: string
                  nullable: true
                  example: '{\n \"Authorization\": Bearer...'
                description:
                  type: string
                  nullable: true
                  example: this is webhook description
                shouldInterpolateStrings:
                  type: boolean
                  nullable: true
                  example: false
        required: true
      responses:
        '201':
          description: ''
          headers:
            Location:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 'https://api.apify.com/v2/webhook/zdc3Pyhyz3m8vjDeM'
          content:
            application/json:
              schema:
                title: CreateWebhookResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/paths/~1v2~1actor-tasks~1%7BactorTaskId%7D~1webhooks/get/responses/200/content/application~1json/schema/properties/data/allOf/1/properties/items/items'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/webhooks/webhook-collection/create-webhook'
      x-js-parent: WebhookCollectionClient
      x-js-name: create
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/WebhookCollectionClient#create'
      x-py-parent: WebhookCollectionClientAsync
      x-py-name: create
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/WebhookCollectionClientAsync#create'
  '/v2/webhooks/{webhookId}':
    get:
      tags:
        - Webhooks/Webhook object
      summary: Get webhook
      description: Gets webhook object with all details.
      operationId: webhook_get
      parameters:
        - name: webhookId
          in: path
          description: Webhook ID.
          required: true
          style: simple
          schema:
            type: string
            example: Zib4xbZsmvZeK55ua
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: GetWebhookResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/paths/~1v2~1actor-tasks~1%7BactorTaskId%7D~1webhooks/get/responses/200/content/application~1json/schema/properties/data/allOf/1/properties/items/items'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/webhooks/webhook-object/get-webhook'
      x-js-parent: WebhookClient
      x-js-name: get
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/WebhookClient#get'
      x-py-parent: WebhookClientAsync
      x-py-name: get
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/WebhookClientAsync#get'
    put:
      tags:
        - Webhooks/Webhook object
      summary: Update webhook
      description: |
        Updates a webhook using values specified by a webhook object passed as JSON
        in the POST payload.

        If the object does not define a specific property, its value will not be
        updated.


        The response is the full webhook object as returned by the

        [Get webhook](#/reference/webhooks/webhook-object/get-webhook) endpoint.


        The request needs to specify the `Content-Type: application/json` HTTP
        header!


        When providing your API authentication token, we recommend using the
        request's `Authorization` header, rather than the URL. ([More
        info](#/introduction/authentication)).
      operationId: webhook_put
      parameters:
        - name: webhookId
          in: path
          description: Webhook ID.
          required: true
          style: simple
          schema:
            type: string
            example: Zib4xbZsmvZeK55ua
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              title: WebhookUpdate
              type: object
              properties:
                isAdHoc:
                  type: boolean
                  nullable: true
                  example: false
                eventTypes:
                  type: array
                  items:
                    type: string
                  description: ''
                  nullable: true
                  example:
                    - ACTOR.RUN.SUCCEEDED
                condition:
                  nullable: true
                  allOf:
                    - $ref: '#/paths/~1v2~1webhooks/post/requestBody/content/application~1json/schema/properties/condition'
                ignoreSslErrors:
                  type: boolean
                  nullable: true
                  example: false
                doNotRetry:
                  type: boolean
                  nullable: true
                  example: false
                requestUrl:
                  type: string
                  nullable: true
                  example: 'http://example.com/'
                payloadTemplate:
                  type: string
                  nullable: true
                  example: '{\n \"userId\": {{userId}}...'
                headersTemplate:
                  type: string
                  nullable: true
                  example: '{\n \"Authorization\": Bearer...'
                description:
                  type: string
                  nullable: true
                  example: this is webhook description
                shouldInterpolateStrings:
                  type: boolean
                  nullable: true
                  example: false
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: UpdateWebhookResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/paths/~1v2~1actor-tasks~1%7BactorTaskId%7D~1webhooks/get/responses/200/content/application~1json/schema/properties/data/allOf/1/properties/items/items'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/webhooks/webhook-object/update-webhook'
      x-js-parent: WebhookClient
      x-js-name: update
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/WebhookClient#update'
      x-py-parent: WebhookClientAsync
      x-py-name: update
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/WebhookClientAsync#update'
    delete:
      tags:
        - Webhooks/Webhook object
      summary: Delete webhook
      description: Deletes a webhook.
      operationId: webhook_delete
      parameters:
        - name: webhookId
          in: path
          description: Webhook ID.
          required: true
          style: simple
          schema:
            type: string
            example: Zib4xbZsmvZeK55ua
      responses:
        '204':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
              example: {}
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/webhooks/webhook-object/delete-webhook'
      x-js-parent: WebhookClient
      x-js-name: delete
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/WebhookClient#delete'
  '/v2/webhooks/{webhookId}/test':
    post:
      tags:
        - Webhooks/Webhook test
      summary: Test webhook
      description: Tests a webhook. Creates a webhook dispatch with a dummy payload.
      operationId: webhook_test_post
      parameters:
        - name: webhookId
          in: path
          description: Webhook ID.
          required: true
          style: simple
          schema:
            type: string
            example: Zib4xbZsmvZeK55ua
      responses:
        '201':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: TestWebhookResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    title: WebhookDispatch
                    required:
                      - id
                      - userId
                      - webhookId
                      - createdAt
                      - status
                      - eventType
                      - eventData
                    type: object
                    properties:
                      id:
                        type: string
                        example: asdLZtadYvn4mBZmm
                      userId:
                        type: string
                        example: wRsJZtadYvn4mBZmm
                      webhookId:
                        type: string
                        example: asdLZtadYvn4mBZmm
                      createdAt:
                        type: string
                        example: '2019-12-12T07:34:14.202Z'
                      status:
                        type: string
                        example: SUCCEEDED
                      eventType:
                        type: string
                        example: ACTOR.RUN.SUCCEEDED
                      eventData:
                        title: eventData
                        type: object
                        required:
                          - actorId
                          - actorRunId
                        properties:
                          actorId:
                            type: string
                            example: vvE7iMKuMc5qTHHsR
                          actorRunId:
                            type: string
                            example: JgwXN9BdwxGcu9MMF
                      calls:
                        title: calls
                        type: object
                        properties:
                          startedAt:
                            type: string
                            nullable: true
                            example: '2019-12-12T07:34:14.202Z'
                          finishedAt:
                            type: string
                            nullable: true
                            example: '2019-12-12T07:34:14.202Z'
                          errorMessage:
                            type: string
                            nullable: true
                            example: Cannot send request
                          responseStatus:
                            type: number
                            nullable: true
                            example: 200
                          responseBody:
                            type: string
                            nullable: true
                            example:
                              foo: bar
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/webhooks/webhook-test/test-webhook'
      x-js-parent: WebhookClient
      x-js-name: test
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/WebhookClient#test'
      x-py-parent: WebhookClientAsync
      x-py-name: test
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/WebhookClientAsync#test'
  '/v2/webhooks/{webhookId}/dispatches':
    get:
      tags:
        - Webhooks/Dispatches collection
      summary: Get collection
      description: Gets a given webhook's list of dispatches.
      operationId: webhook_dispatches_get
      parameters:
        - name: webhookId
          in: path
          description: ID number of the webhook.
          required: true
          style: simple
          schema:
            type: string
            example: pVJtoTelgYUq4qJOt
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1webhook-dispatches/get/responses/200/content/application~1json/schema'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/webhooks/dispatches-collection/get-collection'
      x-py-parent: WebhookClientAsync
      x-py-name: dispatches
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/WebhookClientAsync#dispatches'
  /v2/webhook-dispatches:
    get:
      tags:
        - Webhook dispatches/Webhook dispatches collection
      summary: Get list of webhook dispatches
      description: |
        Gets the list of webhook dispatches that the user have.


        The endpoint supports pagination using the `limit` and `offset` parameters
        and it will not return more than 1000 records.

        By default, the records are sorted by the `createdAt` field in ascending
        order. To sort the records in descending order, use the `desc=1`

        parameter.
      operationId: webhookDispatches_get
      parameters:
        - name: offset
          in: query
          description: |
            Number of records that should be skipped at the start. The default value
            is `0`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 10
        - name: limit
          in: query
          description: |
            Maximum number of records to return. The default value as well as the
            maximum is `1000`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 99
        - name: desc
          in: query
          description: |
            If `true` or `1` then the objects are sorted by the `createdAt` field in
            descending order. By default, they are sorted in ascending order.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: WebhookDispatchList
                required:
                  - total
                  - offset
                  - limit
                  - desc
                  - count
                  - items
                type: object
                properties:
                  data:
                    allOf:
                      - $ref: '#/paths/~1v2~1actor-tasks/get/responses/200/content/application~1json/schema/properties/data/allOf/0'
                      - type: object
                        required:
                          - items
                        properties:
                          items:
                            type: array
                            items:
                              $ref: '#/paths/~1v2~1webhooks~1%7BwebhookId%7D~1test/post/responses/201/content/application~1json/schema/properties/data'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/webhook-dispatches/webhook-dispatches-collection/get-list-of-webhook-dispatches'
      x-js-parent: WebhookDispatchCollectionClient
      x-js-name: list
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/WebhookDispatchCollectionClient#list'
      x-py-parent: WebhookDispatchCollectionClientAsync
      x-py-name: list
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/WebhookDispatchCollectionClientAsync#list'
  '/v2/webhook-dispatches/{dispatchId}':
    get:
      tags:
        - Webhook dispatches/Webhook dispatch object
      summary: Get webhook dispatch
      description: Gets webhook dispatch object with all details.
      operationId: webhookDispatch_get
      parameters:
        - name: dispatchId
          in: path
          description: Webhook dispacth ID.
          required: true
          style: simple
          schema:
            type: string
            example: Zib4xbZsmvZeK55ua
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: GetWebhookDispatchResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    $ref: '#/paths/~1v2~1webhooks~1%7BwebhookId%7D~1test/post/responses/201/content/application~1json/schema/properties/data'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/webhook-dispatches/webhook-dispatch-object/get-webhook-dispatch'
      x-js-parent: WebhookDispatchClient
      x-js-name: get
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/WebhookDispatchClient#get'
      x-py-parent: WebhookDispatchClientAsync
      x-py-name: get
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/WebhookDispatchClientAsync#get'
  /v2/schedules:
    get:
      tags:
        - Schedules/Schedules collection
      summary: Get list of schedules
      description: |
        Gets the list of schedules that the user created.

        The endpoint supports pagination using the `limit` and `offset` parameters.
        It will not return more than 1000 records.

        By default, the records are sorted by the `createdAt` field in ascending
        order. To sort the records in descending order, use the `desc=1` parameter.
      operationId: schedules_get
      parameters:
        - name: offset
          in: query
          description: |
            Number of records that should be skipped at the start. The default value is `0`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 10
        - name: limit
          in: query
          description: |
            Maximum number of records to return. The default value, as well as the maximum, is `1000`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 99
        - name: desc
          in: query
          description: |
            If `true` or `1`, the objects are sorted by the `createdAt` field in
            descending order. By default, they are sorted in ascending order.
          style: form
          explode: true
          schema:
            type: boolean
            example: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: GetListOfSchedulesResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    title: GetListOfSchedulesResponseData
                    required:
                      - total
                      - offset
                      - limit
                      - desc
                      - count
                      - items
                    type: object
                    properties:
                      total:
                        type: number
                        example: 2
                      offset:
                        type: number
                        example: 0
                      limit:
                        type: number
                        example: 1000
                      desc:
                        type: boolean
                        example: false
                      count:
                        type: number
                        example: 2
                      items:
                        type: array
                        items:
                          title: GetListOfSchedulesResponseDataItems
                          required:
                            - id
                            - userId
                            - name
                            - createdAt
                            - modifiedAt
                            - lastRunAt
                            - nextRunAt
                            - isEnabled
                            - isExclusive
                            - cronExpression
                            - timezone
                            - actions
                          type: object
                          properties:
                            id:
                              type: string
                              example: asdLZtadYvn4mBZmm
                            userId:
                              type: string
                              example: wRsJZtadYvn4mBZmm
                            name:
                              type: string
                              example: my-schedule
                            createdAt:
                              type: string
                              example: '2019-12-12T07:34:14.202Z'
                            modifiedAt:
                              type: string
                              example: '2019-12-20T06:33:11.202Z'
                            lastRunAt:
                              type: string
                              example: '2019-04-12T07:33:10.202Z'
                            nextRunAt:
                              type: string
                              example: '2019-04-12T07:34:10.202Z'
                            isEnabled:
                              type: boolean
                              example: true
                            isExclusive:
                              type: boolean
                              example: true
                            cronExpression:
                              type: string
                              example: '* * * * *'
                            timezone:
                              type: string
                              example: UTC
                            actions:
                              type: array
                              items:
                                title: GetListOfSchedulesResponseDataItemsActions
                                required:
                                  - id
                                  - type
                                  - actorId
                                type: object
                                properties:
                                  id:
                                    type: string
                                    example: ZReCs7hkdieq8ZUki
                                  type:
                                    type: string
                                    example: RUN_ACTOR
                                  actorId:
                                    type: string
                                    example: HKhKmiCMrDgu9eXeE
                              description: ''
                        description: ''
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/schedules/schedules-collection/get-list-of-schedules'
      x-js-parent: ScheduleCollectionClient
      x-js-name: list
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/ScheduleCollectionClient#list'
      x-py-parent: ScheduleCollectionClientAsync
      x-py-name: list
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/ScheduleCollectionClientAsync#list'
    post:
      tags:
        - Schedules/Schedules collection
      summary: Create schedule
      description: |
        Creates a new schedule with settings provided by the schedule object passed
        as JSON in the payload. The response is the created schedule object.

        The request needs to specify the `Content-Type: application/json` HTTP header!

        When providing your API authentication token, we recommend using the
        request's `Authorization` header, rather than the URL. ([More
        info](#/introduction/authentication)).
      operationId: schedules_post
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              title: ScheduleCreate
              type: object
              properties:
                name:
                  type: string
                  nullable: true
                  example: my-schedule
                isEnabled:
                  type: boolean
                  nullable: true
                  example: true
                isExclusive:
                  type: boolean
                  nullable: true
                  example: true
                cronExpression:
                  type: string
                  nullable: true
                  example: '* * * * *'
                timezone:
                  type: string
                  nullable: true
                  example: UTC
                description:
                  type: string
                  nullable: true
                  example: Schedule of actor ...
                actions:
                  type: array
                  items:
                    title: CreateScheduleActions
                    required:
                      - type
                      - actorId
                    type: object
                    properties:
                      type:
                        type: string
                        example: RUN_ACTOR
                      actorId:
                        type: string
                        example: jF8GGEvbEg4Au3NLA
                      runInput:
                        nullable: true
                        allOf:
                          - title: ScheduleActionsRunInput
                            type: object
                            properties:
                              body:
                                type: string
                                nullable: true
                                example: '{\n   \"foo\": \"actor\"\n}'
                              contentType:
                                type: string
                                nullable: true
                                example: application/json; charset=utf-8
                      runOptions:
                        nullable: true
                        allOf:
                          - title: ScheduleActionsRunOptions
                            type: object
                            properties:
                              build:
                                type: string
                                nullable: true
                                example: latest
                              timeoutSecs:
                                type: number
                                nullable: true
                                example: 60
                              memoryMbytes:
                                type: number
                                nullable: true
                                example: 1024
                  description: ''
                  nullable: true
        required: true
      responses:
        '201':
          description: ''
          headers:
            Location:
              content:
                text/plain:
                  schema:
                    type: string
                  example: 'https://api.apify.com/v2/schedules/asdLZtadYvn4mBZmm'
          content:
            application/json:
              schema:
                title: CreateScheduleResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    title: Schedule
                    required:
                      - id
                      - userId
                      - name
                      - cronExpression
                      - timezone
                      - isEnabled
                      - isExclusive
                      - createdAt
                      - modifiedAt
                      - actions
                    type: object
                    properties:
                      id:
                        type: string
                        example: asdLZtadYvn4mBZmm
                      userId:
                        type: string
                        example: wRsJZtadYvn4mBZmm
                      name:
                        type: string
                        example: my-schedule
                      cronExpression:
                        type: string
                        example: '* * * * *'
                      timezone:
                        type: string
                        example: UTC
                      isEnabled:
                        type: boolean
                        example: true
                      isExclusive:
                        type: boolean
                        example: true
                      description:
                        type: string
                        nullable: true
                        example: Schedule of actor ...
                      createdAt:
                        type: string
                        example: '2019-12-12T07:34:14.202Z'
                      modifiedAt:
                        type: string
                        example: '2019-12-20T06:33:11.202Z'
                      nextRunAt:
                        type: string
                        nullable: true
                        example: '2019-04-12T07:34:10.202Z'
                      lastRunAt:
                        type: string
                        nullable: true
                        example: '2019-04-12T07:33:10.202Z'
                      actions:
                        type: array
                        items:
                          title: ScheduleActions
                          required:
                            - id
                            - type
                            - actorId
                          type: object
                          properties:
                            id:
                              type: string
                              example: c6KfSgoQzFhMk3etc
                            type:
                              type: string
                              example: RUN_ACTOR
                            actorId:
                              type: string
                              example: jF8GGEvbEg4Au3NLA
                            runInput:
                              nullable: true
                              allOf:
                                - $ref: '#/paths/~1v2~1schedules/post/requestBody/content/application~1json/schema/properties/actions/items/properties/runInput/allOf/0'
                            runOptions:
                              nullable: true
                              allOf:
                                - $ref: '#/paths/~1v2~1schedules/post/requestBody/content/application~1json/schema/properties/actions/items/properties/runOptions/allOf/0'
                        description: ''
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/schedules/schedules-collection/create-schedule'
      x-js-parent: ScheduleCollectionClient
      x-js-name: create
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/ScheduleCollectionClient#create'
      x-py-parent: ScheduleCollectionClientAsync
      x-py-name: create
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/ScheduleCollectionClientAsync#create'
  '/v2/schedules/{scheduleId}':
    get:
      tags:
        - Schedules/Schedule object
      summary: Get schedule
      description: Gets the schedule object with all details.
      operationId: schedule_get
      parameters:
        - name: scheduleId
          in: path
          description: Schedule ID.
          required: true
          style: simple
          schema:
            type: string
            example: asdLZtadYvn4mBZmm
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1schedules/post/responses/201/content/application~1json/schema'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/schedules/schedule-object/get-schedule'
      x-js-parent: ScheduleClient
      x-js-name: get
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/ScheduleClient#get'
      x-py-parent: ScheduleClientAsync
      x-py-name: get
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/ScheduleClientAsync#get'
    put:
      tags:
        - Schedules/Schedule object
      summary: Update schedule
      description: |
        Updates a schedule using values specified by a schedule object passed as
        JSON in the POST payload. If the object does not define a specific property,
        its value will not be updated.

        The response is the full schedule object as returned by the
        [Get schedule](#/reference/schedules/schedule-object/get-schedule) endpoint.

        **The request needs to specify the `Content-Type: application/json` HTTP
        header!**

        When providing your API authentication token, we recommend using the
        request's `Authorization` header, rather than the URL. ([More
        info](#/introduction/authentication)).
      operationId: schedule_put
      parameters:
        - name: scheduleId
          in: path
          description: Schedule ID.
          required: true
          style: simple
          schema:
            type: string
            example: asdLZtadYvn4mBZmm
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/paths/~1v2~1schedules/post/requestBody/content/application~1json/schema'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v2~1schedules/post/responses/201/content/application~1json/schema'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/schedules/schedule-object/update-schedule'
      x-js-parent: ScheduleClient
      x-js-name: update
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/ScheduleClient#update'
      x-py-parent: ScheduleClientAsync
      x-py-name: update
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/ScheduleClientAsync#update'
    delete:
      tags:
        - Schedules/Schedule object
      summary: Delete schedule
      description: Deletes a schedule.
      operationId: schedule_delete
      parameters:
        - name: scheduleId
          in: path
          description: Schedule ID.
          required: true
          style: simple
          schema:
            type: string
            example: asdLZtadYvn4mBZmm
      responses:
        '204':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
                example: {}
              example: {}
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/schedules/schedule-object/delete-schedule'
      x-js-parent: ScheduleClient
      x-js-name: delete
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/ScheduleClient#delete'
  '/v2/schedules/{scheduleId}/log':
    get:
      tags:
        - Schedules/Schedule log
      summary: Get schedule log
      description: |
        Gets the schedule log as a JSON array containing information about up to a
        1000 invocations of the schedule.
      operationId: schedule_log_get
      parameters:
        - name: scheduleId
          in: path
          description: Schedule ID.
          required: true
          style: simple
          schema:
            type: string
            example: asdLZtadYvn4mBZmm
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: GetScheduleLogResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    type: array
                    items:
                      title: ScheduleInvoked
                      required:
                        - message
                        - level
                        - createdAt
                      type: object
                      properties:
                        message:
                          type: string
                          example: Schedule invoked
                        level:
                          type: string
                          example: INFO
                        createdAt:
                          type: string
                          example: '2019-03-26T12:28:00.370Z'
                    description: ''
              example:
                data:
                  - message: Schedule invoked
                    level: INFO
                    createdAt: '2019-03-26T12:28:00.370Z'
                  - message: 'Cannot start actor task \"iEvfA6pm6DWjRTGxS\": Provided input must be object, got \"string\" instead.'
                    level: ERROR
                    createdAt: '2019-03-26T12:30:00.325Z'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/schedules/schedule-log/get-schedule-log'
      x-js-parent: ScheduleClient
      x-js-name: getLog
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/ScheduleClient#getLog'
      x-py-parent: ScheduleClientAsync
      x-py-name: get_log
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/ScheduleClientAsync#get_log'
  /v2/store:
    get:
      tags:
        - Store/Store Actors collection
      summary: Get list of Actors in store
      description: |
        Gets the list of public Actors in Apify Store. You can use `search`
        parameter to search Actors by string in title, name, description, username
        and readme.

        If you need detailed info about a specific Actor, use the [Get
        actor](#/reference/actors/actor-object/get-actor) endpoint.


        The endpoint supports pagination using the `limit` and `offset` parameters.
        It will not return more than 1,000 records.
      operationId: store_get
      parameters:
        - name: limit
          in: query
          description: |
            Maximum number of elements to return. The default and maximum value is
            `1,000`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 99
        - name: offset
          in: query
          description: |
            Number of elements that should be skipped at the start. The default
            value is `0`.
          style: form
          explode: true
          schema:
            type: number
            format: double
            example: 10
        - name: search
          in: query
          description: |
            String to search by. The search runs on the following fields: `title`,
            `name`, `description`, `username`, `readme`.
          style: form
          explode: true
          schema:
            type: string
            example: web scraper
        - name: sortBy
          in: query
          description: |
            Specifies the field by which to sort the results. The supported values
            are `relevance` (default), `popularity`, `newest` and `lastUpdate`.
          style: form
          explode: true
          schema:
            type: string
            example: '''popularity'''
        - name: category
          in: query
          description: Filters the results by the specified category.
          style: form
          explode: true
          schema:
            type: string
            example: '''AI'''
        - name: username
          in: query
          description: Filters the results by the specified username.
          style: form
          explode: true
          schema:
            type: string
            example: '''apify'''
        - name: pricingModel
          in: query
          description: |
            Filters the results by the specified pricing model. The supported values
            are `FREE`, `FLAT_PRICE_PER_MONTH` and `PRICE_PER_DATASET_ITEM`.
          style: form
          explode: true
          schema:
            type: string
            example: '''FREE'''
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: GetListOfActorsInStoreResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    title: StoreData
                    required:
                      - total
                      - offset
                      - limit
                      - desc
                      - count
                      - items
                    type: object
                    properties:
                      total:
                        type: number
                        example: 100
                      offset:
                        type: number
                        example: 0
                      limit:
                        type: number
                        example: 1000
                      desc:
                        type: boolean
                        example: false
                      count:
                        type: number
                        example: 1
                      items:
                        type: array
                        items:
                          title: StoreListActor
                          required:
                            - id
                            - title
                            - name
                            - username
                            - userFullName
                            - description
                            - stats
                            - currentPricingInfo
                          type: object
                          properties:
                            id:
                              type: string
                              example: zdc3Pyhyz3m8vjDeM
                            title:
                              type: string
                              example: My Public Actor
                            name:
                              type: string
                              example: my-public-actor
                            username:
                              type: string
                              example: jane35
                            userFullName:
                              type: string
                              example: Jane H. Doe
                            description:
                              type: string
                              example: My public actor!
                            categories:
                              type: array
                              items:
                                type: string
                              example:
                                - MARKETING
                                - LEAD_GENERATION
                            notice:
                              type: string
                            pictureUrl:
                              type: string
                              nullable: true
                              example: 'https://...'
                            userPictureUrl:
                              type: string
                              nullable: true
                              example: 'https://...'
                            url:
                              type: string
                              nullable: true
                              example: 'https://...'
                            stats:
                              $ref: '#/paths/~1v2~1acts/post/responses/201/content/application~1json/schema/properties/data/properties/stats'
                            currentPricingInfo:
                              title: currentPricingInfo
                              required:
                                - pricingModel
                              type: object
                              properties:
                                pricingModel:
                                  type: string
                                  example: FREE
                        description: ''
              example:
                data:
                  total: 100
                  offset: 0
                  limit: 1000
                  desc: false
                  count: 1
                  items:
                    - id: zdc3Pyhyz3m8vjDeM
                      title: My Public Actor
                      name: my-public-actor
                      username: jane35
                      description: My public actor!
                      pictureUrl: 'https://...'
                      userPictureUrl: 'https://...'
                      url: 'https://...'
                      stats:
                        totalBuilds: 9
                        totalRuns: 16
                        totalUsers: 6
                        totalUsers7Days: 2
                        totalUsers30Days: 6
                        totalUsers90Days: 6
                        totalMetamorphs: 2
                        lastRunStartedAt: '2019-07-08T14:01:05.546Z'
                      currentPricingInfo:
                        pricingModel: FREE
                    - id: zdc3Pyhyz3m8vjDeM
                      title: My Public Actor
                      name: my-public-actor
                      username: jane35
                      userFullName: Jane H. Doe
                      categories:
                        - MARKETING
                        - LEAD_GENERATION
                      description: My public actor!
                      pictureUrl: 'https://...'
                      userPictureUrl: 'https://...'
                      url: 'https://...'
                      stats:
                        totalBuilds: 9
                        totalRuns: 16
                        totalUsers: 6
                        totalUsers7Days: 2
                        totalUsers30Days: 6
                        totalUsers90Days: 6
                        totalMetamorphs: 2
                        lastRunStartedAt: '2019-07-08T14:01:05.546Z'
                      currentPricingInfo:
                        pricingModel: FREE
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/store/store-actors-collection/get-list-of-actors-in-store'
  '/v2/logs/{buildOrRunId}':
    get:
      tags:
        - Logs/Log
      summary: Get log
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/logs/log/get-log'
      description: ''
      operationId: log_get
      parameters:
        - name: buildOrRunId
          in: path
          description: ID of the actor build or run.
          required: true
          style: simple
          schema:
            type: string
            example: HG7ML7M8z78YcAPEB
        - name: stream
          in: query
          description: |
            If `true` or `1` then the logs will be streamed as long as the run or
            build is running.
          required: true
          style: form
          explode: true
          schema:
            type: boolean
            example: false
        - name: download
          in: query
          description: |
            If `true` or `1` then the web browser will download the log file rather
            than open it in a tab.
          required: true
          style: form
          explode: true
          schema:
            type: boolean
            example: false
      responses:
        '200':
          description: ''
          headers: {}
          content:
            text/plain:
              schema:
                type: string
                example: |-
                  2017-07-14T06:00:49.733Z Application started.
                  2017-07-14T06:00:49.741Z Input: { test: 123 }
                  2017-07-14T06:00:49.752Z Some useful debug information follows.
              example: |-
                2017-07-14T06:00:49.733Z Application started.
                2017-07-14T06:00:49.741Z Input: { test: 123 }
                2017-07-14T06:00:49.752Z Some useful debug information follows.
      deprecated: false
      x-js-parent: LogClient
      x-js-name: stream
      x-js-doc-url: 'https://docs.apify.com/api/client/js/reference/class/LogClient#stream'
      x-py-parent: LogClientAsync
      x-py-name: stream
      x-py-doc-url: 'https://docs.apify.com/api/client/python/reference/class/LogClientAsync#stream'
  '/v2/users/{userId}':
    get:
      tags:
        - Users/Public data
      summary: Get public user data
      description: |
        Returns public information about a specific user account, similar to what
        can be seen on public profile pages (e.g. https://apify.com/apify).

        This operation requires no authentication token.
      operationId: user_get
      parameters:
        - name: userId
          in: path
          description: User ID or username.
          required: true
          style: simple
          schema:
            type: string
            example: HGzIk8z78YcAPEB
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: GetPublicUserDataResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    title: UserPublicInfo
                    required:
                      - username
                      - profile
                    type: object
                    properties:
                      username:
                        type: string
                        example: d7b9MDYsbtX5L7XAj
                      profile:
                        $ref: '#/paths/~1v2~1users~1me/get/responses/200/content/application~1json/schema/properties/data/properties/profile'
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/users/public-data/get-public-user-data'
  /v2/users/me:
    get:
      tags:
        - Users/Private data
      summary: Get private user data
      description: |
        Returns information about the current user account, including both public
        and private information.

        The user account is identified by the provided authentication token.
      operationId: users_me_get
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: GetPrivateUserDataResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    title: UserPrivateInfo
                    required:
                      - id
                      - username
                      - profile
                      - email
                      - proxy
                      - plan
                    type: object
                    properties:
                      id:
                        type: string
                        example: YiKoxjkaS9gjGTqhF
                      username:
                        type: string
                        example: myusername
                      profile:
                        title: Profile
                        type: object
                        properties:
                          bio:
                            type: string
                            example: I started web scraping in 1985 using Altair BASIC.
                          name:
                            type: string
                            example: Jane Doe
                          pictureUrl:
                            type: string
                            example: /img/anonymous_user_picture.png
                          githubUsername:
                            type: string
                            example: torvalds.
                          websiteUrl:
                            type: string
                            example: 'http://www.example.com'
                          twitterUsername:
                            type: string
                            example: '@BillGates'
                      email:
                        type: string
                        example: bob@example.com
                      proxy:
                        title: Proxy
                        required:
                          - password
                          - groups
                        type: object
                        properties:
                          password:
                            type: string
                            example: ad78knd9Jkjd86
                          groups:
                            type: array
                            items:
                              - title: ProxyGroup
                                required:
                                  - name
                                  - description
                                  - availableCount
                                type: object
                                properties:
                                  name:
                                    type: string
                                    example: Group1
                                  description:
                                    type: string
                                    example: Group1 description
                                  availableCount:
                                    type: number
                                    example: 10
                      plan:
                        title: Plan
                        required:
                          - id
                          - description
                          - isEnabled
                          - monthlyBasePriceUsd
                          - monthlyUsageCreditsUsd
                          - usageDiscountPercent
                          - enabledPlatformFeatures
                          - maxMonthlyUsageUsd
                          - maxActorMemoryGbytes
                          - maxMonthlyActorComputeUnits
                          - maxMonthlyResidentialProxyGbytes
                          - maxMonthlyProxySerps
                          - maxMonthlyExternalDataTransferGbytes
                          - maxActorCount
                          - maxActorTaskCount
                          - dataRetentionDays
                          - availableProxyGroups
                          - teamAccountSeatCount
                          - supportLevel
                          - availableAddOns
                        type: object
                        properties:
                          id:
                            type: string
                            example: Personal
                          description:
                            type: string
                            example: 'Cost-effective plan for freelancers, developers and students.'
                          isEnabled:
                            type: boolean
                            example: true
                          monthlyBasePriceUsd:
                            type: number
                            example: 49
                          monthlyUsageCreditsUsd:
                            type: number
                            example: 49
                          usageDiscountPercent:
                            type: number
                            example: 0
                          enabledPlatformFeatures:
                            type: array
                            items:
                              type: array
                              items: {}
                            example:
                              - - ACTORS
                              - - STORAGE
                              - - PROXY_SERPS
                              - - SCHEDULER
                              - - WEBHOOKS
                          maxMonthlyUsageUsd:
                            type: number
                            example: 9999
                          maxActorMemoryGbytes:
                            type: number
                            example: 32
                          maxMonthlyActorComputeUnits:
                            type: number
                            example: 1000
                          maxMonthlyResidentialProxyGbytes:
                            type: number
                            example: 10
                          maxMonthlyProxySerps:
                            type: number
                            example: 30000
                          maxMonthlyExternalDataTransferGbytes:
                            type: number
                            example: 1000
                          maxActorCount:
                            type: number
                            example: 100
                          maxActorTaskCount:
                            type: number
                            example: 1000
                          dataRetentionDays:
                            type: number
                            example: 14
                          availableProxyGroups:
                            title: AvailableProxyGroups
                            required:
                              - SOMEGROUP
                              - ANOTHERGROUP
                            type: object
                            properties:
                              SOMEGROUP:
                                type: number
                                example: 20
                              ANOTHERGROUP:
                                type: number
                                example: 200
                          teamAccountSeatCount:
                            type: number
                            example: 1
                          supportLevel:
                            type: string
                            example: COMMUNITY
                          availableAddOns:
                            type: array
                            items:
                              type: string
                            example: []
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/users/private-data/get-private-user-data'
  /v2/users/me/usage/monthly:
    get:
      tags:
        - Users/Monthly usage
      summary: Get monthly usage
      description: |
        Returns a complete summary of your usage for the current usage cycle,
        an overall sum, as well as a daily breakdown of usage. It is the same
        information you will see on your account's [Billing page](https://console.apify.com/billing#/usage). The information
        includes your use of storage, data transfer, and request queue usage.

        Using the `date` parameter will show your usage in the usage cycle that
        includes that date.
      operationId: users_me_usage_monthly_get
      parameters:
        - name: date
          in: query
          description: Date in the YYYY-MM-DD format.
          style: form
          explode: true
          schema:
            type: string
            example: '2020-06-14'
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: GetMonthlyUsageResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    title: MonthlyUsage
                    required:
                      - usageCycle
                      - monthlyServiceUsage
                      - dailyServiceUsages
                      - totalUsageCreditsUsdBeforeVolumeDiscount
                      - totalUsageCreditsUsdAfterVolumeDiscount
                    type: object
                    properties:
                      usageCycle:
                        title: UsageCycle
                        required:
                          - startAt
                          - endAt
                        type: object
                        properties:
                          startAt:
                            type: string
                            example: '2022-10-02T00:00:00.000Z'
                          endAt:
                            type: string
                            example: '2022-11-01T23:59:59.999Z'
                      monthlyServiceUsage:
                        title: MonthlyServiceUsage
                        required:
                          - USAGE_ITEM
                        type: object
                        properties:
                          USAGE_ITEM:
                            title: UsageItem
                            required:
                              - quantity
                              - baseAmountUsd
                              - baseUnitPriceUsd
                              - amountAfterVolumeDiscountUsd
                              - priceTiers
                            type: object
                            properties:
                              quantity:
                                type: number
                                example: 2.784475
                              baseAmountUsd:
                                type: number
                                example: 0.69611875
                              baseUnitPriceUsd:
                                type: number
                                example: 0.25
                              amountAfterVolumeDiscountUsd:
                                type: number
                                example: 0.69611875
                              priceTiers:
                                type: array
                                items:
                                  title: PriceTiers
                                  required:
                                    - quantityAbove
                                    - discountPercent
                                    - tierQuantity
                                    - unitPriceUsd
                                    - priceUsd
                                  type: object
                                  properties:
                                    quantityAbove:
                                      type: number
                                      example: 0
                                    discountPercent:
                                      type: number
                                      example: 100
                                    tierQuantity:
                                      type: number
                                      example: 0.39
                                    unitPriceUsd:
                                      type: number
                                      example: 0
                                    priceUsd:
                                      type: number
                                      example: 0
                                description: ''
                      dailyServiceUsages:
                        type: array
                        items:
                          title: DailyServiceUsages
                          required:
                            - date
                            - serviceUsage
                            - totalUsageCreditsUsd
                          type: object
                          properties:
                            date:
                              type: string
                              example: '2022-10-02T00:00:00.000Z'
                            serviceUsage:
                              title: ServiceUsage
                              required:
                                - SERVICE_USAGE_ITEM
                              type: object
                              properties:
                                SERVICE_USAGE_ITEM:
                                  $ref: '#/paths/~1v2~1users~1me~1usage~1monthly/get/responses/200/content/application~1json/schema/properties/data/properties/monthlyServiceUsage/properties/USAGE_ITEM'
                              example:
                                SERVICE_USAGE_ITEM:
                                  quantity: 60
                                  baseAmountUsd: 0.00030000000000000003
                            totalUsageCreditsUsd:
                              type: number
                              example: 0.0474385791970591
                        description: ''
                      totalUsageCreditsUsdBeforeVolumeDiscount:
                        type: number
                        example: 0.786143673840067
                      totalUsageCreditsUsdAfterVolumeDiscount:
                        type: number
                        example: 0.786143673840067
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/users/monthly-usage/get-monthly-usage'
  /v2/users/me/limits:
    get:
      tags:
        - Users/Account and usage limits
      summary: Get limits
      description: |
        Returns a complete summary of your account's limits. It is the same
        information you will see on your account's [Limits page](https://console.apify.com/billing#/limits). The returned data
        includes the current usage cycle, a summary of your limits, and your current usage.
      operationId: users_me_limits_get
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                title: GetLimitsResponse
                required:
                  - data
                type: object
                properties:
                  data:
                    title: AccountLimits
                    required:
                      - monthlyUsageCycle
                      - limits
                      - current
                    type: object
                    properties:
                      monthlyUsageCycle:
                        title: MonthlyUsageCycle
                        required:
                          - startAt
                          - endAt
                        type: object
                        properties:
                          startAt:
                            type: string
                            example: '2022-10-02T00:00:00.000Z'
                          endAt:
                            type: string
                            example: '2022-11-01T23:59:59.999Z'
                      limits:
                        title: Limits
                        required:
                          - maxMonthlyUsageUsd
                          - maxMonthlyActorComputeUnits
                          - maxMonthlyExternalDataTransferGbytes
                          - maxMonthlyProxySerps
                          - maxMonthlyResidentialProxyGbytes
                          - maxActorMemoryGbytes
                          - maxActorCount
                          - maxActorTaskCount
                          - maxConcurrentActorJobs
                          - maxTeamAccountSeatCount
                          - dataRetentionDays
                        type: object
                        properties:
                          maxMonthlyUsageUsd:
                            type: number
                            example: 300
                          maxMonthlyActorComputeUnits:
                            type: number
                            example: 1000
                          maxMonthlyExternalDataTransferGbytes:
                            type: number
                            example: 7
                          maxMonthlyProxySerps:
                            type: number
                            example: 50
                          maxMonthlyResidentialProxyGbytes:
                            type: number
                            example: 0.5
                          maxActorMemoryGbytes:
                            type: number
                            example: 16
                          maxActorCount:
                            type: number
                            example: 100
                          maxActorTaskCount:
                            type: number
                            example: 1000
                          maxConcurrentActorJobs:
                            type: number
                            example: 256
                          maxTeamAccountSeatCount:
                            type: number
                            example: 9
                          dataRetentionDays:
                            type: number
                            example: 90
                      current:
                        title: Current
                        required:
                          - monthlyUsageUsd
                          - monthlyActorComputeUnits
                          - monthlyExternalDataTransferGbytes
                          - monthlyProxySerps
                          - monthlyResidentialProxyGbytes
                          - actorMemoryGbytes
                          - actorCount
                          - actorTaskCount
                          - activeActorJobCount
                          - teamAccountSeatCount
                        type: object
                        properties:
                          monthlyUsageUsd:
                            type: number
                            example: 43
                          monthlyActorComputeUnits:
                            type: number
                            example: 500.784475
                          monthlyExternalDataTransferGbytes:
                            type: number
                            example: 3.00861903931946
                          monthlyProxySerps:
                            type: number
                            example: 34
                          monthlyResidentialProxyGbytes:
                            type: number
                            example: 0.4
                          actorMemoryGbytes:
                            type: number
                            example: 8
                          actorCount:
                            type: number
                            example: 31
                          actorTaskCount:
                            type: number
                            example: 130
                          activeActorJobCount:
                            type: number
                            example: 0
                          teamAccountSeatCount:
                            type: number
                            example: 5
      deprecated: false
      x-legacy-doc-urls:
        - 'https://docs.apify.com/api/v2#/reference/users/account-and-usage-limits/get-limits'
components:
  securitySchemes:
    httpBearer:
      type: http
      scheme: bearer
      description: API authentication token.
    httpBearerActorBuilds:
      type: http
      scheme: bearer
      description: API authentication token. It is only required for private Actors. Builds of public Actors can be queried without any token.
    httpBearerStoreId:
      type: http
      scheme: bearer
      description: API authentication token. It is required only when using the `username~store-name` format for `storeId`.
    httpBearerQueueId:
      type: http
      scheme: bearer
      description: API authentication token. It is required only when using the `username~queue-name` format for `queueId`.
    apiKey:
      type: apiKey
      name: token
      in: query
      description: API authentication token.
    apiKeyActorBuilds:
      type: apiKey
      name: token
      in: query
      description: API authentication token. It is only required for private Actors. Builds of public Actors can be queried without any token.
    apiKeyStoreId:
      type: apiKey
      name: token
      in: query
      description: API authentication token. It is required only when using the `username~store-name` format for `storeId`.
    apiKeyQueueId:
      type: apiKey
      name: token
      in: query
      description: API authentication token. It is required only when using the `username~queue-name` format for `queueId`.
security:
  - httpBearer: []
  - apiKey: []
tags:
  - name: Actors
    x-displayName: Actors
    x-legacy-doc-urls:
      - '#/reference/actors'
    description: |-
      The API endpoints described in this section enable you to manage, build and run Apify actors.
      For more information, see the <a href="https://docs.apify.com/platform/actors">Actor documentation</a>.
  - name: Actors/Actor collection
    x-displayName: Actor collection
    x-parent-tag-name: Actors
    x-legacy-doc-urls:
      - '#/reference/actors/actor-collection'
    x-trait: 'true'
  - name: Actors/Actor object
    x-displayName: Actor object
    x-parent-tag-name: Actors
    x-legacy-doc-urls:
      - '#/reference/actors/actor-object'
    x-trait: 'true'
  - name: Actors/Version collection
    x-displayName: Version collection
    x-parent-tag-name: Actors
    x-legacy-doc-urls:
      - '#/reference/actors/version-collection'
    x-trait: 'true'
  - name: Actors/Version object
    x-displayName: Version object
    x-parent-tag-name: Actors
    x-legacy-doc-urls:
      - '#/reference/actors/version-object'
    x-trait: 'true'
    description: |-
      The **Version object** contains the source code of a specific version of an actor.
      The `sourceType` property indicates where the source code is hosted, and based
      on its value the Version object has the following additional property:
  - name: Actors/Environment variable collection
    x-displayName: Environment variable collection
    x-parent-tag-name: Actors
    x-legacy-doc-urls:
      - '#/reference/actors/environment-variable-collection'
    x-trait: 'true'
  - name: Actors/Environment variable object
    x-displayName: Environment variable object
    x-parent-tag-name: Actors
    x-legacy-doc-urls:
      - '#/reference/actors/environment-variable-object'
    x-trait: 'true'
  - name: Actors/Webhook collection
    x-displayName: Webhook collection
    x-parent-tag-name: Actors
    x-legacy-doc-urls:
      - '#/reference/actors/webhook-collection'
    x-trait: 'true'
  - name: Actors/Build collection
    x-displayName: Build collection
    x-parent-tag-name: Actors
    x-legacy-doc-urls:
      - '#/reference/actors/build-collection'
    x-trait: 'true'
  - name: Actors/Build object
    x-displayName: Build object
    x-parent-tag-name: Actors
    x-legacy-doc-urls:
      - '#/reference/actors/build-object'
    x-trait: 'true'
    description: '**[DEPRECATED]** API endpoints related to build of the actor were moved under new namespace [`actor-builds`](#/reference/actor-builds).'
  - name: Actors/Abort build
    x-displayName: Abort build
    x-parent-tag-name: Actors
    x-legacy-doc-urls:
      - '#/reference/actors/abort-build'
    x-trait: 'true'
    description: '**[DEPRECATED]** API endpoints related to build of the actor were moved under new namespace [`actor-builds`](#/reference/actor-builds).'
  - name: Actors/Run collection
    x-displayName: Run collection
    x-parent-tag-name: Actors
    x-legacy-doc-urls:
      - '#/reference/actors/run-collection'
    x-trait: 'true'
  - name: Actors/Run actor synchronously
    x-displayName: Run actor synchronously
    x-parent-tag-name: Actors
    x-legacy-doc-urls:
      - '#/reference/actors/run-actor-synchronously'
    x-trait: 'true'
  - name: Actors/Run Actor synchronously and get dataset items
    x-displayName: Run Actor synchronously and get dataset items
    x-parent-tag-name: Actors
    x-legacy-doc-urls:
      - '#/reference/actors/run-actor-synchronously-and-get-dataset-items'
    x-trait: 'true'
  - name: Actors/Run object
    x-displayName: Run object
    x-parent-tag-name: Actors
    x-legacy-doc-urls:
      - '#/reference/actors/run-object'
    x-trait: 'true'
    description: '**[DEPRECATED]** API endpoints related to run of the actor were moved under new namespace [`actor-runs`](#/reference/actor-runs).'
  - name: Actors/Abort run
    x-displayName: Abort run
    x-parent-tag-name: Actors
    x-legacy-doc-urls:
      - '#/reference/actors/abort-run'
    x-trait: 'true'
    description: '**[DEPRECATED]** API endpoints related to run of the actor were moved under new namespace [`actor-runs`](#/reference/actor-runs).'
  - name: Actors/Metamorph run
    x-displayName: Metamorph run
    x-parent-tag-name: Actors
    x-legacy-doc-urls:
      - '#/reference/actors/metamorph-run'
    x-trait: 'true'
    description: '**[DEPRECATED]** API endpoints related to run of the actor were moved under new namespace [`actor-runs`](#/reference/actor-runs).'
  - name: Actors/Resurrect run
    x-displayName: Resurrect run
    x-parent-tag-name: Actors
    x-legacy-doc-urls:
      - '#/reference/actors/resurrect-run'
    x-trait: 'true'
    description: '**[DEPRECATED]** API endpoints related to run of the actor were moved under new namespace [`actor-runs`](#/reference/actor-runs).'
  - name: Actors/Last run object and its storages
    x-displayName: Last run object and its storages
    x-parent-tag-name: Actors
    x-legacy-doc-urls:
      - '#/reference/actors/last-run-object-and-its-storages'
    x-trait: 'true'
    description: |-
      This is not a single endpoint, but an entire group of endpoints that lets you to
      retrieve and manage the last run of given actor or any of its default storages.
      All the endpoints require an authentication token.


  - name: Actor tasks
    x-displayName: Actor tasks
    x-legacy-doc-urls:
      - '#/reference/actor-tasks'
    description: |-
      The API endpoints described in this section enable you to manage and run Apify actor tasks
  - name: Actor tasks/Task collection
    x-displayName: Task collection
    x-parent-tag-name: Actor tasks
    x-legacy-doc-urls:
      - '#/reference/actor-tasks/task-collection'
    x-trait: 'true'
  - name: Actor tasks/Task object
    x-displayName: Task object
    x-parent-tag-name: Actor tasks
    x-legacy-doc-urls:
      - '#/reference/actor-tasks/task-object'
    x-trait: 'true'
  - name: Actor tasks/Task input object
    x-displayName: Task input object
    x-parent-tag-name: Actor tasks
    x-legacy-doc-urls:
      - '#/reference/actor-tasks/task-input-object'
    x-trait: 'true'
  - name: Actor tasks/Webhook collection
    x-displayName: Webhook collection
    x-parent-tag-name: Actor tasks
    x-legacy-doc-urls:
      - '#/reference/actor-tasks/webhook-collection'
    x-trait: 'true'
  - name: Actor tasks/Run collection
    x-displayName: Run collection
    x-parent-tag-name: Actor tasks
    x-legacy-doc-urls:
      - '#/reference/actor-tasks/run-collection'
    x-trait: 'true'
  - name: Actor tasks/Run task synchronously
    x-displayName: Run task synchronously
    x-parent-tag-name: Actor tasks
    x-legacy-doc-urls:
      - '#/reference/actor-tasks/run-task-synchronously'
    x-trait: 'true'
  - name: Actor tasks/Run task synchronously and get dataset items
    x-displayName: Run task synchronously and get dataset items
    x-parent-tag-name: Actor tasks
    x-legacy-doc-urls:
      - '#/reference/actor-tasks/run-task-synchronously-and-get-dataset-items'
    x-trait: 'true'
  - name: Actor tasks/Last run object and its storages
    x-displayName: Last run object and its storages
    x-parent-tag-name: Actor tasks
    x-legacy-doc-urls:
      - '#/reference/actor-tasks/last-run-object-and-its-storages'
    x-trait: 'true'
    description: |-
      This is not a single endpoint, but an entire group of endpoints that lets you to
      retrieve and manage the last run of given actor task or any of its default storages.
      All the endpoints require an authentication token.
  - name: Actor runs
    x-displayName: Actor runs
    x-legacy-doc-urls:
      - '#/reference/actor-runs'
    description: |-
      The API endpoints described in this section enable you to manage Apify actor runs.
  - name: Actor runs/Run collection
    x-displayName: Run collection
    x-parent-tag-name: Actor runs
    x-legacy-doc-urls:
      - '#/reference/actor-runs/run-collection'
    x-trait: 'true'
  - name: Actor runs/Run object and its storages
    x-displayName: Run object and its storages
    x-parent-tag-name: Actor runs
    x-legacy-doc-urls:
      - '#/reference/actor-runs/run-object-and-its-storages'
    x-trait: 'true'
    description: |-
      This is not a single endpoint, but an entire group of endpoints that lets you
      retrieve the run or any of its default storages.
  - name: Actor runs/Delete run
    x-displayName: Delete run
    x-parent-tag-name: Actor runs
    x-legacy-doc-urls:
      - '#/reference/actor-runs/delete-run'
    x-trait: 'true'
  - name: Actor runs/Abort run
    x-displayName: Abort run
    x-parent-tag-name: Actor runs
    x-legacy-doc-urls:
      - '#/reference/actor-runs/abort-run'
    x-trait: 'true'
  - name: Actor runs/Metamorph run
    x-displayName: Metamorph run
    x-parent-tag-name: Actor runs
    x-legacy-doc-urls:
      - '#/reference/actor-runs/metamorph-run'
    x-trait: 'true'
  - name: Actor runs/Reboot run
    x-displayName: Reboot run
    x-parent-tag-name: Actor runs
    x-legacy-doc-urls:
      - '#/reference/actor-runs/reboot-run'
    x-trait: 'true'
  - name: Actor runs/Resurrect run
    x-displayName: Resurrect run
    x-parent-tag-name: Actor runs
    x-legacy-doc-urls:
      - '#/reference/actor-runs/resurrect-run'
    x-trait: 'true'
  - name: Actor runs/Update status message
    x-displayName: Update status message
    x-parent-tag-name: Actor runs
    x-legacy-doc-urls:
      - '#/reference/actor-runs/update-status-message'
    x-trait: 'true'
  - name: Actor builds
    x-displayName: Actor builds
    x-legacy-doc-urls:
      - '#/reference/actor-builds'
    description: |-
      The API endpoints described in this section enable you to manage Apify actor builds.

      Note that if any returned build object contains usage in dollars, your effective unit pricing at the time of query
      has been used for computation of this dollar equivalent, and hence it should be used only for informative purposes.
      You can learn more about platform usage in the <a href="https://docs.apify.com/platform/actors/running/usage-and-resources#usage">documentation</a>.
  - name: Actor builds/Build collection
    x-displayName: Build collection
    x-parent-tag-name: Actor builds
    x-legacy-doc-urls:
      - '#/reference/actor-builds/build-collection'
    x-trait: 'true'
  - name: Actor builds/Build object
    x-displayName: Build object
    x-parent-tag-name: Actor builds
    x-legacy-doc-urls:
      - '#/reference/actor-builds/build-object'
    x-trait: 'true'
  - name: Actor builds/Delete build
    x-displayName: Delete build
    x-parent-tag-name: Actor builds
    x-legacy-doc-urls:
      - '#/reference/actor-builds/delete-build'
    x-trait: 'true'
  - name: Actor builds/Abort build
    x-displayName: Abort build
    x-parent-tag-name: Actor builds
    x-legacy-doc-urls:
      - '#/reference/actor-builds/abort-build'
    x-trait: 'true'
  - name: Actor builds/Build log
    x-displayName: Build log
    x-parent-tag-name: Actor builds
    x-legacy-doc-urls:
      - '#/reference/actor-builds/build-log'
    x-trait: 'true'
    description: 'Check out [Logs](#/reference/logs) for full reference.'
  - name: Key-value stores
    x-displayName: Key-value stores
    x-legacy-doc-urls:
      - '#/reference/key-value-stores'
    description: |-
      This section describes API endpoints to manage Key-value stores.
      Key-value store is a simple storage for saving and reading data records or files.
      Each data record is represented by a unique key and associated with a MIME content type.
      Key-value stores are ideal for saving screenshots, actor inputs and outputs, web pages,
      PDFs or to persist the state of crawlers.
      For more information, see the <a href="https://docs.apify.com/platform/storage/key-value-store">Key-value store documentation</a>.

      Note that some of the endpoints do not require the authentication token, the calls
      are authenticated using a hard-to-guess ID of the key-value store.
  - name: Key-value stores/Store collection
    x-displayName: Store collection
    x-parent-tag-name: Key-value stores
    x-legacy-doc-urls:
      - '#/reference/key-value-stores/store-collection'
    x-trait: 'true'
  - name: Key-value stores/Store object
    x-displayName: Store object
    x-parent-tag-name: Key-value stores
    x-legacy-doc-urls:
      - '#/reference/key-value-stores/store-object'
    x-trait: 'true'
  - name: Key-value stores/Key collection
    x-displayName: Key collection
    x-parent-tag-name: Key-value stores
    x-legacy-doc-urls:
      - '#/reference/key-value-stores/key-collection'
    x-trait: 'true'
  - name: Key-value stores/Record
    x-displayName: Record
    x-parent-tag-name: Key-value stores
    x-legacy-doc-urls:
      - '#/reference/key-value-stores/record'
    x-trait: 'true'
  - name: Datasets
    x-displayName: Datasets
    x-legacy-doc-urls:
      - '#/reference/datasets'
    description: |-
      This section describes API endpoints to manage Datasets.

      Dataset is a storage for structured data, where each record stored has the same attributes,
      such as online store products or real estate offers. You can imagine it as a table,
      where each object is a row and its attributes are columns. Dataset is an append-only
      storage - you can only add new records to it but you cannot modify or remove existing
      records. Typically it is used to store crawling results.
      For more information, see the <a href="https://docs.apify.com/platform/storage/dataset">Datasets documentation</a>.

      Note that some of the endpoints do not require the authentication token, the calls
      are authenticated using the hard-to-guess ID of the dataset.
  - name: Datasets/Dataset collection
    x-displayName: Dataset collection
    x-parent-tag-name: Datasets
    x-legacy-doc-urls:
      - '#/reference/datasets/dataset-collection'
    x-trait: 'true'
  - name: Datasets/Dataset
    x-displayName: Dataset
    x-parent-tag-name: Datasets
    x-legacy-doc-urls:
      - '#/reference/datasets/dataset'
    x-trait: 'true'
  - name: Datasets/Item collection
    x-displayName: Item collection
    x-parent-tag-name: Datasets
    x-legacy-doc-urls:
      - '#/reference/datasets/item-collection'
    x-trait: 'true'
  - name: Request queues
    x-displayName: Request queues
    x-legacy-doc-urls:
      - '#/reference/request-queues'
    description: |-
      This section describes API endpoints to manage request queues.
      Request queue is a storage for a queue of HTTP URLs to crawl, which is typically used for deep crawling of websites where you
      start with several URLs and then recursively follow links to other pages.
      The storage supports both breadth-first and depth-first crawling orders.
      For more information, see the <a href="https://docs.apify.com/platform/storage/request-queue">Request queue documentation</a>.

      Note that some of the endpoints do not require the authentication token, the calls
      are authenticated using the hard-to-guess ID of the queue.
  - name: Request queues/Queue collection
    x-displayName: Queue collection
    x-parent-tag-name: Request queues
    x-legacy-doc-urls:
      - '#/reference/request-queues/queue-collection'
    x-trait: 'true'
  - name: Request queues/Queue
    x-displayName: Queue
    x-parent-tag-name: Request queues
    x-legacy-doc-urls:
      - '#/reference/request-queues/queue'
    x-trait: 'true'
  - name: Request queues/Request collection
    x-displayName: Request collection
    x-parent-tag-name: Request queues
    x-legacy-doc-urls:
      - '#/reference/request-queues/request-collection'
    x-trait: 'true'
  - name: Request queues/Request
    x-displayName: Request
    x-parent-tag-name: Request queues
    x-legacy-doc-urls:
      - '#/reference/request-queues/request'
    x-trait: 'true'
  - name: Request queues/Request lock
    x-displayName: Request lock
    x-parent-tag-name: Request queues
    x-legacy-doc-urls:
      - '#/reference/request-queues/request-lock'
    x-trait: 'true'
  - name: Request queues/Queue head
    x-displayName: Queue head
    x-parent-tag-name: Request queues
    x-legacy-doc-urls:
      - '#/reference/request-queues/queue-head'
    x-trait: 'true'
  - name: Request queues/Queue head with locks
    x-displayName: Queue head with locks
    x-parent-tag-name: Request queues
    x-legacy-doc-urls:
      - '#/reference/request-queues/queue-head-with-locks'
    x-trait: 'true'
  - name: Request queues/Batch request operations
    x-displayName: Batch request operations
    x-parent-tag-name: Request queues
    x-legacy-doc-urls:
      - '#/reference/request-queues/batch-request-operations'
    x-trait: 'true'
  - name: Webhooks
    x-displayName: Webhooks
    x-legacy-doc-urls:
      - '#/reference/webhooks'
    description: |-
      This section describes API endpoints to manage webhooks.

      Webhooks provide an easy and reliable way to configure the Apify platform
      to carry out an action (e.g. a HTTP request to another service) when a certain system event occurs.
      For example, you can use webhooks to start another actor when an actor run finishes or fails.
      For more information see <a href="https://docs.apify.com/platform/integrations/webhooks">Webhooks documentation</a>.
  - name: Webhooks/Webhook collection
    x-displayName: Webhook collection
    x-parent-tag-name: Webhooks
    x-legacy-doc-urls:
      - '#/reference/webhooks/webhook-collection'
    x-trait: 'true'
  - name: Webhooks/Webhook object
    x-displayName: Webhook object
    x-parent-tag-name: Webhooks
    x-legacy-doc-urls:
      - '#/reference/webhooks/webhook-object'
    x-trait: 'true'
  - name: Webhooks/Webhook test
    x-displayName: Webhook test
    x-parent-tag-name: Webhooks
    x-legacy-doc-urls:
      - '#/reference/webhooks/webhook-test'
    x-trait: 'true'
  - name: Webhooks/Dispatches collection
    x-displayName: Dispatches collection
    x-parent-tag-name: Webhooks
    x-legacy-doc-urls:
      - '#/reference/webhooks/dispatches-collection'
    x-trait: 'true'
  - name: Webhook dispatches
    x-displayName: Webhook dispatches
    x-legacy-doc-urls:
      - '#/reference/webhook-dispatches'
    description: This section describes API endpoints to get webhook dispatches.
  - name: Webhook dispatches/Webhook dispatches collection
    x-displayName: Webhook dispatches collection
    x-parent-tag-name: Webhook dispatches
    x-legacy-doc-urls:
      - '#/reference/webhook-dispatches/webhook-dispatches-collection'
    x-trait: 'true'
  - name: Webhook dispatches/Webhook dispatch object
    x-displayName: Webhook dispatch object
    x-parent-tag-name: Webhook dispatches
    x-legacy-doc-urls:
      - '#/reference/webhook-dispatches/webhook-dispatch-object'
    x-trait: 'true'
  - name: Schedules
    x-displayName: Schedules
    x-legacy-doc-urls:
      - '#/reference/schedules'
    description: |-
      This section describes API endpoints for managing schedules.

      Schedules are used to automatically start your actors at certain times. Each schedule can be associated with a number of actors and actor tasks. It is also possible
      to override the settings of each actor (task) similarly to when invoking the actor (task) using the API.
      For more information, see <a href="https://docs.apify.com/platform/schedules">Schedules documentation</a>.

      Each schedule is assigned actions for it to perform. Actions can be of two types - `RUN_ACTOR` and `RUN_ACTOR_TASK`. For details, see the documentation of the
      [Get schedule](#/reference/schedules/schedule-object/get-schedule) endpoint.
  - name: Schedules/Schedules collection
    x-displayName: Schedules collection
    x-parent-tag-name: Schedules
    x-legacy-doc-urls:
      - '#/reference/schedules/schedules-collection'
    x-trait: 'true'
  - name: Schedules/Schedule object
    x-displayName: Schedule object
    x-parent-tag-name: Schedules
    x-legacy-doc-urls:
      - '#/reference/schedules/schedule-object'
    x-trait: 'true'
  - name: Schedules/Schedule log
    x-displayName: Schedule log
    x-parent-tag-name: Schedules
    x-legacy-doc-urls:
      - '#/reference/schedules/schedule-log'
    x-trait: 'true'
  - name: Store
    x-displayName: Store
    x-legacy-doc-urls:
      - '#/reference/store'
    description: |-
      [Apify Store](https://apify.com/store) is home to hundreds of public Actors available to the Apify community.
      The API endpoints described in this section are used to retrieve these Actors.

      Note that the endpoints do not require the authentication token.
  - name: Store/Store Actors collection
    x-displayName: Store Actors collection
    x-parent-tag-name: Store
    x-legacy-doc-urls:
      - '#/reference/store/store-actors-collection'
    x-trait: 'true'
  - name: Logs
    x-displayName: Logs
    x-legacy-doc-urls:
      - '#/reference/logs'
    description: |-
      The API endpoints described in this section are used the download the logs
      generated by actor builds and runs. Note that only the trailing 5M characters
      of the log are stored, the rest is discarded.

      Note that the endpoints do not require the authentication token, the calls
      are authenticated using a hard-to-guess ID of the actor build or run.
  - name: Logs/Log
    x-displayName: Log
    x-parent-tag-name: Logs
    x-legacy-doc-urls:
      - '#/reference/logs/log'
    x-trait: 'true'
  - name: Users
    x-displayName: Users
    x-legacy-doc-urls:
      - '#/reference/users'
    description: The API endpoints described in this section return information about user accounts.
  - name: Users/Public data
    x-displayName: Public data
    x-parent-tag-name: Users
    x-legacy-doc-urls:
      - '#/reference/users/public-data'
    x-trait: 'true'
  - name: Users/Private data
    x-displayName: Private data
    x-parent-tag-name: Users
    x-legacy-doc-urls:
      - '#/reference/users/private-data'
    x-trait: 'true'
  - name: Users/Monthly usage
    x-displayName: Monthly usage
    x-parent-tag-name: Users
    x-legacy-doc-urls:
      - '#/reference/users/monthly-usage'
    x-trait: 'true'
  - name: Users/Account and usage limits
    x-displayName: Account and usage limits
    x-parent-tag-name: Users
    x-legacy-doc-urls:
      - '#/reference/users/account-and-usage-limits'
    x-trait: 'true'
x-tagGroups:
  - name: Actors
    tags:
      - Actors
      - Actors/Actor collection
      - Actors/Actor object
      - Actors/Version collection
      - Actors/Version object
      - Actors/Environment variable collection
      - Actors/Environment variable object
      - Actors/Webhook collection
      - Actors/Build collection
      - Actors/Build object
      - Actors/Abort build
      - Actors/Run collection
      - Actors/Run actor synchronously
      - Actors/Run Actor synchronously and get dataset items
      - Actors/Run object
      - Actors/Abort run
      - Actors/Metamorph run
      - Actors/Resurrect run
      - Actors/Last run object and its storages
  - name: Actor tasks
    tags:
      - Actor tasks
      - Actor tasks/Task collection
      - Actor tasks/Task object
      - Actor tasks/Task input object
      - Actor tasks/Webhook collection
      - Actor tasks/Run collection
      - Actor tasks/Run task synchronously
      - Actor tasks/Run task synchronously and get dataset items
      - Actor tasks/Last run object and its storages
  - name: Actor runs
    tags:
      - Actor runs
      - Actor runs/Run collection
      - Actor runs/Run object and its storages
      - Actor runs/Delete run
      - Actor runs/Abort run
      - Actor runs/Metamorph run
      - Actor runs/Reboot run
      - Actor runs/Resurrect run
      - Actor runs/Update status message
  - name: Actor builds
    tags:
      - Actor builds
      - Actor builds/Build collection
      - Actor builds/Build object
      - Actor builds/Delete build
      - Actor builds/Abort build
      - Actor builds/Build log
  - name: Key-value stores
    tags:
      - Key-value stores
      - Key-value stores/Store collection
      - Key-value stores/Store object
      - Key-value stores/Key collection
      - Key-value stores/Record
  - name: Datasets
    tags:
      - Datasets
      - Datasets/Dataset collection
      - Datasets/Dataset
      - Datasets/Item collection
  - name: Request queues
    tags:
      - Request queues
      - Request queues/Queue collection
      - Request queues/Queue
      - Request queues/Request collection
      - Request queues/Request
      - Request queues/Request lock
      - Request queues/Queue head
      - Request queues/Queue head with locks
      - Request queues/Batch request operations
  - name: Webhooks
    tags:
      - Webhooks
      - Webhooks/Webhook collection
      - Webhooks/Webhook object
      - Webhooks/Webhook test
      - Webhooks/Dispatches collection
  - name: Webhook dispatches
    tags:
      - Webhook dispatches
      - Webhook dispatches/Webhook dispatches collection
      - Webhook dispatches/Webhook dispatch object
  - name: Schedules
    tags:
      - Schedules
      - Schedules/Schedules collection
      - Schedules/Schedule object
      - Schedules/Schedule log
  - name: Store
    tags:
      - Store
      - Store/Store Actors collection
  - name: Logs
    tags:
      - Logs
      - Logs/Log
  - name: Users
    tags:
      - Users
      - Users/Public data
      - Users/Private data
      - Users/Monthly usage
      - Users/Account and usage limits
